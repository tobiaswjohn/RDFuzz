( 
  forall <defTriple> f = "{<IRI> father} a :Father.\n":
    not exists <defTriple> m = "{<IRI> mother} a :Mother.\n": father = mother
)
and
( 
  forall <defTriple> mm = "{<IRI> mmother} a :Mother.\n":
    not exists <defTriple> ff = "{<IRI> ffather} a :Father.\n": ffather = mmother
)
and
#( 
#  forall <defTriple> fff = "{<IRI> fffather} a :Father.\n":
#     exists <parTriple> p = "{<IRI> father2} :parentOf {<IRI> person}.\n": 
#       exists <defTriple> pp = "{<IRI> person2} a :Person.\n": (fffather = father2 and person = person2)
#)  # From SHACL, so no "a :Father" and "a :Mother"
#and
( 
  forall <defTriple> fff = "{<IRI> fffather} a :Father.\n":
     exists <parTriple> p = "{<IRI> father2} :parentOf {<IRI> person}.\n": 
       exists <defTriple> pp = "{<IRI> person2} a {<class> c}.\n": (fffather = father2 and person = person2 and (c = ":Father" or c = ":Mother" or c = ":Person"))
)  # From OWL; so full encoding of hierarchy
and
(
     forall <parTriple> p = "{<IRI> p1} :parentOf {<IRI> p2}.\n": not p1 = p2 
)
