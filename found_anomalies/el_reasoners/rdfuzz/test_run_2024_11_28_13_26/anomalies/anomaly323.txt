Found anomalies while testing file ../found_anomalies/el_reasoners/rdfuzz/test_run_2024_11_28_13_26/test_ontologies/test1091.owl

Anomaly 1: Inference differentiation between HERMIT and ELK:
	additional axioms HERMIT: [SubClassOf(owl:Thing owl:Nothing)]
	additional axioms ELK: [SubObjectPropertyOf(<http://www.example.org/reasonerTester#psim> owl:topObjectProperty), SubObjectPropertyOf(<http://www.example.org/reasonerTester#qnonsim> owl:topObjectProperty), SubClassOf(<http://www.example.org/reasonerTester#D> owl:Thing), ClassAssertion(owl:Thing <http://www.example.org/reasonerTester#a>), SubObjectPropertyOf(<http://www.example.org/reasonerTester#pnonsim> owl:topObjectProperty), SubObjectPropertyOf(<http://www.example.org/reasonerTester#rnonsim> owl:topObjectProperty), SubClassOf(<http://www.example.org/reasonerTester#C> owl:Thing), ClassAssertion(owl:Thing <http://www.example.org/reasonerTester#b>), SubObjectPropertyOf(<http://www.example.org/reasonerTester#qsim> owl:topObjectProperty), SubObjectPropertyOf(<http://www.example.org/reasonerTester#rsim> owl:topObjectProperty), EquivalentObjectProperties(<http://www.example.org/reasonerTester#pnonsim> <http://www.example.org/reasonerTester#ssim>), SubClassOf(<http://www.example.org/reasonerTester#B> owl:Thing), ClassAssertion(owl:Thing <http://www.example.org/reasonerTester#c>), SubObjectPropertyOf(<http://www.example.org/reasonerTester#snonsim> owl:topObjectProperty), SubObjectPropertyOf(<http://www.example.org/reasonerTester#ssim> owl:topObjectProperty), SubClassOf(<http://www.example.org/reasonerTester#A> owl:Thing), ClassAssertion(owl:Thing <http://www.example.org/reasonerTester#d>)]

Anomaly 2: Inference differentiation between ELK and OPENLLET:
	additional axioms ELK: [SubObjectPropertyOf(<http://www.example.org/reasonerTester#psim> owl:topObjectProperty), SubObjectPropertyOf(<http://www.example.org/reasonerTester#qnonsim> owl:topObjectProperty), SubClassOf(<http://www.example.org/reasonerTester#D> owl:Thing), ClassAssertion(owl:Thing <http://www.example.org/reasonerTester#a>), SubObjectPropertyOf(<http://www.example.org/reasonerTester#pnonsim> owl:topObjectProperty), SubObjectPropertyOf(<http://www.example.org/reasonerTester#rnonsim> owl:topObjectProperty), SubClassOf(<http://www.example.org/reasonerTester#C> owl:Thing), ClassAssertion(owl:Thing <http://www.example.org/reasonerTester#b>), SubObjectPropertyOf(<http://www.example.org/reasonerTester#qsim> owl:topObjectProperty), SubObjectPropertyOf(<http://www.example.org/reasonerTester#rsim> owl:topObjectProperty), EquivalentObjectProperties(<http://www.example.org/reasonerTester#pnonsim> <http://www.example.org/reasonerTester#ssim>), SubClassOf(<http://www.example.org/reasonerTester#B> owl:Thing), ClassAssertion(owl:Thing <http://www.example.org/reasonerTester#c>), SubObjectPropertyOf(<http://www.example.org/reasonerTester#snonsim> owl:topObjectProperty), SubObjectPropertyOf(<http://www.example.org/reasonerTester#ssim> owl:topObjectProperty), SubClassOf(<http://www.example.org/reasonerTester#A> owl:Thing), ClassAssertion(owl:Thing <http://www.example.org/reasonerTester#d>)]
	additional axioms OPENLLET: [SubClassOf(owl:Thing owl:Nothing)]

Anomaly 3: Consistency differentiation:
	OPENLLET: not consistent, ELK: consistent

Anomaly 4: Consistency differentiation:
	HERMIT: not consistent, ELK: consistent


––––––––––––––––––––––––––––––––––––––––––––
–––––––––––    Ontology File    ––––––––––––
––––––––––––––––––––––––––––––––––––––––––––

Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (


Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


EquivalentObjectProperties(Annotation(Annotation( :anr :annotation2) Annotation( :anq :annotation3)  :anr :annotation3) Annotation( :anq :annotation4) Annotation( :anp :annotation1) Annotation( :anr :annotation3) Annotation( :ans :annotation3)  :ssim :pnonsim )

DatatypeDefinition( :dtb rdfs:Literal)

EquivalentClasses( ObjectOneOf(:a) DataHasValue(:ds "s3"^^xsd:string) ObjectIntersectionOf(DataSomeValuesFrom(:dp DataOneOf("s4"@no) ) ObjectHasSelf(:rsim) :D ObjectSomeValuesFrom(:snonsim :A) ObjectHasValue(:rnonsim :b) :C ObjectHasValue(:qsim :c) :B ObjectOneOf(:d) DataSomeValuesFrom(:dr DataIntersectionOf(rdf:PlainLiteral xsd:string DataOneOf("s1"@fr)  ) ) DataHasValue(:dq "s2") DataSomeValuesFrom(:dp DataIntersectionOf(DataOneOf("s1")  DataOneOf("s1")  xsd:string rdf:PlainLiteral ) ) ObjectSomeValuesFrom(:qnonsim :B) ObjectSomeValuesFrom(:qnonsim :D) ObjectSomeValuesFrom(:psim :B) ) )

ObjectPropertyAssertion(Annotation(Annotation( :ans :annotation1) Annotation( :ans :annotation4)  :ans :annotation3) Annotation( :anr :annotation4) Annotation( :anq :annotation1)  :qsim :a :c)

SubClassOf( DataHasValue(:dq "s2"@de) DataHasValue(:dq "s4"@en))

DisjointClasses(Annotation(Annotation(Annotation( :ans :annotation3) Annotation( :anp :annotation1)  :anp :annotation4) Annotation( :anp :annotation2) Annotation( :anp :annotation1) Annotation( :anq :annotation3)  :anp :annotation2)  ObjectSomeValuesFrom(:qnonsim ObjectOneOf(:c)) ObjectHasValue(:qnonsim :c) )

DatatypeDefinition( :dta xsd:string)

DisjointClasses( ObjectSomeValuesFrom(:psim DataSomeValuesFrom(:dq DataIntersectionOf(rdf:PlainLiteral rdfs:Literal ) )) ObjectIntersectionOf(DataSomeValuesFrom(:dq rdfs:Literal) ObjectHasValue(:rnonsim :d) ) ObjectHasSelf(:ssim) ObjectSomeValuesFrom(:rnonsim :A) ) 
)
