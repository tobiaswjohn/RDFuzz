Found anomalies while testing file ../found_anomalies/el_reasoners/rdfuzz/test_run_2024_11_28_13_26/test_ontologies/test608.owl

Anomaly 1: Inference differentiation between HERMIT and OPENLLET:
	additional axioms HERMIT: [DataPropertyAssertion(<http://www.example.org/reasonerTester#ds> <http://www.example.org/reasonerTester#b> "s2"^^<internal:anonymous-constants>)]
	additional axioms OPENLLET: [FunctionalDataProperty(<http://www.example.org/reasonerTester#dr>), DataPropertyAssertion(<http://www.example.org/reasonerTester#ds> <http://www.example.org/reasonerTester#b> "s2"^^rdfs:Literal)]


––––––––––––––––––––––––––––––––––––––––––––
–––––––––––    Ontology File    ––––––––––––
––––––––––––––––––––––––––––––––––––––––––––

Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (

Annotation(Annotation(Annotation( :ans :annotation4) Annotation( :anp :annotation2)  :ans :annotation4) Annotation(Annotation( :anp :annotation1)  :anq :annotation3) Annotation( :anr :annotation4)  :anr :annotation1) 
Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


DataPropertyAssertion( :ds :b "s2"^^rdfs:Literal)

DifferentIndividuals(Annotation( :anp :annotation3)  :c :d )

DatatypeDefinition( :dta rdf:PlainLiteral)

DataPropertyRange( :dr DataIntersectionOf(DataOneOf("s1")  xsd:string ) )

SubClassOf( ObjectHasValue(:qsim :a) ObjectSomeValuesFrom(:rnonsim :C))

FunctionalDataProperty(Annotation( :anp :annotation2)  :dp)

ObjectPropertyAssertion(Annotation(Annotation( :anq :annotation2)  :anq :annotation4) Annotation(Annotation( :ans :annotation1) Annotation(Annotation(Annotation( :anr :annotation3)  :anp :annotation4)  :anr :annotation1) Annotation(Annotation( :ans :annotation3) Annotation( :anq :annotation2)  :anp :annotation4) Annotation( :ans :annotation2)  :anr :annotation1)  :snonsim :a :c)

EquivalentObjectProperties(Annotation(Annotation( :ans :annotation4)  :anq :annotation1) Annotation( :anq :annotation2)  :ssim :pnonsim )

HasKey( DataHasValue(:dq "s4"@en) ( :rsim :psim :psim :qnonsim :qnonsim :snonsim :qsim :qsim  ) ( :dq :dq  ) )

DisjointClasses(Annotation( :anr :annotation1)  ObjectIntersectionOf(ObjectHasSelf(:rsim) ObjectOneOf(:d) :A ) DataSomeValuesFrom(:dp rdfs:Literal) )

DataPropertyAssertion(Annotation( :ans :annotation4)  :dq :a "s3"@fr)

DatatypeDefinition(Annotation(Annotation(Annotation(Annotation(Annotation( :ans :annotation3) Annotation( :ans :annotation2) Annotation( :anq :annotation1)  :anp :annotation3)  :ans :annotation3)  :anr :annotation1)  :anp :annotation4)  :dtc DataIntersectionOf(DataOneOf("s2"@no)  DataOneOf("s3"@de)  DataOneOf("s3"@no)  DataOneOf("s4"@fr)  DataOneOf("s2"^^rdfs:Literal)  xsd:string DataIntersectionOf(DataOneOf("s3")  rdf:PlainLiteral )  ) )

ObjectPropertyRange(Annotation(Annotation(Annotation(Annotation(Annotation(Annotation(Annotation(Annotation( :ans :annotation2) Annotation( :anr :annotation4)  :anp :annotation4)  :anp :annotation1)  :ans :annotation4)  :anq :annotation4) Annotation(Annotation(Annotation(Annotation( :ans :annotation1) Annotation( :anq :annotation2)  :ans :annotation1)  :ans :annotation3)  :anr :annotation2)  :anr :annotation1)  :anq :annotation2)  :anr :annotation1)  :rnonsim :B)

HasKey( :D ( :rsim  ) ( ) ) 
)
