Found anomalies while testing file ../found_anomalies/el_reasoners/rdfuzz/test_run_2024_11_28_13_26/test_ontologies/test728.owl

Anomaly 1: Inference differentiation between HERMIT and ELK:
	additional axioms HERMIT: [SubClassOf(owl:Thing owl:Nothing)]
	additional axioms ELK: [SubObjectPropertyOf(<http://www.example.org/reasonerTester#psim> owl:topObjectProperty), SubClassOf(<http://www.example.org/reasonerTester#D> owl:Thing), SubObjectPropertyOf(<http://www.example.org/reasonerTester#qnonsim> owl:topObjectProperty), ClassAssertion(owl:Thing <http://www.example.org/reasonerTester#a>), EquivalentClasses(<http://www.example.org/reasonerTester#B> <http://www.example.org/reasonerTester#C>), SubObjectPropertyOf(<http://www.example.org/reasonerTester#pnonsim> owl:topObjectProperty), SubClassOf(<http://www.example.org/reasonerTester#C> owl:Thing), SubObjectPropertyOf(<http://www.example.org/reasonerTester#rnonsim> owl:topObjectProperty), ClassAssertion(owl:Thing <http://www.example.org/reasonerTester#b>), SubObjectPropertyOf(<http://www.example.org/reasonerTester#rsim> owl:topObjectProperty), SubClassOf(<http://www.example.org/reasonerTester#B> owl:Thing), SubObjectPropertyOf(<http://www.example.org/reasonerTester#qsim> <http://www.example.org/reasonerTester#ssim>), ClassAssertion(owl:Thing <http://www.example.org/reasonerTester#c>), SubObjectPropertyOf(<http://www.example.org/reasonerTester#snonsim> owl:topObjectProperty), SubClassOf(<http://www.example.org/reasonerTester#A> owl:Thing), SubObjectPropertyOf(<http://www.example.org/reasonerTester#ssim> owl:topObjectProperty), ClassAssertion(owl:Thing <http://www.example.org/reasonerTester#d>)]

Anomaly 2: Inference differentiation between ELK and OPENLLET:
	additional axioms ELK: [SubObjectPropertyOf(<http://www.example.org/reasonerTester#psim> owl:topObjectProperty), SubClassOf(<http://www.example.org/reasonerTester#D> owl:Thing), SubObjectPropertyOf(<http://www.example.org/reasonerTester#qnonsim> owl:topObjectProperty), ClassAssertion(owl:Thing <http://www.example.org/reasonerTester#a>), EquivalentClasses(<http://www.example.org/reasonerTester#B> <http://www.example.org/reasonerTester#C>), SubObjectPropertyOf(<http://www.example.org/reasonerTester#pnonsim> owl:topObjectProperty), SubClassOf(<http://www.example.org/reasonerTester#C> owl:Thing), SubObjectPropertyOf(<http://www.example.org/reasonerTester#rnonsim> owl:topObjectProperty), ClassAssertion(owl:Thing <http://www.example.org/reasonerTester#b>), SubObjectPropertyOf(<http://www.example.org/reasonerTester#rsim> owl:topObjectProperty), SubClassOf(<http://www.example.org/reasonerTester#B> owl:Thing), SubObjectPropertyOf(<http://www.example.org/reasonerTester#qsim> <http://www.example.org/reasonerTester#ssim>), ClassAssertion(owl:Thing <http://www.example.org/reasonerTester#c>), SubObjectPropertyOf(<http://www.example.org/reasonerTester#snonsim> owl:topObjectProperty), SubClassOf(<http://www.example.org/reasonerTester#A> owl:Thing), SubObjectPropertyOf(<http://www.example.org/reasonerTester#ssim> owl:topObjectProperty), ClassAssertion(owl:Thing <http://www.example.org/reasonerTester#d>)]
	additional axioms OPENLLET: [SubClassOf(owl:Thing owl:Nothing)]

Anomaly 3: Consistency differentiation:
	OPENLLET: not consistent, ELK: consistent

Anomaly 4: Consistency differentiation:
	HERMIT: not consistent, ELK: consistent


––––––––––––––––––––––––––––––––––––––––––––
–––––––––––    Ontology File    ––––––––––––
––––––––––––––––––––––––––––––––––––––––––––

Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (


Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


EquivalentDataProperties(Annotation(Annotation( :ans :annotation4)  :anr :annotation3) Annotation( :anq :annotation1) Annotation( :anp :annotation2) Annotation( :anr :annotation1)  :dp :ds )

SubClassOf( :A ObjectHasSelf(:rsim))

ReflexiveObjectProperty(Annotation( :anr :annotation3) Annotation(Annotation( :anq :annotation2)  :anr :annotation4)  :rnonsim)

FunctionalDataProperty(Annotation( :anp :annotation1) Annotation(Annotation( :anr :annotation2) Annotation( :ans :annotation2)  :ans :annotation2)  :dr)

NegativeDataPropertyAssertion( :dq :a "s1")

SubObjectPropertyOf(Annotation( :anq :annotation4)  :qsim :ssim)

SubDataPropertyOf( :dr :ds)

DataPropertyRange(Annotation( :ans :annotation3)  :dq DataIntersectionOf(rdfs:Literal DataOneOf("s3"@no)  ) )

NegativeObjectPropertyAssertion(Annotation(Annotation(Annotation( :anr :annotation4)  :anp :annotation2)  :anr :annotation4)  :qnonsim :d :c)

DataPropertyDomain(Annotation(Annotation( :anp :annotation1) Annotation( :ans :annotation1) Annotation( :anq :annotation4)  :ans :annotation4)  :dp DataSomeValuesFrom(:dq xsd:string))

DataPropertyDomain( :dr ObjectOneOf(:b))

NegativeObjectPropertyAssertion( :snonsim :c :b)

ClassAssertion( DataHasValue(:ds "s2"^^rdf:PlainLiteral) :d)

DataPropertyDomain( :ds ObjectSomeValuesFrom(:pnonsim ObjectHasValue(:psim :c)))

EquivalentClasses( :B :C ObjectIntersectionOf(:D :C DataHasValue(:ds "s4"@en) DataHasValue(:dr "s1"@de) DataHasValue(:dr "s2"@fr) DataHasValue(:ds "s3"@fr) DataSomeValuesFrom(:dr DataIntersectionOf(xsd:string rdfs:Literal ) ) DataSomeValuesFrom(:dr DataIntersectionOf(rdfs:Literal xsd:string ) ) DataSomeValuesFrom(:dp rdfs:Literal) DataSomeValuesFrom(:dp rdfs:Literal) ) )

ObjectPropertyAssertion( :ssim :d :a)

DisjointClasses( DataSomeValuesFrom(:dr DataIntersectionOf(DataIntersectionOf(rdf:PlainLiteral rdf:PlainLiteral )  rdfs:Literal DataIntersectionOf(rdf:PlainLiteral rdfs:Literal )  ) ) DataSomeValuesFrom(:dq DataIntersectionOf(xsd:string rdfs:Literal ) ) :D DataHasValue(:dr "s3") ObjectHasSelf(:ssim) ) 
)
