Found anomalies while testing file ../found_anomalies/el_reasoners/rdfuzz/test_run_2024_11_28_13_26/test_ontologies/test39.owl

Anomaly 1: Inference differentiation between HERMIT and OPENLLET:
	additional axioms HERMIT: []
	additional axioms OPENLLET: [DataPropertyAssertion(<http://www.example.org/reasonerTester#dq> <http://www.example.org/reasonerTester#c> "s3"^^rdfs:Literal), DataPropertyAssertion(<http://www.example.org/reasonerTester#dr> <http://www.example.org/reasonerTester#c> "s4"^^rdfs:Literal), DataPropertyAssertion(<http://www.example.org/reasonerTester#dq> <http://www.example.org/reasonerTester#b> "s3"^^rdfs:Literal), DataPropertyAssertion(<http://www.example.org/reasonerTester#dr> <http://www.example.org/reasonerTester#b> "s4"^^rdfs:Literal)]

Anomaly 2: Inference differentiation between HERMIT and ELK:
	additional axioms HERMIT: [SubDataPropertyOf(<http://www.example.org/reasonerTester#dr> owl:topDataProperty), ClassAssertion(<http://www.example.org/reasonerTester#B> <http://www.example.org/reasonerTester#c>), EquivalentClasses(<http://www.example.org/reasonerTester#A> <http://www.example.org/reasonerTester#B>), DisjointClasses(<http://www.example.org/reasonerTester#C> owl:Nothing), ObjectPropertyAssertion(<http://www.example.org/reasonerTester#rnonsim> <http://www.example.org/reasonerTester#a> <http://www.example.org/reasonerTester#a>), ClassAssertion(<http://www.example.org/reasonerTester#A> <http://www.example.org/reasonerTester#b>), ObjectPropertyAssertion(<http://www.example.org/reasonerTester#rnonsim> <http://www.example.org/reasonerTester#d> <http://www.example.org/reasonerTester#d>), ObjectPropertyAssertion(<http://www.example.org/reasonerTester#rnonsim> <http://www.example.org/reasonerTester#c> <http://www.example.org/reasonerTester#c>), DisjointClasses(<http://www.example.org/reasonerTester#A> owl:Nothing), ObjectPropertyAssertion(<http://www.example.org/reasonerTester#rnonsim> <http://www.example.org/reasonerTester#b> <http://www.example.org/reasonerTester#b>), DisjointClasses(<http://www.example.org/reasonerTester#B> owl:Nothing), SubClassOf(<http://www.example.org/reasonerTester#B> owl:Thing), ObjectPropertyAssertion(<http://www.example.org/reasonerTester#qsim> <http://www.example.org/reasonerTester#c> <http://www.example.org/reasonerTester#a>), ObjectPropertyAssertion(<http://www.example.org/reasonerTester#ssim> <http://www.example.org/reasonerTester#b> <http://www.example.org/reasonerTester#b>), DisjointClasses(<http://www.example.org/reasonerTester#D> owl:Nothing), SubDataPropertyOf(<http://www.example.org/reasonerTester#dq> owl:topDataProperty), ClassAssertion(<http://www.example.org/reasonerTester#B> <http://www.example.org/reasonerTester#b>), ObjectPropertyAssertion(<http://www.example.org/reasonerTester#ssim> <http://www.example.org/reasonerTester#c> <http://www.example.org/reasonerTester#c>), ObjectPropertyAssertion(<http://www.example.org/reasonerTester#ssim> <http://www.example.org/reasonerTester#c> <http://www.example.org/reasonerTester#b>), ObjectPropertyAssertion(<http://www.example.org/reasonerTester#rnonsim> <http://www.example.org/reasonerTester#c> <http://www.example.org/reasonerTester#b>), ReflexiveObjectProperty(<http://www.example.org/reasonerTester#rnonsim>), SubDataPropertyOf(<http://www.example.org/reasonerTester#ds> owl:topDataProperty), ClassAssertion(<http://www.example.org/reasonerTester#A> <http://www.example.org/reasonerTester#c>), ObjectPropertyAssertion(<http://www.example.org/reasonerTester#rnonsim> <http://www.example.org/reasonerTester#b> <http://www.example.org/reasonerTester#c>), ObjectPropertyAssertion(<http://www.example.org/reasonerTester#qsim> <http://www.example.org/reasonerTester#b> <http://www.example.org/reasonerTester#a>), ObjectPropertyAssertion(<http://www.example.org/reasonerTester#ssim> <http://www.example.org/reasonerTester#b> <http://www.example.org/reasonerTester#c>), SubDataPropertyOf(<http://www.example.org/reasonerTester#dp> owl:topDataProperty)]
	additional axioms ELK: [SubClassOf(<http://www.example.org/reasonerTester#B> <http://www.example.org/reasonerTester#A>)]

Anomaly 3: Inference differentiation between ELK and OPENLLET:
	additional axioms ELK: [SubClassOf(<http://www.example.org/reasonerTester#B> <http://www.example.org/reasonerTester#A>)]
	additional axioms OPENLLET: [ClassAssertion(<http://www.example.org/reasonerTester#B> <http://www.example.org/reasonerTester#c>), DisjointClasses(<http://www.example.org/reasonerTester#C> owl:Nothing), EquivalentClasses(<http://www.example.org/reasonerTester#A> <http://www.example.org/reasonerTester#B>), SubDataPropertyOf(<http://www.example.org/reasonerTester#dr> owl:topDataProperty), ObjectPropertyAssertion(<http://www.example.org/reasonerTester#rnonsim> <http://www.example.org/reasonerTester#a> <http://www.example.org/reasonerTester#a>), ClassAssertion(<http://www.example.org/reasonerTester#A> <http://www.example.org/reasonerTester#b>), ObjectPropertyAssertion(<http://www.example.org/reasonerTester#rnonsim> <http://www.example.org/reasonerTester#d> <http://www.example.org/reasonerTester#d>), DisjointClasses(<http://www.example.org/reasonerTester#A> owl:Nothing), ObjectPropertyAssertion(<http://www.example.org/reasonerTester#rnonsim> <http://www.example.org/reasonerTester#c> <http://www.example.org/reasonerTester#c>), ObjectPropertyAssertion(<http://www.example.org/reasonerTester#rnonsim> <http://www.example.org/reasonerTester#b> <http://www.example.org/reasonerTester#b>), DisjointClasses(<http://www.example.org/reasonerTester#B> owl:Nothing), DataPropertyAssertion(<http://www.example.org/reasonerTester#dq> <http://www.example.org/reasonerTester#c> "s3"^^rdfs:Literal), SubClassOf(<http://www.example.org/reasonerTester#B> owl:Thing), ObjectPropertyAssertion(<http://www.example.org/reasonerTester#qsim> <http://www.example.org/reasonerTester#c> <http://www.example.org/reasonerTester#a>), DisjointClasses(<http://www.example.org/reasonerTester#D> owl:Nothing), ObjectPropertyAssertion(<http://www.example.org/reasonerTester#ssim> <http://www.example.org/reasonerTester#b> <http://www.example.org/reasonerTester#b>), ClassAssertion(<http://www.example.org/reasonerTester#B> <http://www.example.org/reasonerTester#b>), SubDataPropertyOf(<http://www.example.org/reasonerTester#dq> owl:topDataProperty), ObjectPropertyAssertion(<http://www.example.org/reasonerTester#ssim> <http://www.example.org/reasonerTester#c> <http://www.example.org/reasonerTester#c>), DataPropertyAssertion(<http://www.example.org/reasonerTester#dr> <http://www.example.org/reasonerTester#c> "s4"^^rdfs:Literal), ObjectPropertyAssertion(<http://www.example.org/reasonerTester#ssim> <http://www.example.org/reasonerTester#c> <http://www.example.org/reasonerTester#b>), ObjectPropertyAssertion(<http://www.example.org/reasonerTester#rnonsim> <http://www.example.org/reasonerTester#c> <http://www.example.org/reasonerTester#b>), ReflexiveObjectProperty(<http://www.example.org/reasonerTester#rnonsim>), SubDataPropertyOf(<http://www.example.org/reasonerTester#ds> owl:topDataProperty), ClassAssertion(<http://www.example.org/reasonerTester#A> <http://www.example.org/reasonerTester#c>), DataPropertyAssertion(<http://www.example.org/reasonerTester#dq> <http://www.example.org/reasonerTester#b> "s3"^^rdfs:Literal), ObjectPropertyAssertion(<http://www.example.org/reasonerTester#rnonsim> <http://www.example.org/reasonerTester#b> <http://www.example.org/reasonerTester#c>), ObjectPropertyAssertion(<http://www.example.org/reasonerTester#qsim> <http://www.example.org/reasonerTester#b> <http://www.example.org/reasonerTester#a>), ObjectPropertyAssertion(<http://www.example.org/reasonerTester#ssim> <http://www.example.org/reasonerTester#b> <http://www.example.org/reasonerTester#c>), DataPropertyAssertion(<http://www.example.org/reasonerTester#dr> <http://www.example.org/reasonerTester#b> "s4"^^rdfs:Literal), SubDataPropertyOf(<http://www.example.org/reasonerTester#dp> owl:topDataProperty)]


––––––––––––––––––––––––––––––––––––––––––––
–––––––––––    Ontology File    ––––––––––––
––––––––––––––––––––––––––––––––––––––––––––

Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (

Annotation(Annotation(Annotation( :anr :annotation2) Annotation( :anr :annotation1)  :ans :annotation4) Annotation( :anq :annotation3) Annotation( :anq :annotation1) Annotation( :anr :annotation4)  :anp :annotation2) 
Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


DisjointClasses( DataHasValue(:dp "s3"@fr) ObjectHasSelf(:psim) ObjectIntersectionOf(ObjectOneOf(:c) ObjectHasValue(:snonsim :b) ObjectSomeValuesFrom(:ssim :C) DataSomeValuesFrom(:dr DataIntersectionOf(DataOneOf("s4"^^rdfs:Literal)  rdf:PlainLiteral xsd:string ) ) :B :D :A ObjectOneOf(:a) ObjectHasValue(:rnonsim :d) DataHasValue(:ds "s1") ObjectOneOf(:c) ObjectHasValue(:pnonsim :d) ObjectHasValue(:rsim :b) ObjectHasValue(:qnonsim :c) ObjectHasValue(:qsim :b) ObjectHasSelf(:rsim) ObjectSomeValuesFrom(:ssim DataHasValue(:dq "s2"@en)) DataSomeValuesFrom(:ds DataOneOf("s1"@no) ) DataSomeValuesFrom(:dq DataOneOf("s3"@de) ) DataSomeValuesFrom(:dp DataOneOf("s3"@de) ) DataHasValue(:dq "s2") DataHasValue(:dq "s3"^^xsd:string) :B ObjectHasSelf(:ssim) ) )

TransitiveObjectProperty(Annotation(Annotation(Annotation( :anp :annotation4) Annotation( :anp :annotation1)  :anq :annotation3) Annotation( :ans :annotation2) Annotation( :anr :annotation2)  :anp :annotation2)  :pnonsim)

HasKey( :A ( :snonsim :qsim  ) ( :ds  ) )

ObjectPropertyAssertion( :qsim :b :a)

HasKey( ObjectSomeValuesFrom(:rsim ObjectHasValue(:qsim :a)) ( :psim :pnonsim  ) ( ) )

EquivalentClasses( ObjectSomeValuesFrom(:rnonsim :B) ObjectOneOf(:c) ObjectHasSelf(:ssim) DataHasValue(:dq "s3"^^rdfs:Literal) DataSomeValuesFrom(:dr DataOneOf("s4"^^rdfs:Literal) ) :A )

SubClassOf(Annotation( :anr :annotation2) Annotation(Annotation( :ans :annotation4) Annotation( :anr :annotation4) Annotation( :anr :annotation2)  :anr :annotation2)  ObjectHasValue(:qnonsim :a) :D)

SubClassOf(Annotation( :ans :annotation1) Annotation( :anq :annotation1) Annotation( :ans :annotation1)  DataHasValue(:dq "s2") ObjectHasValue(:qnonsim :c))

HasKey(Annotation( :anp :annotation1) Annotation( :anr :annotation1) Annotation( :ans :annotation1)  DataSomeValuesFrom(:ds rdf:PlainLiteral) ( ) ( :ds  ) )

DatatypeDefinition(Annotation( :anp :annotation4)  :dtb DataOneOf("s4"^^xsd:string) )

DisjointClasses( DataSomeValuesFrom(:dr rdf:PlainLiteral) ObjectHasValue(:ssim :c) DataSomeValuesFrom(:dp DataOneOf("s3"@no) ) )

NegativeObjectPropertyAssertion( :rnonsim :a :d)

DataPropertyDomain( :ds :A)

ReflexiveObjectProperty( :rnonsim)

HasKey( :A ( ) ( :ds  ) )

SameIndividual( :b :c )

DifferentIndividuals( :b :d ) 
)
