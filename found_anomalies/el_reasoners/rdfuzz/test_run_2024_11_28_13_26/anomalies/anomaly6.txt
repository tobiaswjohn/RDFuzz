Found anomalies while testing file ../found_anomalies/el_reasoners/rdfuzz/test_run_2024_11_28_13_26/test_ontologies/test20.owl

Anomaly 1: Inference differentiation between HERMIT and OPENLLET:
	additional axioms HERMIT: []
	additional axioms OPENLLET: [DataPropertyAssertion(<http://www.example.org/reasonerTester#dp> <http://www.example.org/reasonerTester#c> "s1"^^xsd:string), DataPropertyAssertion(<http://www.example.org/reasonerTester#dr> <http://www.example.org/reasonerTester#c> "s3"@en), DataPropertyAssertion(<http://www.example.org/reasonerTester#dr> <http://www.example.org/reasonerTester#c> "s3"@fr), DataPropertyAssertion(<http://www.example.org/reasonerTester#dp> <http://www.example.org/reasonerTester#c> "s3"@en), DataPropertyAssertion(<http://www.example.org/reasonerTester#dp> <http://www.example.org/reasonerTester#c> "s2"^^xsd:string), DataPropertyAssertion(<http://www.example.org/reasonerTester#dp> <http://www.example.org/reasonerTester#c> "s3"@no), DataPropertyAssertion(<http://www.example.org/reasonerTester#dp> <http://www.example.org/reasonerTester#c> "s3"@fr), DataPropertyAssertion(<http://www.example.org/reasonerTester#dr> <http://www.example.org/reasonerTester#c> "s2"^^xsd:string), DataPropertyAssertion(<http://www.example.org/reasonerTester#ds> <http://www.example.org/reasonerTester#c> "s3"^^xsd:string), DataPropertyAssertion(<http://www.example.org/reasonerTester#ds> <http://www.example.org/reasonerTester#c> "s4"@de)]


––––––––––––––––––––––––––––––––––––––––––––
–––––––––––    Ontology File    ––––––––––––
––––––––––––––––––––––––––––––––––––––––––––

Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (


Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


DataPropertyDomain(Annotation( :ans :annotation4) Annotation( :anq :annotation2) Annotation( :anp :annotation1) Annotation( :anr :annotation3)  :dp ObjectHasValue(:qnonsim :a))

SubClassOf( DataSomeValuesFrom(:ds DataIntersectionOf(rdfs:Literal DataOneOf("s1"^^rdf:PlainLiteral)  ) ) ObjectOneOf(:b))

FunctionalDataProperty( :dq)

SubDataPropertyOf(Annotation(Annotation( :anr :annotation4)  :anq :annotation4)  :dr :dp)

DatatypeDefinition( :dtb xsd:string)

DisjointClasses(Annotation(Annotation( :anp :annotation4)  :anq :annotation1) Annotation( :ans :annotation2) Annotation( :anp :annotation2)  :C ObjectSomeValuesFrom(:rsim ObjectHasSelf(:qsim)) )

ObjectPropertyAssertion(Annotation( :anr :annotation1) Annotation(Annotation( :anr :annotation4) Annotation(Annotation( :anp :annotation3) Annotation(Annotation( :anq :annotation3) Annotation( :ans :annotation1)  :anr :annotation3)  :anr :annotation4) Annotation( :ans :annotation4)  :anp :annotation4)  :snonsim :d :c)

ClassAssertion( ObjectIntersectionOf(DataHasValue(:dr "s2") :A :B :D DataHasValue(:ds "s4"@de) DataHasValue(:dr "s3"@en) ObjectHasValue(:psim :b) ObjectHasValue(:pnonsim :c) ObjectSomeValuesFrom(:rnonsim ObjectHasValue(:rnonsim :a)) ObjectHasValue(:ssim :b) DataHasValue(:dr "s3"@fr) DataHasValue(:dp "s3"@no) DataHasValue(:dp "s1") DataHasValue(:ds "s3") DataSomeValuesFrom(:dr DataIntersectionOf(xsd:string rdf:PlainLiteral ) ) DataSomeValuesFrom(:dq rdfs:Literal) DataSomeValuesFrom(:dp rdf:PlainLiteral) :C ) :c)

HasKey( DataSomeValuesFrom(:dp DataIntersectionOf(DataIntersectionOf(rdfs:Literal rdf:PlainLiteral rdfs:Literal rdf:PlainLiteral )  DataIntersectionOf(DataOneOf("s3")  DataOneOf("s1")  )  DataIntersectionOf(DataIntersectionOf(rdf:PlainLiteral rdfs:Literal )  rdf:PlainLiteral DataIntersectionOf(xsd:string rdf:PlainLiteral )  )  ) ) ( :rnonsim  ) ( :dq :dq  ) )

NegativeObjectPropertyAssertion(Annotation(Annotation( :anq :annotation2)  :anp :annotation3) Annotation( :anp :annotation3) Annotation( :ans :annotation2) Annotation( :anq :annotation3)  :qsim :b :b)

DifferentIndividuals( :d :b :d ) 
)
