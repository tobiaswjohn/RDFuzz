Found anomalies while testing file ../found_anomalies/el_reasoners/rdfuzz/test_run_2024_11_28_13_26/test_ontologies/test1108.owl

Anomaly 1: Inference differentiation between HERMIT and OPENLLET:
	additional axioms HERMIT: []
	additional axioms OPENLLET: [DataPropertyAssertion(<http://www.example.org/reasonerTester#dq> <http://www.example.org/reasonerTester#b> "s3"@no), DataPropertyAssertion(<http://www.example.org/reasonerTester#dq> <http://www.example.org/reasonerTester#b> "s4"^^rdfs:Literal), DataPropertyAssertion(<http://www.example.org/reasonerTester#dq> <http://www.example.org/reasonerTester#b> "s2"@fr), DataPropertyAssertion(<http://www.example.org/reasonerTester#ds> <http://www.example.org/reasonerTester#b> "s4"^^rdfs:Literal), DataPropertyAssertion(<http://www.example.org/reasonerTester#dp> <http://www.example.org/reasonerTester#b> "s4"^^rdfs:Literal), DataPropertyAssertion(<http://www.example.org/reasonerTester#ds> <http://www.example.org/reasonerTester#b> "s2"@fr), DataPropertyAssertion(<http://www.example.org/reasonerTester#ds> <http://www.example.org/reasonerTester#b> "s3"@no), DataPropertyAssertion(<http://www.example.org/reasonerTester#dr> <http://www.example.org/reasonerTester#b> "s1"@en), DataPropertyAssertion(<http://www.example.org/reasonerTester#dp> <http://www.example.org/reasonerTester#b> "s2"@fr), DataPropertyAssertion(<http://www.example.org/reasonerTester#dp> <http://www.example.org/reasonerTester#b> "s3"@no)]


––––––––––––––––––––––––––––––––––––––––––––
–––––––––––    Ontology File    ––––––––––––
––––––––––––––––––––––––––––––––––––––––––––

Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (


Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


NegativeObjectPropertyAssertion(Annotation( :anp :annotation3) Annotation( :anq :annotation4) Annotation( :anr :annotation2) Annotation( :ans :annotation1)  :qnonsim :b :c)

EquivalentClasses(Annotation(Annotation(Annotation(Annotation(Annotation(Annotation( :anp :annotation2) Annotation( :anr :annotation2)  :anr :annotation4)  :anr :annotation1)  :anq :annotation2) Annotation(Annotation( :ans :annotation1) Annotation(Annotation( :ans :annotation4)  :anp :annotation1)  :anp :annotation1)  :ans :annotation3)  :ans :annotation1)  ObjectHasValue(:qsim :d) ObjectHasSelf(:rsim) )

DisjointClasses(Annotation( :anq :annotation1)  ObjectSomeValuesFrom(:rnonsim :D) ObjectOneOf(:a) :B :A )

ClassAssertion( ObjectIntersectionOf(DataSomeValuesFrom(:dq DataIntersectionOf(xsd:string DataOneOf("s2")  ) ) DataHasValue(:ds "s4"^^rdfs:Literal) :C DataHasValue(:dp "s3"@no) DataHasValue(:dr "s1"@en) ObjectSomeValuesFrom(:pnonsim ObjectSomeValuesFrom(:snonsim ObjectSomeValuesFrom(:psim :B))) ObjectSomeValuesFrom(:rnonsim :A) ObjectHasValue(:rsim :b) ObjectHasValue(:ssim :a) ) :b)

SubDataPropertyOf(Annotation(Annotation(Annotation( :anr :annotation2) Annotation( :ans :annotation3)  :anp :annotation4) Annotation( :ans :annotation1) Annotation( :ans :annotation4) Annotation( :anp :annotation1)  :anq :annotation4)  :ds :dq)

EquivalentDataProperties( :ds :dq :dp )

HasKey( DataSomeValuesFrom(:ds rdf:PlainLiteral) ( ) ( :dq  ) )

ObjectPropertyAssertion(Annotation(Annotation(Annotation(Annotation( :anr :annotation1)  :anq :annotation1)  :anq :annotation4) Annotation( :anr :annotation3)  :anr :annotation2)  :qsim :b :d)

ObjectPropertyDomain( :pnonsim DataHasValue(:ds "s2"@fr))

SubClassOf(Annotation( :anp :annotation2)  DataSomeValuesFrom(:dr DataIntersectionOf(DataIntersectionOf(rdfs:Literal xsd:string )  DataIntersectionOf(xsd:string rdfs:Literal )  ) ) DataSomeValuesFrom(:dq rdfs:Literal))

TransitiveObjectProperty(Annotation(Annotation( :anr :annotation1) Annotation( :anr :annotation3)  :ans :annotation3) Annotation( :anp :annotation1)  :pnonsim) 
)
