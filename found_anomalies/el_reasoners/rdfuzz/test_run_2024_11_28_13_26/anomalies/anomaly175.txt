Found anomalies while testing file ../found_anomalies/el_reasoners/rdfuzz/test_run_2024_11_28_13_26/test_ontologies/test569.owl

Anomaly 1: Inference differentiation between HERMIT and OPENLLET:
	additional axioms HERMIT: [SubDataPropertyOf(<http://www.example.org/reasonerTester#dq> <http://www.example.org/reasonerTester#ds>), SubDataPropertyOf(<http://www.example.org/reasonerTester#dp> <http://www.example.org/reasonerTester#dr>), EquivalentDataProperties(<http://www.example.org/reasonerTester#dp> <http://www.example.org/reasonerTester#dq> owl:bottomDataProperty), SubDataPropertyOf(<http://www.example.org/reasonerTester#dp> <http://www.example.org/reasonerTester#ds>), SubDataPropertyOf(<http://www.example.org/reasonerTester#dq> <http://www.example.org/reasonerTester#dr>)]
	additional axioms OPENLLET: [DataPropertyAssertion(<http://www.example.org/reasonerTester#dr> <http://www.example.org/reasonerTester#a> "s4"^^xsd:string), SubDataPropertyOf(<http://www.example.org/reasonerTester#dq> <http://www.example.org/reasonerTester#dp>), SubDataPropertyOf(<http://www.example.org/reasonerTester#dp> owl:topDataProperty)]


––––––––––––––––––––––––––––––––––––––––––––
–––––––––––    Ontology File    ––––––––––––
––––––––––––––––––––––––––––––––––––––––––––

Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (


Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


EquivalentClasses(Annotation(Annotation( :ans :annotation4) Annotation( :anr :annotation3)  :anp :annotation2) Annotation( :anq :annotation4) Annotation( :anq :annotation1) Annotation( :anq :annotation1)  DataHasValue(:dr "s4") ObjectHasValue(:rnonsim :d) ObjectOneOf(:a) )

HasKey(Annotation(Annotation(Annotation( :ans :annotation1)  :anr :annotation2)  :anr :annotation4) Annotation( :anp :annotation3)  ObjectHasSelf(:ssim) ( ) ( :dq  ) )

DatatypeDefinition( :dtb rdfs:Literal)

DataPropertyRange(Annotation( :anp :annotation4) Annotation(Annotation(Annotation( :anr :annotation2)  :anq :annotation3) Annotation( :ans :annotation2) Annotation( :anp :annotation4)  :anr :annotation4) Annotation( :anq :annotation3)  :dp DataOneOf("s2"@fr) )

DisjointClasses(Annotation( :anq :annotation1)  DataSomeValuesFrom(:ds DataIntersectionOf(xsd:string rdf:PlainLiteral ) ) :A ObjectSomeValuesFrom(:psim :D) :C :C :B )

DataPropertyDomain( :dp ObjectIntersectionOf(ObjectOneOf(:c) ObjectOneOf(:b) DataHasValue(:dr "s3"@de) DataHasValue(:dr "s1"^^rdfs:Literal) ObjectHasValue(:snonsim :a) ObjectHasValue(:rsim :b) ObjectHasValue(:pnonsim :d) ObjectHasValue(:qnonsim :a) ObjectSomeValuesFrom(:qsim ObjectSomeValuesFrom(:rnonsim DataHasValue(:dp "s2"@no))) ObjectHasValue(:qsim :b) ObjectHasValue(:ssim :c) DataHasValue(:dp "s2"@en) :D :A ))

ObjectPropertyAssertion( :qsim :c :c)

SubDataPropertyOf(Annotation( :anr :annotation1) Annotation( :anq :annotation2) Annotation( :anp :annotation4) Annotation( :anr :annotation1)  :dq :dp)

SubClassOf( DataSomeValuesFrom(:dq DataIntersectionOf(rdfs:Literal rdf:PlainLiteral ) ) DataSomeValuesFrom(:dq DataIntersectionOf(DataIntersectionOf(rdf:PlainLiteral xsd:string )  DataIntersectionOf(rdf:PlainLiteral xsd:string )  rdf:PlainLiteral ) ))

HasKey( DataSomeValuesFrom(:ds DataIntersectionOf(rdf:PlainLiteral xsd:string ) ) ( :psim  ) ( ) )

SubObjectPropertyOf(Annotation( :ans :annotation3)  ObjectPropertyChain(:snonsim :snonsim :qsim ) :pnonsim) 
)
