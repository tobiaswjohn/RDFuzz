Found anomalies while testing file ../found_anomalies/el_reasoners/rdfuzz/test_run_2024_11_28_13_26/test_ontologies/test566.owl

Anomaly 1: Inference differentiation between HERMIT and OPENLLET:
	additional axioms HERMIT: [SubDataPropertyOf(<http://www.example.org/reasonerTester#dp> <http://www.example.org/reasonerTester#dr>), EquivalentDataProperties(<http://www.example.org/reasonerTester#dp> owl:bottomDataProperty), SubDataPropertyOf(<http://www.example.org/reasonerTester#dp> <http://www.example.org/reasonerTester#dq>), SubDataPropertyOf(<http://www.example.org/reasonerTester#dp> <http://www.example.org/reasonerTester#ds>)]
	additional axioms OPENLLET: [SubDataPropertyOf(<http://www.example.org/reasonerTester#dp> owl:topDataProperty)]


––––––––––––––––––––––––––––––––––––––––––––
–––––––––––    Ontology File    ––––––––––––
––––––––––––––––––––––––––––––––––––––––––––

Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (

Annotation(Annotation(Annotation( :anr :annotation1)  :ans :annotation2) Annotation( :anp :annotation4) Annotation( :ans :annotation1) Annotation( :ans :annotation2)  :anq :annotation3) 
Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


DisjointClasses( ObjectHasValue(:pnonsim :b) DataHasValue(:dq "s2"@en) )

HasKey(Annotation( :anp :annotation2)  ObjectOneOf(:a) ( ) ( :dp  ) )

ObjectPropertyAssertion(Annotation( :anq :annotation2)  :qsim :c :d)

HasKey( ObjectIntersectionOf(:D ObjectHasSelf(:ssim) ObjectSomeValuesFrom(:psim :B) DataSomeValuesFrom(:dq DataOneOf("s4") ) :A :C :C DataSomeValuesFrom(:dq DataIntersectionOf(rdfs:Literal xsd:string rdf:PlainLiteral ) ) DataSomeValuesFrom(:dr DataOneOf("s3"^^rdfs:Literal) ) DataSomeValuesFrom(:dp rdfs:Literal) DataSomeValuesFrom(:dp DataOneOf("s1"@no) ) ObjectHasValue(:pnonsim :c) ObjectSomeValuesFrom(:rsim ObjectHasValue(:snonsim :a)) ObjectSomeValuesFrom(:qsim ObjectHasValue(:qsim :d)) ObjectSomeValuesFrom(:rsim DataHasValue(:ds "s4"@de)) DataHasValue(:ds "s2"@fr) DataHasValue(:ds "s3") :A DataHasValue(:ds "s2") DataHasValue(:dr "s1"^^rdf:PlainLiteral) DataHasValue(:ds "s1"@fr) :D ) ( :rnonsim :qnonsim  ) ( :ds :dr :dp  ) )

HasKey(Annotation( :anr :annotation1)  ObjectIntersectionOf(DataHasValue(:dr "s2"^^xsd:string) DataSomeValuesFrom(:dr DataIntersectionOf(DataOneOf("s2")  DataIntersectionOf(rdf:PlainLiteral rdfs:Literal )  DataOneOf("s4")  rdf:PlainLiteral rdfs:Literal ) ) ) ( :qsim  ) ( ) )

FunctionalDataProperty(Annotation( :ans :annotation4)  :dp)

HasKey(Annotation( :anq :annotation3)  DataHasValue(:ds "s1") ( :snonsim :psim  ) ( :dp  ) )

DatatypeDefinition( :dtb DataOneOf("s3"@en) )

DataPropertyRange( :dp DataIntersectionOf(DataOneOf("s3"@en)  rdf:PlainLiteral rdf:PlainLiteral DataIntersectionOf(DataOneOf("s3"^^rdf:PlainLiteral)  xsd:string )  DataOneOf("s3")  DataOneOf("s4")  DataIntersectionOf(DataIntersectionOf(DataOneOf("s4"@de)  xsd:string )  DataIntersectionOf(rdf:PlainLiteral DataOneOf("s3")  DataOneOf("s2")  )  rdfs:Literal )  ) )

EquivalentClasses(Annotation( :anp :annotation3)  DataSomeValuesFrom(:dq rdfs:Literal) DataSomeValuesFrom(:dq xsd:string) :D )

ClassAssertion(Annotation( :anr :annotation2) Annotation( :ans :annotation2)  ObjectIntersectionOf(:B ObjectHasSelf(:ssim) :D :B ) :a) 
)
