Found anomalies while testing file ../found_anomalies/el_reasoners/rdfuzz/test_run_2024_11_28_13_26/test_ontologies/test823.owl

Anomaly 1: Inference differentiation between HERMIT and OPENLLET:
	additional axioms HERMIT: []
	additional axioms OPENLLET: [DataPropertyAssertion(<http://www.example.org/reasonerTester#dr> <http://www.example.org/reasonerTester#a> "s3"@de), DataPropertyAssertion(<http://www.example.org/reasonerTester#dq> <http://www.example.org/reasonerTester#c> "s1"^^xsd:string), DataPropertyAssertion(<http://www.example.org/reasonerTester#dp> <http://www.example.org/reasonerTester#c> "s3"@de), DataPropertyAssertion(<http://www.example.org/reasonerTester#dp> <http://www.example.org/reasonerTester#b> "s3"@de), DataPropertyAssertion(<http://www.example.org/reasonerTester#dq> <http://www.example.org/reasonerTester#b> "s1"^^xsd:string), DataPropertyAssertion(<http://www.example.org/reasonerTester#dp> <http://www.example.org/reasonerTester#c> "s1"^^xsd:string), DataPropertyAssertion(<http://www.example.org/reasonerTester#dq> <http://www.example.org/reasonerTester#d> "s3"@de), DataPropertyAssertion(<http://www.example.org/reasonerTester#dp> <http://www.example.org/reasonerTester#a> "s3"@de), DataPropertyAssertion(<http://www.example.org/reasonerTester#dq> <http://www.example.org/reasonerTester#c> "s3"@de), DataPropertyAssertion(<http://www.example.org/reasonerTester#dp> <http://www.example.org/reasonerTester#b> "s1"^^xsd:string), DataPropertyAssertion(<http://www.example.org/reasonerTester#dq> <http://www.example.org/reasonerTester#d> "s1"^^xsd:string), DataPropertyAssertion(<http://www.example.org/reasonerTester#dp> <http://www.example.org/reasonerTester#a> "s1"^^xsd:string), DataPropertyAssertion(<http://www.example.org/reasonerTester#dq> <http://www.example.org/reasonerTester#b> "s3"@de), DataPropertyAssertion(<http://www.example.org/reasonerTester#dr> <http://www.example.org/reasonerTester#b> "s1"^^xsd:string), DataPropertyAssertion(<http://www.example.org/reasonerTester#dq> <http://www.example.org/reasonerTester#a> "s1"^^xsd:string), DataPropertyAssertion(<http://www.example.org/reasonerTester#dp> <http://www.example.org/reasonerTester#d> "s1"^^xsd:string), DataPropertyAssertion(<http://www.example.org/reasonerTester#dr> <http://www.example.org/reasonerTester#d> "s3"@de), DataPropertyAssertion(<http://www.example.org/reasonerTester#dq> <http://www.example.org/reasonerTester#a> "s3"@de), DataPropertyAssertion(<http://www.example.org/reasonerTester#dr> <http://www.example.org/reasonerTester#a> "s1"^^xsd:string), DataPropertyAssertion(<http://www.example.org/reasonerTester#dr> <http://www.example.org/reasonerTester#c> "s3"@de), DataPropertyAssertion(<http://www.example.org/reasonerTester#dr> <http://www.example.org/reasonerTester#d> "s1"^^xsd:string), DataPropertyAssertion(<http://www.example.org/reasonerTester#dp> <http://www.example.org/reasonerTester#d> "s3"@de), DataPropertyAssertion(<http://www.example.org/reasonerTester#dr> <http://www.example.org/reasonerTester#b> "s3"@de), DataPropertyAssertion(<http://www.example.org/reasonerTester#dr> <http://www.example.org/reasonerTester#c> "s1"^^xsd:string)]


––––––––––––––––––––––––––––––––––––––––––––
–––––––––––    Ontology File    ––––––––––––
––––––––––––––––––––––––––––––––––––––––––––

Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (


Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


EquivalentDataProperties(Annotation(Annotation( :ans :annotation2)  :anr :annotation4) Annotation( :anq :annotation1) Annotation( :anp :annotation3) Annotation( :anq :annotation2)  :dr :dq :dp )

ReflexiveObjectProperty( :pnonsim)

SubClassOf( :A ObjectHasSelf(:rsim))

DisjointClasses(Annotation( :anq :annotation2)  DataSomeValuesFrom(:ds rdfs:Literal) ObjectIntersectionOf(ObjectHasValue(:qsim :d) DataHasValue(:dq "s2") ) :D )

EquivalentClasses( ObjectOneOf(:a) :C ObjectSomeValuesFrom(:rnonsim :C) :B :B DataSomeValuesFrom(:dq DataOneOf("s1"^^rdf:PlainLiteral) ) DataHasValue(:dp "s3"@de) ObjectOneOf(:c) ObjectOneOf(:b) DataSomeValuesFrom(:dr DataIntersectionOf(xsd:string rdf:PlainLiteral xsd:string ) ) :A ObjectHasValue(:ssim :a) ObjectHasValue(:snonsim :c) )

DatatypeDefinition(Annotation(Annotation(Annotation(Annotation( :anp :annotation1) Annotation(Annotation( :anq :annotation1) Annotation( :anp :annotation3) Annotation( :anp :annotation1) Annotation( :ans :annotation3) Annotation( :ans :annotation2) Annotation(Annotation( :ans :annotation2) Annotation( :anr :annotation4)  :ans :annotation4)  :anp :annotation2)  :ans :annotation2)  :anp :annotation1)  :anp :annotation3)  :dta DataOneOf("s4"@no) )

DisjointClasses(Annotation( :anr :annotation4)  ObjectSomeValuesFrom(:qnonsim DataHasValue(:dq "s3"@en)) ObjectHasValue(:psim :b) DataHasValue(:dr "s4"@fr) DataHasValue(:ds "s3"@en) DataHasValue(:ds "s4"^^rdf:PlainLiteral) DataHasValue(:dr "s3") )

DatatypeDefinition( :dtb DataOneOf("s4"@en) )

ObjectPropertyAssertion(Annotation( :anr :annotation4) Annotation(Annotation( :anr :annotation4) Annotation( :anr :annotation1)  :anr :annotation1)  :qnonsim :b :c)

ObjectPropertyAssertion(Annotation( :anr :annotation3)  :rnonsim :d :b)

SubClassOf( DataHasValue(:dq "s3") DataSomeValuesFrom(:ds DataIntersectionOf(DataIntersectionOf(rdf:PlainLiteral rdfs:Literal )  rdf:PlainLiteral ) )) 
)
