Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (


Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


ObjectPropertyAssertion(Annotation(Annotation( :anr :annotation4)  :ans :annotation2) Annotation(Annotation( :anr :annotation2)  :anq :annotation3) Annotation( :anp :annotation1) Annotation( :anr :annotation2)  :rnonsim :a :c)

DisjointClasses( ObjectIntersectionOf(ObjectHasValue(:rsim :d) ObjectSomeValuesFrom(:qsim ObjectHasSelf(:ssim)) DataSomeValuesFrom(:dp DataIntersectionOf(rdf:PlainLiteral DataOneOf("s1")  xsd:string ) ) ObjectOneOf(:b) DataHasValue(:dq "s2"@no) :A :C :D DataHasValue(:dr "s3"^^rdfs:Literal) ObjectHasValue(:snonsim :a) ObjectSomeValuesFrom(:qnonsim ObjectHasValue(:psim :b)) ObjectHasValue(:pnonsim :c) DataSomeValuesFrom(:ds DataOneOf("s4"@en) ) ObjectSomeValuesFrom(:qsim DataHasValue(:dp "s1"@de)) DataHasValue(:dp "s4"@fr) DataHasValue(:dr "s4"@en) DataHasValue(:dr "s2"^^xsd:string) DataHasValue(:ds "s1") ) :B )

EquivalentDataProperties( :dp :dr :dr )

EquivalentClasses( ObjectOneOf(:c) :A ObjectSomeValuesFrom(:rsim ObjectSomeValuesFrom(:rsim ObjectSomeValuesFrom(:rsim ObjectHasValue(:ssim :c)))) )

SubClassOf( ObjectHasSelf(:psim) ObjectHasSelf(:ssim)) 
)
