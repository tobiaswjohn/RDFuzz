Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (


Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


DifferentIndividuals(Annotation(Annotation( :ans :annotation3)  :anq :annotation2) Annotation( :anr :annotation1) Annotation( :anp :annotation4) Annotation( :anq :annotation1)  :c :d :b )

FunctionalDataProperty( :dp)

DisjointClasses( ObjectHasSelf(:ssim) ObjectHasValue(:rsim :a) DataSomeValuesFrom(:dr DataIntersectionOf(xsd:string DataOneOf("s4"^^rdfs:Literal)  rdf:PlainLiteral ) ) )

ObjectPropertyAssertion( :pnonsim :c :c)

DatatypeDefinition(Annotation(Annotation( :ans :annotation4) Annotation( :ans :annotation4)  :ans :annotation1) Annotation( :anq :annotation3) Annotation( :anp :annotation4)  :dtc DataOneOf("s1"@fr) )

EquivalentClasses(Annotation( :anr :annotation2)  DataHasValue(:ds "s2") :C :B :A :D )

ObjectPropertyDomain( :rnonsim ObjectSomeValuesFrom(:qnonsim ObjectIntersectionOf(ObjectOneOf(:c) ObjectOneOf(:b) ObjectSomeValuesFrom(:psim ObjectHasValue(:snonsim :d)) ObjectHasValue(:qsim :d) DataHasValue(:dq "s3"@en) ObjectHasValue(:rnonsim :c) DataHasValue(:ds "s4"@de) DataHasValue(:ds "s3"@no) DataHasValue(:dq "s3"@no) DataHasValue(:dq "s4"^^rdf:PlainLiteral) :A DataHasValue(:dq "s4"@en) )))

DataPropertyDomain( :dp ObjectHasValue(:qnonsim :b)) 
)
