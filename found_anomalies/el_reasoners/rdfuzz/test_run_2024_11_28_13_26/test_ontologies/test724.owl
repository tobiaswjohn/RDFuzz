Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (


Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


DisjointClasses(Annotation( :anp :annotation4) Annotation( :anq :annotation1) Annotation( :anr :annotation2)  ObjectSomeValuesFrom(:pnonsim :A) ObjectOneOf(:c) :B )

ObjectPropertyAssertion(Annotation(Annotation( :anr :annotation1)  :ans :annotation3) Annotation( :anr :annotation1) Annotation( :anr :annotation1) Annotation( :anq :annotation2)  :qsim :d :b)

EquivalentClasses(Annotation( :anr :annotation2)  DataHasValue(:dr "s2") ObjectIntersectionOf(:B :D ) DataSomeValuesFrom(:dp xsd:string) :C )

DatatypeDefinition( :dta DataIntersectionOf(rdfs:Literal DataOneOf("s1"^^rdf:PlainLiteral)  rdf:PlainLiteral ) )

ObjectPropertyDomain(Annotation( :ans :annotation3) Annotation( :anr :annotation1) Annotation( :anp :annotation4)  :ssim ObjectHasValue(:rnonsim :a))

HasKey( ObjectHasSelf(:rsim) ( :psim  ) ( ) )

DatatypeDefinition( :dtb DataOneOf("s3"@de) )

ObjectPropertyRange( :snonsim DataHasValue(:dq "s4"@en)) 
)
