Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (


Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


DatatypeDefinition(Annotation( :anq :annotation2) Annotation( :anr :annotation3) Annotation( :ans :annotation1)  :dta DataOneOf("s4") )

NegativeObjectPropertyAssertion(Annotation( :anp :annotation4) Annotation( :anr :annotation1) Annotation( :anr :annotation2) Annotation( :anp :annotation3)  :rnonsim :a :d)

ReflexiveObjectProperty(Annotation( :anq :annotation1) Annotation( :anp :annotation4)  :rsim)

ClassAssertion(Annotation( :anp :annotation1)  ObjectSomeValuesFrom(:pnonsim ObjectIntersectionOf(ObjectHasValue(:ssim :b) DataSomeValuesFrom(:dr DataIntersectionOf(rdf:PlainLiteral rdfs:Literal xsd:string ) ) :D )) :c)

HasKey( DataHasValue(:ds "s3"@en) ( ) ( :dq :dp  ) )

DataPropertyDomain(Annotation( :ans :annotation4)  :dr ObjectHasSelf(:psim))

ObjectPropertyAssertion(Annotation(Annotation( :ans :annotation1)  :anr :annotation3)  :snonsim :d :c)

DisjointClasses( ObjectOneOf(:c) :A :C :B DataHasValue(:dr "s1"^^rdfs:Literal) ObjectSomeValuesFrom(:qsim ObjectSomeValuesFrom(:qnonsim ObjectHasValue(:rsim :b))) ObjectHasValue(:ssim :b) ObjectSomeValuesFrom(:snonsim DataHasValue(:dp "s2"@de)) ObjectHasValue(:psim :a) DataHasValue(:dr "s1"@fr) DataHasValue(:dr "s2"@no) ObjectHasSelf(:ssim) ObjectSomeValuesFrom(:rnonsim DataHasValue(:ds "s1"^^rdfs:Literal)) ) 
)
