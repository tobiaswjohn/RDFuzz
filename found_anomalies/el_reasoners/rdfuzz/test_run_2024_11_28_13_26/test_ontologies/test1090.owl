Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (

Annotation(Annotation(Annotation( :anp :annotation4) Annotation( :anq :annotation1)  :anr :annotation2) Annotation( :ans :annotation4) Annotation( :anr :annotation1) Annotation( :ans :annotation4)  :anq :annotation3) 
Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


ObjectPropertyAssertion( :qnonsim :c :d)

DatatypeDefinition( :dtc DataOneOf("s2"^^xsd:string) )

EquivalentDataProperties(Annotation( :anp :annotation2)  :dq :ds :dp )

DisjointClasses(Annotation( :anp :annotation1)  ObjectHasValue(:qsim :a) ObjectHasSelf(:rsim) ObjectIntersectionOf(:D ObjectOneOf(:b) DataSomeValuesFrom(:dr rdf:PlainLiteral) ObjectSomeValuesFrom(:pnonsim :C) DataHasValue(:dp "s3") :B :A DataSomeValuesFrom(:dr DataIntersectionOf(rdfs:Literal rdf:PlainLiteral ) ) DataHasValue(:ds "s1"@fr) ObjectHasValue(:rnonsim :b) ObjectHasValue(:ssim :c) ObjectHasValue(:psim :a) ObjectHasValue(:snonsim :a) ObjectSomeValuesFrom(:rsim DataHasValue(:dp "s4"@no)) DataHasValue(:dr "s2"@en) DataHasValue(:dr "s3"@de) DataHasValue(:ds "s4"@no) :B ) )

SubClassOf( DataSomeValuesFrom(:dr DataIntersectionOf(DataOneOf("s1"@no)  DataIntersectionOf(DataIntersectionOf(DataIntersectionOf(DataOneOf("s1")  DataIntersectionOf(xsd:string rdf:PlainLiteral )  )  DataOneOf("s4"@no)  )  DataOneOf("s1"^^rdfs:Literal)  )  DataOneOf("s1"^^rdf:PlainLiteral)  ) ) DataHasValue(:dr "s2"^^xsd:string)) 
)
