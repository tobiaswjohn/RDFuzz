Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (


Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


SubClassOf(Annotation( :anr :annotation2) Annotation( :anq :annotation1)  ObjectHasValue(:qsim :a) DataHasValue(:ds "s2"^^xsd:string))

EquivalentClasses(Annotation( :anp :annotation4) Annotation( :ans :annotation3)  :B ObjectOneOf(:d) )

DisjointClasses(Annotation( :anr :annotation4)  ObjectSomeValuesFrom(:rnonsim ObjectIntersectionOf(:D :A )) DataSomeValuesFrom(:dr DataOneOf("s3") ) ObjectHasSelf(:ssim) )

FunctionalDataProperty( :dq)

SubDataPropertyOf( :dp :dq)

ObjectPropertyAssertion(Annotation( :anr :annotation4)  :pnonsim :b :c)

NegativeObjectPropertyAssertion(Annotation( :anq :annotation1) Annotation( :anp :annotation4)  :qnonsim :a :b)

DatatypeDefinition(Annotation(Annotation( :anq :annotation1)  :ans :annotation4)  :dtc rdf:PlainLiteral)

HasKey(Annotation( :anp :annotation3)  :C ( :rsim  ) ( :dq :dr  ) )

HasKey( DataSomeValuesFrom(:dr DataIntersectionOf(xsd:string rdfs:Literal DataOneOf("s4"@fr)  ) ) ( :psim :snonsim  ) ( ) )

SameIndividual(Annotation( :ans :annotation4) Annotation( :anr :annotation1)  :c :d ) 
)
