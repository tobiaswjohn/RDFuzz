Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (

Annotation(Annotation(Annotation( :anq :annotation3)  :ans :annotation2) Annotation( :anq :annotation1) Annotation(Annotation( :anq :annotation3)  :anp :annotation4) Annotation( :anq :annotation2)  :anr :annotation3) 
Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


ObjectPropertyDomain(Annotation(Annotation( :anp :annotation2)  :anq :annotation3)  :ssim ObjectIntersectionOf(ObjectSomeValuesFrom(:snonsim :C) DataSomeValuesFrom(:dq rdf:PlainLiteral) ObjectHasValue(:qnonsim :d) ))

DatatypeDefinition(Annotation( :anr :annotation1)  :dtb DataOneOf("s1"@fr) )

HasKey(Annotation( :anr :annotation3)  ObjectOneOf(:a) ( :psim :rsim  ) ( ) )

ObjectPropertyAssertion(Annotation( :anq :annotation1)  :pnonsim :c :b)

DisjointClasses( DataHasValue(:dr "s2"^^rdfs:Literal) ObjectHasSelf(:qsim) :D :B :A DataHasValue(:dp "s4") DataHasValue(:ds "s3"@no) :C DataSomeValuesFrom(:dr DataIntersectionOf(DataIntersectionOf(DataIntersectionOf(xsd:string xsd:string )  rdfs:Literal )  xsd:string ) ) DataHasValue(:ds "s4"@en) :B ObjectHasValue(:rnonsim :c) :A ) 
)
