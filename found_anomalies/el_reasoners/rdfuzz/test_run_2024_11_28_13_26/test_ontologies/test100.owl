Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (

Annotation(Annotation(Annotation( :anq :annotation1) Annotation( :anr :annotation4)  :ans :annotation1) Annotation( :anp :annotation2) Annotation( :anp :annotation1)  :anp :annotation3) 
Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


SubObjectPropertyOf(Annotation( :ans :annotation1) Annotation( :ans :annotation3) Annotation( :ans :annotation2)  ObjectPropertyChain(:qsim :rnonsim :ssim ) :pnonsim)

DisjointClasses( ObjectIntersectionOf(:A ObjectHasSelf(:rsim) ObjectOneOf(:a) DataSomeValuesFrom(:dq rdfs:Literal) ObjectSomeValuesFrom(:psim :C) :D :B ObjectHasValue(:snonsim :c) ObjectHasValue(:pnonsim :d) DataSomeValuesFrom(:ds DataOneOf("s1"@de) ) DataHasValue(:dp "s4"^^rdf:PlainLiteral) DataSomeValuesFrom(:dp DataIntersectionOf(DataIntersectionOf(rdf:PlainLiteral rdfs:Literal )  xsd:string ) ) DataSomeValuesFrom(:dq xsd:string) DataSomeValuesFrom(:dp DataIntersectionOf(rdfs:Literal rdfs:Literal ) ) :D :D ) DataHasValue(:dr "s3") ObjectHasValue(:qnonsim :b) )

SubClassOf( DataHasValue(:dp "s3"@en) DataHasValue(:dq "s2"@fr))

DatatypeDefinition(Annotation( :anr :annotation3)  :dtc DataIntersectionOf(DataIntersectionOf(rdf:PlainLiteral rdf:PlainLiteral )  DataOneOf("s4")  DataOneOf("s1")  rdfs:Literal ) )

DatatypeDefinition(Annotation( :ans :annotation3) Annotation( :anp :annotation1) Annotation( :anq :annotation4) Annotation( :anr :annotation1)  :dta DataOneOf("s1"@no) )

DatatypeDefinition(Annotation( :anr :annotation2) Annotation( :anp :annotation1) Annotation( :ans :annotation4)  :dtb DataIntersectionOf(xsd:string rdf:PlainLiteral ) )

EquivalentClasses(Annotation(Annotation( :anp :annotation2)  :anq :annotation1) Annotation(Annotation( :anp :annotation1) Annotation( :anp :annotation2)  :anp :annotation1)  ObjectSomeValuesFrom(:qsim ObjectSomeValuesFrom(:qnonsim ObjectOneOf(:d))) :C )

DisjointClasses( ObjectHasSelf(:rsim) ObjectOneOf(:d) )

NegativeDataPropertyAssertion( :dp :c "s1"^^rdfs:Literal)

HasKey( ObjectHasValue(:rsim :b) ( ) ( :ds  ) )

DataPropertyDomain(Annotation( :anq :annotation2)  :ds DataSomeValuesFrom(:dq DataIntersectionOf(rdf:PlainLiteral DataIntersectionOf(DataIntersectionOf(DataIntersectionOf(DataIntersectionOf(xsd:string xsd:string )  rdf:PlainLiteral )  xsd:string xsd:string )  DataIntersectionOf(rdf:PlainLiteral DataIntersectionOf(DataIntersectionOf(xsd:string xsd:string )  rdf:PlainLiteral )  xsd:string )  )  ) ))

SubClassOf(Annotation( :anq :annotation3)  DataSomeValuesFrom(:dq DataOneOf("s3"^^rdf:PlainLiteral) ) DataSomeValuesFrom(:ds DataOneOf("s3"@de) ))

DataPropertyRange(Annotation( :anr :annotation2)  :dp DataIntersectionOf(DataOneOf("s4")  DataOneOf("s4"@no)  rdfs:Literal ) )

ObjectPropertyAssertion( :qnonsim :d :a)

EquivalentClasses(Annotation(Annotation( :anq :annotation1) Annotation( :anp :annotation1)  :ans :annotation3)  DataSomeValuesFrom(:dp DataIntersectionOf(DataIntersectionOf(rdf:PlainLiteral rdfs:Literal )  rdf:PlainLiteral ) ) ObjectSomeValuesFrom(:pnonsim ObjectIntersectionOf(:A :D :A )) ObjectOneOf(:c) )

SameIndividual( :c :b )

EquivalentObjectProperties( :psim :psim ) 
)
