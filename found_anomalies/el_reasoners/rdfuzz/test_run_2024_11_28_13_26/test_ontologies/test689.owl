Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (

Annotation(Annotation( :anq :annotation4) Annotation( :anr :annotation3) Annotation( :anp :annotation1)  :ans :annotation2) 
Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


DatatypeDefinition(Annotation( :anp :annotation1) Annotation( :anp :annotation2)  :dta DataIntersectionOf(DataOneOf("s3"@de)  rdfs:Literal ) )

DataPropertyAssertion(Annotation( :ans :annotation1) Annotation( :ans :annotation1) Annotation( :anq :annotation1)  :dq :d "s2")

SubClassOf( DataHasValue(:dr "s1"^^rdf:PlainLiteral) DataSomeValuesFrom(:ds xsd:string))

HasKey( ObjectHasSelf(:qsim) ( ) ( :dp  ) )

HasKey( ObjectSomeValuesFrom(:ssim :B) ( :snonsim  ) ( ) )

SubObjectPropertyOf( :qnonsim :rnonsim)

TransitiveObjectProperty( :pnonsim)

DisjointClasses(Annotation( :anq :annotation3)  ObjectHasValue(:rsim :b) ObjectOneOf(:a) ObjectIntersectionOf(:A :C :D :A :C ObjectOneOf(:c) ObjectHasValue(:psim :d) ObjectSomeValuesFrom(:rsim DataHasValue(:dp "s2"@en)) DataHasValue(:dp "s4"@fr) DataHasValue(:dr "s4") :C :C ) )

ObjectPropertyAssertion( :ssim :b :c)

HasKey( DataSomeValuesFrom(:dr DataIntersectionOf(DataIntersectionOf(xsd:string DataOneOf("s4")  )  DataIntersectionOf(xsd:string DataOneOf("s3"@no)  )  DataOneOf("s3")  rdf:PlainLiteral ) ) ( :snonsim :psim  ) ( :dr :dr  ) )

NegativeDataPropertyAssertion(Annotation( :anq :annotation3)  :dr :a "s4"@no) 
)
