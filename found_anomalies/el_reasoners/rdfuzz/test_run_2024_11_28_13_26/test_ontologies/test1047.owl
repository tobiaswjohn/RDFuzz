Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (


Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


DatatypeDefinition(Annotation( :anr :annotation1) Annotation( :ans :annotation2) Annotation( :anq :annotation4)  :dtc DataIntersectionOf(DataOneOf("s3")  rdfs:Literal ) )

HasKey(Annotation( :anp :annotation3) Annotation( :anr :annotation1)  ObjectIntersectionOf(:A DataHasValue(:dq "s4") :C ) ( :qnonsim :psim  ) ( ) )

ObjectPropertyRange(Annotation(Annotation( :anp :annotation4) Annotation( :anr :annotation4)  :anr :annotation3)  :rnonsim ObjectOneOf(:d))

ObjectPropertyAssertion(Annotation(Annotation( :anr :annotation3) Annotation(Annotation(Annotation( :ans :annotation1)  :anp :annotation1) Annotation( :anr :annotation3) Annotation(Annotation( :anq :annotation2)  :anp :annotation2)  :anr :annotation3)  :anp :annotation1)  :rsim :b :c)

EquivalentClasses(Annotation( :anp :annotation1)  DataSomeValuesFrom(:ds xsd:string) ObjectSomeValuesFrom(:snonsim ObjectHasSelf(:qsim)) ObjectHasValue(:ssim :a) :D :B DataHasValue(:dr "s1"@en) DataHasValue(:dp "s2"^^rdf:PlainLiteral) DataHasValue(:dr "s3"@fr) DataHasValue(:dq "s4"@no) ObjectHasValue(:pnonsim :c) ObjectSomeValuesFrom(:ssim ObjectHasValue(:psim :b)) DataSomeValuesFrom(:dp rdf:PlainLiteral) DataSomeValuesFrom(:dq rdf:PlainLiteral) :A DataSomeValuesFrom(:dq xsd:string) :A ) 
)
