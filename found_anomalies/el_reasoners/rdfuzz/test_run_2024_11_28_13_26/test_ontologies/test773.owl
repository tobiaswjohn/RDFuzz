Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (


Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


ObjectPropertyAssertion(Annotation(Annotation( :anq :annotation3) Annotation( :anp :annotation1)  :anr :annotation3) Annotation(Annotation( :ans :annotation4)  :anq :annotation2)  :ssim :a :c)

DisjointClasses( ObjectIntersectionOf(ObjectHasSelf(:qsim) :D ObjectOneOf(:b) ObjectHasValue(:qnonsim :d) :A DataHasValue(:dq "s3"@no) :C :B DataHasValue(:dr "s1") ObjectHasValue(:psim :c) ObjectHasValue(:pnonsim :a) ObjectHasValue(:snonsim :d) ObjectSomeValuesFrom(:rsim DataSomeValuesFrom(:dp xsd:string)) DataSomeValuesFrom(:dq DataIntersectionOf(rdf:PlainLiteral rdfs:Literal ) ) DataHasValue(:ds "s2") DataSomeValuesFrom(:dp DataIntersectionOf(rdf:PlainLiteral xsd:string ) ) :C :C ) ObjectSomeValuesFrom(:rnonsim DataSomeValuesFrom(:ds DataIntersectionOf(DataOneOf("s4"^^rdf:PlainLiteral)  rdfs:Literal ) )) )

ClassAssertion( DataHasValue(:dp "s3"@fr) :b)

NegativeObjectPropertyAssertion( :rsim :b :c)

HasKey( :B ( ) ( :dr  ) )

ReflexiveObjectProperty( :qnonsim)

FunctionalDataProperty( :dq)

DatatypeDefinition( :dtb xsd:string) 
)
