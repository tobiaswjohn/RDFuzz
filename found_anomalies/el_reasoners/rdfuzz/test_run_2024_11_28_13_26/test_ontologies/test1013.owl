Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (

Annotation(Annotation( :anr :annotation2) Annotation(Annotation( :ans :annotation3)  :anp :annotation1) Annotation( :anp :annotation3) Annotation( :ans :annotation4)  :anq :annotation4) 
Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


SubDataPropertyOf( :dq :dp)

ClassAssertion( ObjectHasSelf(:ssim) :d)

EquivalentClasses( ObjectHasValue(:qnonsim :a) ObjectSomeValuesFrom(:qsim ObjectIntersectionOf(DataSomeValuesFrom(:dr DataOneOf("s4"^^rdf:PlainLiteral) ) ObjectOneOf(:c) :A :B :C :D :B DataSomeValuesFrom(:dp DataIntersectionOf(xsd:string rdfs:Literal DataOneOf("s3"@no)  ) ) DataHasValue(:dq "s1") DataSomeValuesFrom(:dq DataOneOf("s2"@fr) ) DataHasValue(:ds "s1"@en) ObjectHasValue(:pnonsim :b) ObjectOneOf(:c) ObjectHasValue(:psim :b) ObjectHasValue(:rsim :c) ObjectHasValue(:rnonsim :b) ObjectSomeValuesFrom(:snonsim ObjectHasValue(:pnonsim :d)) ObjectSomeValuesFrom(:pnonsim ObjectSomeValuesFrom(:ssim ObjectHasValue(:qnonsim :b))) ObjectHasValue(:rsim :b) )) DataHasValue(:ds "s2"@de) )

ObjectPropertyAssertion( :qsim :d :c)

FunctionalDataProperty( :ds)

ObjectPropertyAssertion( :psim :a :a)

DisjointClasses( :C :D )

HasKey( :A ( ) ( :dq  ) )

DatatypeDefinition( :dta DataOneOf("s4") )

TransitiveObjectProperty( :rnonsim)

DifferentIndividuals( :b :c ) 
)
