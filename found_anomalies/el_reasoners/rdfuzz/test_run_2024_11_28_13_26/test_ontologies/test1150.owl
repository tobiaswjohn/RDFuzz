Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (


Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


ObjectPropertyAssertion(Annotation(Annotation( :anr :annotation4)  :ans :annotation2) Annotation( :anq :annotation3) Annotation( :anp :annotation1)  :ssim :d :b)

SubClassOf(Annotation(Annotation( :anp :annotation3)  :ans :annotation1) Annotation(Annotation( :anp :annotation4)  :anr :annotation3) Annotation( :ans :annotation3)  ObjectHasSelf(:rsim) DataHasValue(:dp "s2"@no))

EquivalentClasses( :A DataSomeValuesFrom(:ds DataOneOf("s4") ) )

DisjointClasses(Annotation( :anp :annotation4) Annotation( :anr :annotation4)  ObjectSomeValuesFrom(:snonsim :B) ObjectIntersectionOf(ObjectHasValue(:pnonsim :c) :D :C ) ObjectOneOf(:a) )

DisjointClasses(Annotation( :ans :annotation1)  DataSomeValuesFrom(:dr xsd:string) DataSomeValuesFrom(:dq DataIntersectionOf(rdfs:Literal rdf:PlainLiteral DataIntersectionOf(rdf:PlainLiteral rdf:PlainLiteral )  ) ) DataSomeValuesFrom(:dp rdf:PlainLiteral) DataHasValue(:dq "s1"^^xsd:string) DataHasValue(:ds "s3") :D :A :C ) 
)
