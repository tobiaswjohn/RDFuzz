Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (


Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


EquivalentDataProperties(Annotation(Annotation( :anq :annotation4) Annotation( :anp :annotation2) Annotation( :ans :annotation4)  :ans :annotation2) Annotation( :anr :annotation3) Annotation( :anq :annotation1) Annotation( :anq :annotation3)  :dp :ds )

DatatypeDefinition( :dtb xsd:string)

EquivalentClasses( DataHasValue(:dr "s1"@en) ObjectHasSelf(:rsim) )

DatatypeDefinition( :dta DataIntersectionOf(rdfs:Literal DataOneOf("s4"^^rdf:PlainLiteral)  rdf:PlainLiteral ) )

SubClassOf(Annotation( :anr :annotation3) Annotation( :anp :annotation4)  DataSomeValuesFrom(:dq xsd:string) ObjectIntersectionOf(:C :D ))

DatatypeDefinition(Annotation( :anp :annotation2)  :dtc DataOneOf("s3") )

ObjectPropertyAssertion( :rnonsim :a :c)

DisjointClasses( ObjectOneOf(:b) ObjectHasValue(:psim :d) ObjectSomeValuesFrom(:pnonsim :A) :B :B ObjectSomeValuesFrom(:qnonsim ObjectHasValue(:qsim :a)) ObjectHasValue(:ssim :a) ObjectHasValue(:snonsim :c) DataHasValue(:dr "s2"@de) DataHasValue(:ds "s4"@no) DataHasValue(:ds "s1"@fr) DataHasValue(:ds "s1"^^rdfs:Literal) DataHasValue(:dr "s4"^^xsd:string) DataSomeValuesFrom(:dr DataIntersectionOf(DataOneOf("s3"^^rdf:PlainLiteral)  DataIntersectionOf(rdf:PlainLiteral DataIntersectionOf(DataIntersectionOf(rdf:PlainLiteral rdfs:Literal )  rdfs:Literal DataIntersectionOf(rdf:PlainLiteral rdfs:Literal )  rdf:PlainLiteral )  rdfs:Literal xsd:string )  ) ) ) 
)
