Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (


Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


DatatypeDefinition(Annotation( :ans :annotation2) Annotation( :anq :annotation1) Annotation( :anp :annotation4) Annotation( :anr :annotation3)  :dtc DataOneOf("s2"@de) )

DataPropertyDomain( :dq DataHasValue(:dr "s1"^^rdfs:Literal))

EquivalentClasses( ObjectIntersectionOf(ObjectOneOf(:c) ObjectHasValue(:rnonsim :b) ObjectHasSelf(:qsim) DataSomeValuesFrom(:ds rdf:PlainLiteral) ObjectSomeValuesFrom(:ssim :D) :C :A ObjectHasValue(:snonsim :a) ObjectHasValue(:psim :d) ObjectOneOf(:c) DataSomeValuesFrom(:dr DataIntersectionOf(DataIntersectionOf(xsd:string xsd:string rdfs:Literal )  xsd:string rdfs:Literal ) ) DataSomeValuesFrom(:dp DataOneOf("s3") ) DataHasValue(:dq "s4") :B :C ) :B )

ObjectPropertyAssertion( :qnonsim :c :b)

SubClassOf(Annotation( :anp :annotation3)  ObjectSomeValuesFrom(:rsim ObjectSomeValuesFrom(:pnonsim ObjectHasValue(:psim :c))) ObjectSomeValuesFrom(:qsim ObjectSomeValuesFrom(:qsim DataHasValue(:dp "s3"@fr)))) 
)
