Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (


Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


ObjectPropertyAssertion(Annotation( :anp :annotation4) Annotation( :anq :annotation2) Annotation( :anr :annotation1) Annotation( :ans :annotation3)  :rnonsim :c :b)

ClassAssertion( ObjectHasValue(:ssim :d) :a)

DisjointClasses( ObjectOneOf(:b) ObjectIntersectionOf(DataSomeValuesFrom(:dp DataOneOf("s2"^^rdfs:Literal) ) ObjectSomeValuesFrom(:qnonsim DataHasValue(:ds "s3"@no)) ObjectHasSelf(:qsim) :B :A :C :D DataSomeValuesFrom(:dr DataIntersectionOf(rdf:PlainLiteral xsd:string DataOneOf("s1")  ) ) DataHasValue(:dq "s4") DataHasValue(:dp "s4"@en) ObjectSomeValuesFrom(:pnonsim ObjectHasValue(:rsim :a)) ObjectHasValue(:snonsim :b) ObjectHasValue(:qnonsim :c) ObjectHasValue(:psim :a) DataHasValue(:dq "s2"@fr) DataHasValue(:dq "s2"@de) DataHasValue(:dp "s3") ObjectIntersectionOf(ObjectHasSelf(:qsim) :B ) ) )

ReflexiveObjectProperty( :snonsim)

DataPropertyDomain( :ds :B)

DatatypeDefinition( :dta xsd:string)

TransitiveObjectProperty( :snonsim)

ReflexiveObjectProperty( :snonsim)

TransitiveObjectProperty( :rnonsim)

TransitiveObjectProperty( :snonsim)

FunctionalDataProperty( :ds) 
)
