Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (

Annotation(Annotation(Annotation( :ans :annotation1) Annotation( :ans :annotation3)  :ans :annotation1) Annotation( :anp :annotation2) Annotation( :anq :annotation3) Annotation( :anq :annotation1) Annotation( :anr :annotation3)  :anr :annotation4) 
Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


ObjectPropertyDomain(Annotation( :anp :annotation1) Annotation(Annotation(Annotation(Annotation(Annotation(Annotation( :anr :annotation2)  :anp :annotation2)  :anq :annotation1)  :anr :annotation1) Annotation(Annotation(Annotation(Annotation(Annotation( :anp :annotation4)  :anp :annotation2) Annotation(Annotation( :ans :annotation4)  :anr :annotation3)  :ans :annotation3) Annotation( :anp :annotation4) Annotation( :ans :annotation4)  :ans :annotation1)  :anq :annotation4) Annotation( :anr :annotation2)  :anq :annotation2)  :anq :annotation3) Annotation( :anr :annotation4)  :rnonsim ObjectHasValue(:qsim :c))

ObjectPropertyAssertion( :pnonsim :d :a)

EquivalentClasses( ObjectSomeValuesFrom(:psim ObjectHasSelf(:ssim)) :D )

FunctionalDataProperty( :dp)

HasKey( ObjectIntersectionOf(DataSomeValuesFrom(:dr DataOneOf("s4"^^rdfs:Literal) ) DataHasValue(:dq "s1") ObjectOneOf(:b) :C :A :B :C :A DataSomeValuesFrom(:ds rdf:PlainLiteral) DataHasValue(:ds "s2"@en) DataSomeValuesFrom(:dp DataIntersectionOf(xsd:string rdf:PlainLiteral ) ) DataSomeValuesFrom(:dr xsd:string) ObjectSomeValuesFrom(:rsim ObjectHasSelf(:rsim)) ObjectSomeValuesFrom(:rsim DataHasValue(:dq "s3"@fr)) DataHasValue(:dr "s2"@de) DataHasValue(:dp "s4"@no) DataHasValue(:dq "s4") DataHasValue(:dq "s3") :B ) ( :snonsim :qnonsim  ) ( ) ) 
)
