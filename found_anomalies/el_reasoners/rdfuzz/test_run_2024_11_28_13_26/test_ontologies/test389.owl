Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (


Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


ObjectPropertyAssertion(Annotation(Annotation( :anp :annotation4) Annotation( :ans :annotation4)  :anq :annotation1) Annotation(Annotation( :ans :annotation3)  :anp :annotation2) Annotation( :anr :annotation2)  :rnonsim :b :d)

DisjointClasses( DataSomeValuesFrom(:dr DataOneOf("s2"^^rdfs:Literal) ) :A ObjectSomeValuesFrom(:rsim ObjectIntersectionOf(ObjectHasValue(:qsim :c) DataHasValue(:dp "s1") ObjectOneOf(:a) :C ObjectHasSelf(:ssim) :B :D DataSomeValuesFrom(:dq DataIntersectionOf(xsd:string DataOneOf("s4"@fr)  ) ) :D DataSomeValuesFrom(:ds rdf:PlainLiteral) DataHasValue(:dr "s3"@de) ObjectSomeValuesFrom(:qnonsim ObjectHasValue(:pnonsim :c)) ObjectHasValue(:snonsim :b) ObjectHasValue(:psim :b) ObjectHasValue(:ssim :a) ObjectHasValue(:rnonsim :d) ObjectSomeValuesFrom(:qnonsim DataHasValue(:dr "s1"@no)) DataHasValue(:dr "s2"@en) DataHasValue(:dq "s2"@no) DataSomeValuesFrom(:dq DataIntersectionOf(xsd:string rdf:PlainLiteral ) ) DataSomeValuesFrom(:dq rdfs:Literal) :B :A :B )) )

EquivalentClasses(Annotation( :ans :annotation1) Annotation( :anq :annotation2)  DataSomeValuesFrom(:dr rdfs:Literal) DataSomeValuesFrom(:dr rdfs:Literal) DataSomeValuesFrom(:ds rdf:PlainLiteral) :C )

DatatypeDefinition(Annotation( :anp :annotation3)  :dta DataIntersectionOf(DataIntersectionOf(rdfs:Literal xsd:string )  DataIntersectionOf(rdf:PlainLiteral rdfs:Literal )  rdfs:Literal ) )

EquivalentDataProperties( :dp :dr ) 
)
