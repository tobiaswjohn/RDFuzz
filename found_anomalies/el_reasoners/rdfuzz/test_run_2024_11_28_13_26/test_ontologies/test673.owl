Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (

Annotation(Annotation(Annotation( :ans :annotation4)  :anr :annotation1) Annotation( :anq :annotation3) Annotation( :anr :annotation2) Annotation( :anp :annotation3)  :anp :annotation2) 
Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


EquivalentObjectProperties( :snonsim :qsim )

DisjointClasses( ObjectIntersectionOf(DataSomeValuesFrom(:dp DataOneOf("s4") ) ObjectSomeValuesFrom(:ssim ObjectOneOf(:c)) :A DataHasValue(:dr "s2"@no) ObjectHasSelf(:rsim) :C :D :B :A ObjectHasValue(:pnonsim :d) ObjectOneOf(:b) DataSomeValuesFrom(:dq DataIntersectionOf(rdfs:Literal rdf:PlainLiteral ) ) DataSomeValuesFrom(:ds xsd:string) DataHasValue(:dq "s3"^^rdfs:Literal) DataHasValue(:dp "s1"@fr) ObjectSomeValuesFrom(:qnonsim ObjectHasValue(:pnonsim :d)) ObjectHasValue(:psim :c) DataHasValue(:ds "s4"@de) DataHasValue(:ds "s1"@en) DataSomeValuesFrom(:dq DataIntersectionOf(xsd:string rdf:PlainLiteral ) ) DataHasValue(:dq "s1") DataSomeValuesFrom(:ds rdfs:Literal) DataSomeValuesFrom(:dp rdf:PlainLiteral) ) ObjectHasValue(:rnonsim :a) )

HasKey( DataSomeValuesFrom(:dq DataIntersectionOf(DataIntersectionOf(rdfs:Literal DataIntersectionOf(rdfs:Literal xsd:string )  rdfs:Literal rdfs:Literal )  DataIntersectionOf(rdf:PlainLiteral rdfs:Literal xsd:string )  DataIntersectionOf(rdfs:Literal xsd:string )  rdfs:Literal ) ) ( ) ( :dp :dr  ) )

SubDataPropertyOf(Annotation(Annotation( :anp :annotation2) Annotation(Annotation( :anr :annotation2)  :anq :annotation2)  :anq :annotation1)  :dr :dr)

DatatypeDefinition( :dtb DataIntersectionOf(DataIntersectionOf(DataOneOf("s1")  rdfs:Literal DataIntersectionOf(rdfs:Literal rdfs:Literal rdfs:Literal rdf:PlainLiteral DataIntersectionOf(rdfs:Literal rdfs:Literal )  DataIntersectionOf(rdf:PlainLiteral DataIntersectionOf(DataIntersectionOf(rdfs:Literal rdf:PlainLiteral )  DataIntersectionOf(rdfs:Literal rdfs:Literal )  rdfs:Literal )  )  DataIntersectionOf(rdf:PlainLiteral xsd:string )  rdfs:Literal xsd:string )  )  rdfs:Literal ) )

DifferentIndividuals(Annotation(Annotation(Annotation(Annotation(Annotation( :anr :annotation2)  :anp :annotation4)  :anr :annotation1)  :anq :annotation1)  :anr :annotation4)  :d :a )

SubClassOf(Annotation(Annotation(Annotation(Annotation(Annotation( :anr :annotation4) Annotation(Annotation( :ans :annotation2)  :anr :annotation2) Annotation( :ans :annotation2)  :anq :annotation2)  :anp :annotation1)  :anp :annotation2) Annotation( :anq :annotation2)  :anq :annotation4)  :C :D)

ObjectPropertyDomain( :qnonsim DataSomeValuesFrom(:dp rdf:PlainLiteral))

ObjectPropertyAssertion(Annotation(Annotation( :anp :annotation4) Annotation(Annotation(Annotation( :ans :annotation1) Annotation( :anp :annotation2) Annotation( :anp :annotation2)  :ans :annotation2) Annotation(Annotation( :ans :annotation2)  :anr :annotation2)  :anr :annotation2)  :anr :annotation4)  :rnonsim :c :c)

EquivalentClasses( ObjectIntersectionOf(ObjectIntersectionOf(ObjectIntersectionOf(ObjectSomeValuesFrom(:rnonsim DataHasValue(:ds "s4")) ObjectOneOf(:c) ) ObjectSomeValuesFrom(:snonsim ObjectIntersectionOf(ObjectHasSelf(:rsim) :C )) DataSomeValuesFrom(:dq DataOneOf("s1") ) ObjectHasValue(:rnonsim :c) ) ObjectSomeValuesFrom(:psim ObjectHasSelf(:ssim)) ) ObjectHasValue(:qsim :b) )

DataPropertyRange( :dq xsd:string) 
)
