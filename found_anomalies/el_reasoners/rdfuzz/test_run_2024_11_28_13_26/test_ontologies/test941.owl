Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (

Annotation(Annotation(Annotation( :anr :annotation3) Annotation( :anp :annotation1)  :anr :annotation4) Annotation( :ans :annotation1) Annotation( :anp :annotation2)  :anq :annotation2) 
Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


EquivalentClasses( ObjectSomeValuesFrom(:rsim ObjectIntersectionOf(:A DataSomeValuesFrom(:dr rdfs:Literal) ObjectHasSelf(:qsim) ObjectHasValue(:snonsim :c) ObjectOneOf(:d) :D :C :D DataSomeValuesFrom(:dp DataOneOf("s1"^^xsd:string) ) :B DataHasValue(:dq "s4") ObjectHasValue(:rnonsim :a) ObjectOneOf(:b) DataSomeValuesFrom(:ds DataIntersectionOf(DataIntersectionOf(rdf:PlainLiteral DataIntersectionOf(xsd:string rdfs:Literal )  )  DataIntersectionOf(xsd:string rdf:PlainLiteral )  ) ) DataSomeValuesFrom(:dp rdf:PlainLiteral) ObjectHasValue(:qnonsim :a) ObjectSomeValuesFrom(:ssim :D) )) DataHasValue(:ds "s3"@en) )

ObjectPropertyAssertion( :psim :c :b)

ObjectPropertyAssertion(Annotation( :ans :annotation1) Annotation( :anr :annotation2)  :pnonsim :d :a)

ReflexiveObjectProperty( :rnonsim)

SubDataPropertyOf( :ds :dp)

DatatypeDefinition( :dta xsd:string)

HasKey( :A ( ) ( :dp  ) )

TransitiveObjectProperty( :snonsim)

TransitiveObjectProperty( :snonsim)

ClassAssertion( :D :d)

FunctionalDataProperty( :dq) 
)
