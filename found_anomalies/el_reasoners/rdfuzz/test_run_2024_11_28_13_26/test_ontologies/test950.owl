Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (


Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


SubDataPropertyOf(Annotation(Annotation( :anp :annotation1) Annotation( :anq :annotation3)  :anp :annotation2) Annotation( :anr :annotation4) Annotation( :ans :annotation3) Annotation( :anq :annotation4)  :dq :dr)

ObjectPropertyAssertion( :qnonsim :b :d)

ObjectPropertyRange( :psim :A)

NegativeObjectPropertyAssertion(Annotation(Annotation(Annotation(Annotation( :anq :annotation4) Annotation( :anq :annotation1) Annotation( :ans :annotation4)  :anq :annotation1)  :anr :annotation4) Annotation( :ans :annotation2) Annotation( :anq :annotation3) Annotation( :anq :annotation2)  :anq :annotation3)  :rnonsim :c :a)

DisjointClasses(Annotation( :anr :annotation4)  ObjectOneOf(:b) ObjectIntersectionOf(ObjectHasSelf(:ssim) DataHasValue(:dp "s2") ObjectSomeValuesFrom(:snonsim :B) DataSomeValuesFrom(:ds DataOneOf("s3"@no) ) ObjectHasValue(:qsim :a) :D :C DataSomeValuesFrom(:ds rdfs:Literal) DataSomeValuesFrom(:dq DataIntersectionOf(xsd:string rdf:PlainLiteral ) ) DataSomeValuesFrom(:dq rdfs:Literal) DataHasValue(:ds "s4"^^rdfs:Literal) ObjectSomeValuesFrom(:pnonsim ObjectSomeValuesFrom(:rsim :B)) ObjectHasValue(:rsim :b) ObjectHasValue(:qsim :c) :D ) ) 
)
