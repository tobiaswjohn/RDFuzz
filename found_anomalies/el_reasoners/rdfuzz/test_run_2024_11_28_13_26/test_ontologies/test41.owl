Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (

Annotation(Annotation(Annotation( :ans :annotation2)  :anr :annotation1) Annotation( :anq :annotation4) Annotation( :anp :annotation1) Annotation( :anp :annotation1) Annotation( :anq :annotation3)  :anp :annotation3) 
Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


EquivalentClasses(Annotation( :ans :annotation2)  ObjectOneOf(:a) ObjectIntersectionOf(:C :A ) DataSomeValuesFrom(:dp rdfs:Literal) )

FunctionalDataProperty(Annotation( :ans :annotation1)  :ds)

DisjointClasses( ObjectSomeValuesFrom(:pnonsim ObjectHasValue(:ssim :b)) ObjectHasSelf(:psim) DataHasValue(:dq "s2") :D :D :B )

ObjectPropertyAssertion(Annotation( :ans :annotation2)  :snonsim :c :d)

SubClassOf( DataSomeValuesFrom(:dr DataOneOf("s4"@no) ) DataHasValue(:dr "s3"^^rdf:PlainLiteral))

HasKey(Annotation(Annotation( :anq :annotation4)  :anq :annotation3) Annotation(Annotation( :ans :annotation4)  :anq :annotation3)  DataSomeValuesFrom(:ds DataIntersectionOf(xsd:string DataIntersectionOf(DataIntersectionOf(rdf:PlainLiteral xsd:string )  DataIntersectionOf(xsd:string rdf:PlainLiteral )  )  ) ) ( ) ( :dr  ) )

HasKey( ObjectHasValue(:qnonsim :b) ( :qsim :rnonsim  ) ( :dp :dp  ) )

DisjointClasses(Annotation( :anq :annotation2)  ObjectHasSelf(:rsim) ObjectHasValue(:qsim :a) ObjectSomeValuesFrom(:psim :D) :C ) 
)
