Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (

Annotation(Annotation(Annotation( :anp :annotation2) Annotation( :ans :annotation1)  :anq :annotation3) Annotation( :anp :annotation4) Annotation( :anp :annotation4)  :anr :annotation1) 
Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


ObjectPropertyAssertion(Annotation( :anq :annotation1)  :ssim :c :b)

DisjointClasses(Annotation( :anr :annotation4)  ObjectSomeValuesFrom(:qnonsim :D) ObjectHasSelf(:psim) ObjectIntersectionOf(DataHasValue(:dq "s2") :A ) )

ReflexiveObjectProperty( :pnonsim)

SubClassOf(Annotation( :anq :annotation3) Annotation( :anq :annotation4) Annotation( :anq :annotation3)  DataSomeValuesFrom(:ds rdfs:Literal) ObjectHasValue(:rsim :a))

EquivalentClasses( ObjectOneOf(:d) :C :B :A DataSomeValuesFrom(:dp DataIntersectionOf(xsd:string rdf:PlainLiteral DataOneOf("s3"@no)  ) ) DataSomeValuesFrom(:dr DataOneOf("s1"^^rdfs:Literal) ) DataHasValue(:ds "s4"@de) ObjectHasValue(:rnonsim :a) ObjectSomeValuesFrom(:qsim ObjectSomeValuesFrom(:snonsim DataHasValue(:ds "s1"@en))) ObjectHasValue(:snonsim :b) ObjectSomeValuesFrom(:pnonsim DataHasValue(:ds "s2"@fr)) ObjectHasValue(:qsim :a) DataHasValue(:dp "s1"@de) DataHasValue(:ds "s4"^^rdf:PlainLiteral) ObjectOneOf(:c) ObjectHasSelf(:psim) ) 
)
