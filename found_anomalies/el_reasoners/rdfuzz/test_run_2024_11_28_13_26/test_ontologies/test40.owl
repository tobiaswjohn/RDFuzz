Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (

Annotation(Annotation(Annotation( :anq :annotation1)  :anr :annotation4) Annotation( :anq :annotation3) Annotation( :ans :annotation2)  :anp :annotation3) 
Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


ClassAssertion( ObjectHasValue(:qsim :b) :c)

DatatypeDefinition( :dta DataIntersectionOf(xsd:string DataOneOf("s2")  ) )

HasKey( DataSomeValuesFrom(:dr rdf:PlainLiteral) ( :qnonsim :snonsim  ) ( ) )

SubClassOf( :C ObjectHasSelf(:psim))

ObjectPropertyAssertion( :rnonsim :d :a)

EquivalentClasses(Annotation( :anq :annotation3)  ObjectOneOf(:d) ObjectSomeValuesFrom(:ssim DataHasValue(:ds "s3")) ObjectIntersectionOf(:D :A ) )

DatatypeDefinition( :dtc rdfs:Literal)

DisjointClasses(Annotation( :anp :annotation3)  DataHasValue(:dq "s4"@fr) :B DataHasValue(:dp "s1"^^rdf:PlainLiteral) DataHasValue(:dp "s4"^^xsd:string) ObjectHasValue(:pnonsim :a) ObjectHasValue(:rsim :c) ObjectHasValue(:snonsim :b) DataHasValue(:dr "s4"@no) DataHasValue(:dp "s1"@de) DataHasValue(:dr "s3"@en) DataHasValue(:dq "s1") DataSomeValuesFrom(:ds DataIntersectionOf(DataIntersectionOf(rdf:PlainLiteral rdfs:Literal )  rdfs:Literal rdfs:Literal ) ) DataSomeValuesFrom(:dq rdf:PlainLiteral) :A ) 
)
