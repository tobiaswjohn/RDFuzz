Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (

Annotation(Annotation( :anp :annotation4) Annotation( :anr :annotation2) Annotation( :anq :annotation3) Annotation( :anr :annotation3)  :ans :annotation1) 
Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


ObjectPropertyAssertion( :ssim :d :c)

SameIndividual( :b :a :c )

DisjointClasses( ObjectIntersectionOf(:B ObjectOneOf(:d) ObjectHasSelf(:psim) DataHasValue(:dp "s4") ObjectSomeValuesFrom(:qnonsim :C) ObjectHasValue(:rnonsim :c) :A :D DataHasValue(:ds "s2"@en) DataHasValue(:dq "s1"@de) ObjectHasValue(:snonsim :a) ObjectSomeValuesFrom(:rsim ObjectSomeValuesFrom(:qsim ObjectHasValue(:qsim :d))) ObjectHasValue(:pnonsim :c) ObjectSomeValuesFrom(:ssim DataHasValue(:dp "s4"@no)) DataHasValue(:ds "s1"@fr) DataHasValue(:ds "s1"@fr) DataHasValue(:dr "s1"@en) DataHasValue(:dq "s3"@fr) DataHasValue(:ds "s1"@en) :C ) DataSomeValuesFrom(:dr DataIntersectionOf(DataOneOf("s3"^^xsd:string)  rdfs:Literal rdf:PlainLiteral ) ) )

DatatypeDefinition( :dta rdfs:Literal)

ObjectPropertyRange( :snonsim :A)

ClassAssertion( :B :d)

HasKey( DataSomeValuesFrom(:dq xsd:string) ( :psim  ) ( ) )

EquivalentClasses( :C :B ) 
)
