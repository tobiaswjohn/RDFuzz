Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (

Annotation(Annotation(Annotation( :anr :annotation4) Annotation( :anp :annotation2)  :ans :annotation1) Annotation( :anr :annotation2) Annotation( :ans :annotation4) Annotation( :anq :annotation2)  :anq :annotation3) 
Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


HasKey( DataSomeValuesFrom(:dq rdf:PlainLiteral) ( :qnonsim  ) ( ) )

HasKey( :B ( :qsim :psim :ssim :rnonsim :snonsim :pnonsim :rsim :qnonsim  ) ( :dp :ds  ) )

SubClassOf(Annotation(Annotation( :anq :annotation4) Annotation( :anr :annotation2)  :anq :annotation3) Annotation(Annotation( :anp :annotation3)  :anq :annotation3) Annotation( :ans :annotation1)  ObjectOneOf(:a) DataHasValue(:dr "s3"^^rdfs:Literal))

ObjectPropertyAssertion( :pnonsim :d :c)

DisjointClasses( ObjectSomeValuesFrom(:qsim ObjectIntersectionOf(:C :A :D DataHasValue(:dq "s4"@de) DataHasValue(:dq "s2") DataHasValue(:ds "s1") DataSomeValuesFrom(:dp DataIntersectionOf(xsd:string DataOneOf("s4"@en)  ) ) DataSomeValuesFrom(:dq DataIntersectionOf(DataOneOf("s4"@no)  rdfs:Literal rdfs:Literal ) ) DataHasValue(:dp "s3") DataHasValue(:dr "s3") :B )) ObjectHasSelf(:ssim) ObjectHasValue(:rsim :b) ) 
)
