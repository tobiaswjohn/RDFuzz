Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (

Annotation(Annotation(Annotation( :anq :annotation4) Annotation( :anq :annotation1)  :anr :annotation3) Annotation(Annotation( :anr :annotation3)  :anq :annotation2) Annotation( :ans :annotation2) Annotation( :anr :annotation1)  :anp :annotation1) 
Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


ObjectPropertyAssertion(Annotation(Annotation(Annotation( :anr :annotation4)  :anp :annotation4) Annotation( :anr :annotation1)  :anr :annotation4) Annotation( :anq :annotation2) Annotation( :anq :annotation1) Annotation( :ans :annotation1)  :rnonsim :b :d)

DatatypeDefinition( :dta DataOneOf("s2"^^rdf:PlainLiteral) )

DatatypeDefinition( :dtc DataIntersectionOf(xsd:string rdfs:Literal xsd:string ) )

DatatypeDefinition( :dtb DataOneOf("s4") )

EquivalentClasses(Annotation( :ans :annotation2)  ObjectHasSelf(:psim) ObjectSomeValuesFrom(:rsim ObjectIntersectionOf(ObjectHasValue(:qnonsim :a) ObjectOneOf(:c) :B DataSomeValuesFrom(:ds DataOneOf("s1"@no) ) DataHasValue(:dr "s3"@en) :D :C :A ObjectSomeValuesFrom(:qsim ObjectSomeValuesFrom(:pnonsim ObjectSomeValuesFrom(:pnonsim DataSomeValuesFrom(:dp rdf:PlainLiteral)))) ObjectSomeValuesFrom(:snonsim ObjectSomeValuesFrom(:ssim DataSomeValuesFrom(:dq DataOneOf("s3") ))) DataHasValue(:ds "s2") :A :B :D )) ) 
)
