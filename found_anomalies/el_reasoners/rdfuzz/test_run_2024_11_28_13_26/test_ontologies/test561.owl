Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (

Annotation(Annotation(Annotation( :anr :annotation2)  :anp :annotation2) Annotation(Annotation( :ans :annotation1)  :anr :annotation4) Annotation( :anp :annotation4)  :anq :annotation3) 
Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


ObjectPropertyAssertion(Annotation(Annotation( :anq :annotation4) Annotation( :anq :annotation4)  :anr :annotation1) Annotation( :anq :annotation4)  :ssim :b :c)

EquivalentClasses( :C ObjectIntersectionOf(ObjectSomeValuesFrom(:rnonsim ObjectHasValue(:qnonsim :a)) DataHasValue(:dr "s3"@en) ObjectOneOf(:d) ObjectHasSelf(:qsim) :B :A :D DataHasValue(:ds "s1") DataSomeValuesFrom(:dq DataOneOf("s4"^^rdfs:Literal) ) DataHasValue(:dq "s2"^^xsd:string) DataSomeValuesFrom(:dq DataIntersectionOf(DataIntersectionOf(rdf:PlainLiteral rdf:PlainLiteral )  DataIntersectionOf(rdf:PlainLiteral rdf:PlainLiteral )  ) ) ObjectSomeValuesFrom(:rsim ObjectSomeValuesFrom(:psim ObjectHasValue(:snonsim :a))) ObjectHasValue(:pnonsim :a) :D ) DataSomeValuesFrom(:dp rdf:PlainLiteral) )

DataPropertyDomain(Annotation( :anp :annotation2)  :dq DataHasValue(:dq "s1"@no))

DisjointClasses(Annotation( :anr :annotation3) Annotation( :ans :annotation4) Annotation( :ans :annotation3)  DataHasValue(:dq "s4") :B :D )

DataPropertyRange(Annotation( :anp :annotation3) Annotation( :anq :annotation4)  :ds DataIntersectionOf(xsd:string DataIntersectionOf(rdf:PlainLiteral xsd:string )  rdfs:Literal ) ) 
)
