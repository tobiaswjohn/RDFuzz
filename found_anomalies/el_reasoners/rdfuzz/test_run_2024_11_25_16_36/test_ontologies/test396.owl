Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (


Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


ObjectPropertyAssertion(Annotation(Annotation( :anr :annotation3)  :ans :annotation1) Annotation( :anq :annotation2) Annotation( :anp :annotation4) Annotation( :anq :annotation4)  :rsim :c :a)

HasKey(Annotation( :anq :annotation4) Annotation( :anp :annotation3)  :A ( :rnonsim :qsim  ) ( ) )

TransitiveObjectProperty( :pnonsim)

SubObjectPropertyOf( :psim :qnonsim)

DisjointClasses( ObjectHasValue(:snonsim :b) ObjectIntersectionOf(DataHasValue(:dr "s3"^^rdf:PlainLiteral) ObjectOneOf(:d) DataSomeValuesFrom(:dp DataOneOf("s2") ) ObjectSomeValuesFrom(:pnonsim :D) :B :C :A DataSomeValuesFrom(:dq rdfs:Literal) DataSomeValuesFrom(:ds DataIntersectionOf(DataOneOf("s4")  xsd:string xsd:string ) ) DataSomeValuesFrom(:dq DataOneOf("s1") ) DataSomeValuesFrom(:ds rdfs:Literal) ObjectHasSelf(:qsim) DataHasValue(:dp "s3") ) ObjectHasSelf(:ssim) ) 
)
