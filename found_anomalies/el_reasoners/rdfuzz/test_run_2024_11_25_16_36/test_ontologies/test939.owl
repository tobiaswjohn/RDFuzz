Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (


Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


ObjectPropertyDomain(Annotation(Annotation( :ans :annotation2) Annotation( :anq :annotation1)  :anr :annotation3) Annotation( :anp :annotation4) Annotation( :anr :annotation1) Annotation( :anp :annotation4)  :qnonsim ObjectHasSelf(:psim))

HasKey(Annotation( :anq :annotation1)  ObjectHasValue(:rsim :d) ( :ssim  ) ( ) )

SubClassOf(Annotation(Annotation( :ans :annotation2) Annotation( :anr :annotation1)  :anq :annotation3)  ObjectOneOf(:a) DataHasValue(:dr "s4"^^rdf:PlainLiteral))

ObjectPropertyAssertion( :pnonsim :c :b)

ReflexiveObjectProperty( :rnonsim)

ObjectPropertyAssertion( :qsim :c :d)

DifferentIndividuals(Annotation( :anr :annotation3) Annotation(Annotation(Annotation( :anp :annotation3) Annotation( :anr :annotation3)  :anq :annotation3)  :anq :annotation2) Annotation( :anr :annotation1) Annotation( :ans :annotation2)  :a :d )

HasKey( ObjectSomeValuesFrom(:snonsim DataSomeValuesFrom(:ds xsd:string)) ( ) ( :dq :dp  ) )

DisjointClasses( :D ObjectIntersectionOf(:B :A :D DataSomeValuesFrom(:dq DataOneOf("s2") ) DataSomeValuesFrom(:dp DataIntersectionOf(rdfs:Literal DataIntersectionOf(xsd:string xsd:string )  ) ) DataSomeValuesFrom(:ds rdfs:Literal) DataHasValue(:dr "s3") DataHasValue(:dp "s1") :A ) :C )

EquivalentClasses(Annotation( :ans :annotation3)  DataSomeValuesFrom(:dr xsd:string) :A DataSomeValuesFrom(:dr rdfs:Literal) :C )

EquivalentDataProperties( :ds :dq :dr :dq :dr ) 
)
