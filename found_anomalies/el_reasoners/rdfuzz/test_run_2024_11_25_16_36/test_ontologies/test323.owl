Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (

Annotation(Annotation(Annotation( :anr :annotation3) Annotation( :ans :annotation2)  :anq :annotation1) Annotation(Annotation( :anq :annotation3)  :ans :annotation4) Annotation( :anp :annotation3) Annotation( :ans :annotation3) Annotation( :anq :annotation4)  :anp :annotation2) 
Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


SubObjectPropertyOf(Annotation( :ans :annotation3)  :ssim :psim)

ReflexiveObjectProperty( :qnonsim)

ObjectPropertyRange( :pnonsim ObjectOneOf(:b))

SubDataPropertyOf(Annotation( :anp :annotation3) Annotation( :ans :annotation2)  :dr :dp)

DataPropertyDomain(Annotation( :anp :annotation3)  :dq ObjectIntersectionOf(:C ObjectHasSelf(:qsim) DataSomeValuesFrom(:ds DataOneOf("s2") ) ))

ObjectPropertyAssertion(Annotation( :ans :annotation3)  :rnonsim :c :d)

DataPropertyAssertion( :dp :a "s1"^^rdfs:Literal)

EquivalentClasses( DataHasValue(:ds "s4") ObjectSomeValuesFrom(:snonsim :A) ObjectHasValue(:rsim :c) DataSomeValuesFrom(:dr rdf:PlainLiteral) :B :D DataSomeValuesFrom(:ds DataIntersectionOf(xsd:string DataIntersectionOf(DataIntersectionOf(rdf:PlainLiteral rdfs:Literal )  DataOneOf("s4")  DataOneOf("s4")  )  ) ) DataSomeValuesFrom(:dr rdf:PlainLiteral) DataSomeValuesFrom(:dr DataOneOf("s3") ) DataHasValue(:dp "s2") :A :A ) 
)
