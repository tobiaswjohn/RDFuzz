Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (

Annotation(Annotation(Annotation( :ans :annotation4)  :anq :annotation2) Annotation( :anp :annotation3) Annotation( :anr :annotation1) Annotation( :ans :annotation2)  :anr :annotation1) 
Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


ObjectPropertyAssertion( :psim :a :d)

EquivalentDataProperties(Annotation( :anq :annotation1) Annotation( :anr :annotation2)  :dq :dr )

ReflexiveObjectProperty( :qnonsim)

DisjointClasses( ObjectIntersectionOf(ObjectHasSelf(:ssim) DataSomeValuesFrom(:ds DataIntersectionOf(rdfs:Literal DataOneOf("s2"^^rdf:PlainLiteral)  xsd:string ) ) DataHasValue(:dp "s1") ObjectOneOf(:b) ObjectHasValue(:pnonsim :c) :A ) ObjectSomeValuesFrom(:qsim :D) )

EquivalentClasses( :B :C ObjectHasValue(:snonsim :a) ObjectHasValue(:ssim :a) ObjectHasValue(:rsim :d) ObjectSomeValuesFrom(:rnonsim DataHasValue(:dp "s3")) ObjectSomeValuesFrom(:psim ObjectSomeValuesFrom(:pnonsim DataHasValue(:dp "s4"))) DataHasValue(:dr "s1") DataHasValue(:dp "s4"^^xsd:string) ObjectOneOf(:b) ObjectIntersectionOf(:C DataSomeValuesFrom(:ds DataOneOf("s3") ) ) ) 
)
