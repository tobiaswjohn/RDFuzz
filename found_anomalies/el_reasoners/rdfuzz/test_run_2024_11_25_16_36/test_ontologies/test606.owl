Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (


Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


NegativeObjectPropertyAssertion(Annotation(Annotation( :anq :annotation2) Annotation( :anp :annotation2)  :anr :annotation3) Annotation( :anp :annotation2) Annotation( :ans :annotation4) Annotation( :anq :annotation1)  :ssim :a :b)

EquivalentClasses(Annotation( :anq :annotation1) Annotation( :anr :annotation2) Annotation( :ans :annotation2)  :C DataHasValue(:dp "s4"^^xsd:string) DataSomeValuesFrom(:dq DataIntersectionOf(rdfs:Literal rdf:PlainLiteral ) ) )

ObjectPropertyDomain( :rnonsim ObjectIntersectionOf(ObjectHasValue(:rsim :c) ObjectSomeValuesFrom(:snonsim ObjectOneOf(:d)) ObjectHasSelf(:qsim) :D :A :B :B DataSomeValuesFrom(:ds DataOneOf("s3") ) ObjectHasValue(:pnonsim :c) ObjectHasValue(:qnonsim :b) ObjectHasValue(:psim :a) ObjectHasValue(:ssim :a) DataHasValue(:dr "s1") DataHasValue(:dp "s2") DataSomeValuesFrom(:dr DataIntersectionOf(DataOneOf("s2")  rdfs:Literal DataOneOf("s4")  ) ) DataSomeValuesFrom(:dr DataIntersectionOf(DataOneOf("s2")  DataIntersectionOf(DataIntersectionOf(rdf:PlainLiteral rdfs:Literal DataIntersectionOf(DataOneOf("s1")  DataOneOf("s2"^^rdfs:Literal)  )  DataIntersectionOf(DataOneOf("s4")  DataIntersectionOf(rdf:PlainLiteral xsd:string rdfs:Literal )  )  )  rdf:PlainLiteral )  rdfs:Literal ) ) ObjectHasValue(:rnonsim :b) ObjectOneOf(:c) ))

SubClassOf( DataHasValue(:dp "s4"^^rdfs:Literal) ObjectOneOf(:c))

HasKey( ObjectHasValue(:qsim :c) ( :rnonsim  ) ( ) )

HasKey(Annotation(Annotation( :anp :annotation3)  :anq :annotation4) Annotation(Annotation( :anp :annotation3) Annotation( :anq :annotation3)  :ans :annotation1) Annotation( :ans :annotation3)  ObjectOneOf(:a) ( ) ( :ds :ds  ) )

HasKey(Annotation(Annotation( :anr :annotation4) Annotation(Annotation( :anr :annotation4) Annotation( :ans :annotation2)  :ans :annotation4) Annotation(Annotation(Annotation(Annotation( :ans :annotation3)  :anq :annotation1) Annotation( :anr :annotation1) Annotation( :anq :annotation2)  :anp :annotation1) Annotation( :anr :annotation4)  :anq :annotation1)  :anq :annotation3)  DataSomeValuesFrom(:dp DataOneOf("s4") ) ( :ssim :pnonsim  ) ( :dq  ) )

DisjointClasses( DataSomeValuesFrom(:dq DataOneOf("s1"^^rdfs:Literal) ) :B )

ObjectPropertyAssertion( :snonsim :c :c)

ObjectPropertyAssertion(Annotation( :anp :annotation3)  :ssim :c :a)

DataPropertyAssertion( :dp :c "s3"^^xsd:string)

SubClassOf( ObjectSomeValuesFrom(:rnonsim ObjectOneOf(:d)) ObjectSomeValuesFrom(:snonsim DataHasValue(:dp "s2"^^rdf:PlainLiteral)))

SubClassOf( :B ObjectIntersectionOf(ObjectIntersectionOf(ObjectOneOf(:a) ObjectIntersectionOf(DataSomeValuesFrom(:dp DataIntersectionOf(DataOneOf("s2")  rdfs:Literal rdf:PlainLiteral ) ) ObjectIntersectionOf(ObjectSomeValuesFrom(:psim :B) :D :A ) ObjectOneOf(:b) ) ) ObjectHasSelf(:ssim) ))

EquivalentObjectProperties( :psim :pnonsim :qsim )

NegativeDataPropertyAssertion( :dp :d "s3"^^xsd:string)

ReflexiveObjectProperty( :qnonsim)

SubDataPropertyOf( :dr :dp)

DataPropertyDomain( :dr :D)

SameIndividual( :c :b )

HasKey( :A ( :snonsim  ) ( ) ) 
)
