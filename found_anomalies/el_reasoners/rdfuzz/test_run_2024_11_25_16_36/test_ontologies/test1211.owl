Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (

Annotation(Annotation(Annotation( :anp :annotation2) Annotation( :anr :annotation3)  :anp :annotation3) Annotation( :ans :annotation1) Annotation( :anr :annotation4)  :anq :annotation1) 
Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


SubClassOf(Annotation( :ans :annotation4) Annotation( :anp :annotation2)  ObjectOneOf(:a) ObjectIntersectionOf(:D DataSomeValuesFrom(:dq rdfs:Literal) ))

DisjointClasses( DataHasValue(:dp "s3") ObjectHasValue(:ssim :b) ObjectSomeValuesFrom(:snonsim ObjectHasSelf(:rsim)) :B :A :A :C ObjectHasValue(:rnonsim :d) ObjectHasValue(:qsim :c) DataSomeValuesFrom(:dr DataOneOf("s1"^^rdf:PlainLiteral) ) DataSomeValuesFrom(:ds xsd:string) DataSomeValuesFrom(:dr DataIntersectionOf(rdfs:Literal xsd:string ) ) ObjectSomeValuesFrom(:qnonsim :D) ObjectSomeValuesFrom(:psim :A) :B :C )

ObjectPropertyAssertion( :pnonsim :a :d)

DataPropertyAssertion( :dq :a "s4")

DataPropertyRange( :dp DataIntersectionOf(DataIntersectionOf(DataOneOf("s4"^^rdf:PlainLiteral)  DataOneOf("s2")  DataIntersectionOf(DataIntersectionOf(rdf:PlainLiteral DataIntersectionOf(rdfs:Literal DataOneOf("s4"^^rdfs:Literal)  )  )  rdf:PlainLiteral )  DataOneOf("s1")  DataOneOf("s4"^^xsd:string)  )  DataOneOf("s2")  DataOneOf("s3")  rdf:PlainLiteral DataOneOf("s4")  ) ) 
)
