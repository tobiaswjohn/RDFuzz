Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (


Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


SubClassOf(Annotation( :ans :annotation2) Annotation( :anr :annotation1) Annotation( :anp :annotation3)  ObjectIntersectionOf(:D ObjectSomeValuesFrom(:rsim ObjectOneOf(:b)) ) ObjectHasSelf(:psim))

EquivalentClasses(Annotation( :ans :annotation4) Annotation( :anq :annotation4)  DataHasValue(:dp "s2") ObjectHasValue(:qnonsim :a) DataSomeValuesFrom(:ds xsd:string) :A :B )

HasKey( :C ( :rnonsim :pnonsim  ) ( :dr  ) )

HasKey(Annotation( :anq :annotation4)  ObjectOneOf(:c) ( ) ( :dq :ds :dp  ) )

DisjointClasses(Annotation( :ans :annotation3)  DataSomeValuesFrom(:dr rdfs:Literal) DataSomeValuesFrom(:dr DataIntersectionOf(rdf:PlainLiteral rdfs:Literal ) ) DataSomeValuesFrom(:dr xsd:string) DataSomeValuesFrom(:dq rdfs:Literal) )

SubObjectPropertyOf( :qsim :ssim)

DataPropertyAssertion( :ds :d "s3"^^rdfs:Literal)

ObjectPropertyAssertion( :snonsim :a :d)

SameIndividual( :a :b )

HasKey( DataSomeValuesFrom(:dq DataOneOf("s1") ) ( :snonsim  ) ( ) )

HasKey(Annotation( :anp :annotation3)  DataHasValue(:dq "s4") ( :pnonsim  ) ( :ds  ) ) 
)
