Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (


Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


SubClassOf(Annotation( :ans :annotation1) Annotation( :anr :annotation4) Annotation( :anq :annotation2)  :B ObjectIntersectionOf(ObjectOneOf(:a) ObjectHasSelf(:rsim) ))

ObjectPropertyAssertion(Annotation(Annotation(Annotation( :anp :annotation4) Annotation( :anq :annotation1)  :anq :annotation2)  :anp :annotation1) Annotation( :anq :annotation3) Annotation(Annotation( :anq :annotation4) Annotation( :anq :annotation2) Annotation( :anp :annotation4)  :anq :annotation2)  :pnonsim :b :d)

EquivalentClasses( ObjectHasValue(:qsim :c) ObjectSomeValuesFrom(:psim DataHasValue(:dr "s4"^^rdfs:Literal)) DataSomeValuesFrom(:ds DataIntersectionOf(DataOneOf("s2")  xsd:string DataOneOf("s3")  ) ) :C :A :D DataSomeValuesFrom(:dp rdf:PlainLiteral) DataHasValue(:dq "s1") ObjectHasValue(:rnonsim :d) ObjectSomeValuesFrom(:qnonsim ObjectSomeValuesFrom(:ssim ObjectSomeValuesFrom(:qsim ObjectSomeValuesFrom(:qsim ObjectHasValue(:pnonsim :d))))) ObjectSomeValuesFrom(:snonsim ObjectSomeValuesFrom(:rsim ObjectHasSelf(:qsim))) ObjectSomeValuesFrom(:snonsim :A) )

SubObjectPropertyOf( :psim :rsim)

ReflexiveObjectProperty( :qnonsim) 
)
