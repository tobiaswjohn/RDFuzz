Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (

Annotation(Annotation(Annotation( :ans :annotation2) Annotation( :anp :annotation4)  :anp :annotation2) Annotation(Annotation( :ans :annotation3)  :ans :annotation4) Annotation( :anq :annotation1)  :anr :annotation3) 
Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


FunctionalDataProperty( :dq)

ObjectPropertyAssertion( :snonsim :c :d)

SameIndividual(Annotation( :ans :annotation1)  :a :b )

HasKey( DataHasValue(:dp "s3"^^xsd:string) ( :psim :qsim  ) ( :dr  ) )

DisjointClasses(Annotation( :ans :annotation4)  DataSomeValuesFrom(:ds DataIntersectionOf(rdfs:Literal rdf:PlainLiteral ) ) ObjectIntersectionOf(:A ObjectSomeValuesFrom(:qnonsim ObjectHasValue(:rnonsim :d)) ) :D :C )

EquivalentClasses(Annotation( :ans :annotation4) Annotation( :anp :annotation2)  ObjectHasSelf(:ssim) ObjectOneOf(:a) ObjectOneOf(:b) :A :B DataSomeValuesFrom(:dp DataOneOf("s4") ) DataHasValue(:dq "s2") DataHasValue(:ds "s1") ObjectHasValue(:rsim :c) ObjectSomeValuesFrom(:ssim ObjectSomeValuesFrom(:pnonsim ObjectHasValue(:rnonsim :a))) ObjectSomeValuesFrom(:pnonsim ObjectHasValue(:psim :d)) ObjectHasValue(:qnonsim :d) ObjectHasValue(:rnonsim :a) )

DataPropertyAssertion( :dq :c "s3"^^rdfs:Literal)

EquivalentDataProperties( :dq :dp :dr :dr ) 
)
