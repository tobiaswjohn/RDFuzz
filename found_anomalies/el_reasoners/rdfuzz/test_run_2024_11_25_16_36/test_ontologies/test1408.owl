Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (


Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


DifferentIndividuals(Annotation(Annotation( :anq :annotation3)  :anp :annotation4) Annotation( :anr :annotation1) Annotation(Annotation( :ans :annotation3)  :ans :annotation2) Annotation( :anp :annotation4)  :c :a :b )

ObjectPropertyAssertion(Annotation( :ans :annotation2) Annotation( :anr :annotation4) Annotation(Annotation( :anr :annotation1)  :anr :annotation1) Annotation(Annotation( :ans :annotation3)  :anq :annotation1) Annotation( :ans :annotation4)  :rnonsim :a :d)

EquivalentClasses( ObjectHasSelf(:qsim) ObjectHasValue(:rsim :b) ObjectIntersectionOf(ObjectSomeValuesFrom(:qnonsim :D) ObjectOneOf(:a) DataSomeValuesFrom(:dp DataOneOf("s3") ) DataHasValue(:dr "s1"^^rdf:PlainLiteral) :B :C :A DataSomeValuesFrom(:ds xsd:string) DataSomeValuesFrom(:dq DataIntersectionOf(rdfs:Literal rdf:PlainLiteral ) ) DataSomeValuesFrom(:dq rdfs:Literal) :C :A ObjectHasValue(:ssim :b) ) )

ReflexiveObjectProperty( :pnonsim)

HasKey( :B ( ) ( :dq  ) )

EquivalentDataProperties( :dr :dq )

TransitiveObjectProperty( :snonsim)

DisjointClasses( :D :C ) 
)
