Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (


Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


SameIndividual(Annotation( :anp :annotation4) Annotation( :ans :annotation2) Annotation( :anq :annotation1)  :d :a :c )

TransitiveObjectProperty(Annotation(Annotation( :anq :annotation1)  :anq :annotation3) Annotation(Annotation( :anq :annotation1)  :anp :annotation2) Annotation( :anr :annotation2)  :pnonsim)

ObjectPropertyAssertion(Annotation( :ans :annotation4)  :qsim :a :b)

DisjointClasses( ObjectSomeValuesFrom(:qnonsim ObjectOneOf(:a)) DataSomeValuesFrom(:ds rdfs:Literal) ObjectHasSelf(:psim) )

ObjectPropertyDomain( :ssim ObjectIntersectionOf(DataHasValue(:dr "s4"^^rdf:PlainLiteral) ObjectHasValue(:rnonsim :a) :D :B :C :A :D DataSomeValuesFrom(:dp DataOneOf("s2") ) DataSomeValuesFrom(:dq DataIntersectionOf(xsd:string DataIntersectionOf(xsd:string rdfs:Literal )  ) ) DataSomeValuesFrom(:dr rdfs:Literal) DataSomeValuesFrom(:ds xsd:string) ObjectSomeValuesFrom(:snonsim :C) )) 
)
