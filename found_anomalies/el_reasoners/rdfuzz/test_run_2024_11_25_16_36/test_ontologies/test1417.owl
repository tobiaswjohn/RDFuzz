Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (


Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


DisjointClasses(Annotation(Annotation( :anr :annotation3)  :ans :annotation1) Annotation( :anp :annotation2)  ObjectHasSelf(:ssim) ObjectIntersectionOf(DataSomeValuesFrom(:dq rdf:PlainLiteral) ObjectSomeValuesFrom(:psim :B) :C ) :A )

DataPropertyRange(Annotation( :anq :annotation4) Annotation( :anr :annotation1) Annotation( :anr :annotation2)  :ds DataIntersectionOf(DataOneOf("s2"^^rdfs:Literal)  xsd:string ) )

EquivalentObjectProperties( :rnonsim :pnonsim :qnonsim )

ObjectPropertyAssertion(Annotation(Annotation( :anq :annotation4) Annotation(Annotation(Annotation(Annotation( :anr :annotation3)  :anq :annotation3) Annotation(Annotation( :anr :annotation1)  :ans :annotation2)  :anr :annotation1)  :ans :annotation4)  :anr :annotation2) Annotation( :anr :annotation2)  :qsim :a :d)

EquivalentClasses( ObjectHasValue(:rsim :b) ObjectOneOf(:c) DataHasValue(:dr "s3") :D ObjectHasValue(:snonsim :d) DataSomeValuesFrom(:dp DataIntersectionOf(DataOneOf("s1")  DataOneOf("s4")  xsd:string ) ) ObjectHasValue(:snonsim :b) DataHasValue(:dp "s4") :C :D ) 
)
