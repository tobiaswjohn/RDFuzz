Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (

Annotation(Annotation(Annotation( :anr :annotation4) Annotation( :anq :annotation4)  :anp :annotation3) Annotation( :anr :annotation1)  :ans :annotation2) 
Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


SubObjectPropertyOf( :ssim :rsim)

SubClassOf( ObjectIntersectionOf(ObjectOneOf(:d) :A DataSomeValuesFrom(:ds DataIntersectionOf(DataOneOf("s3")  rdfs:Literal xsd:string ) ) ) ObjectHasSelf(:psim))

DataPropertyRange( :dp rdf:PlainLiteral)

NegativeObjectPropertyAssertion( :rnonsim :b :a)

TransitiveObjectProperty(Annotation( :ans :annotation3)  :snonsim)

DisjointClasses( ObjectSomeValuesFrom(:qsim :B) ObjectHasValue(:pnonsim :c) DataHasValue(:dr "s1"^^rdfs:Literal) :C :D ObjectSomeValuesFrom(:qnonsim DataSomeValuesFrom(:dq DataOneOf("s2") )) :C DataHasValue(:dq "s4") DataHasValue(:dq "s4") DataHasValue(:ds "s2"^^rdfs:Literal) DataHasValue(:dr "s3"^^rdf:PlainLiteral) )

ReflexiveObjectProperty( :psim)

EquivalentObjectProperties( :ssim :pnonsim :pnonsim )

DataPropertyDomain(Annotation( :anp :annotation3)  :ds ObjectHasValue(:psim :c))

ObjectPropertyAssertion( :snonsim :d :b)

EquivalentClasses(Annotation( :anr :annotation3)  DataSomeValuesFrom(:dp rdf:PlainLiteral) ObjectSomeValuesFrom(:ssim ObjectSomeValuesFrom(:snonsim :B)) :D ) 
)
