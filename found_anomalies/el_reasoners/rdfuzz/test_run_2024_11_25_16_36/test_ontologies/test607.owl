Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (

Annotation(Annotation(Annotation( :ans :annotation3) Annotation( :anq :annotation2)  :anq :annotation1) Annotation( :anp :annotation1) Annotation( :anr :annotation3)  :ans :annotation4) 
Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


ClassAssertion( DataSomeValuesFrom(:ds DataIntersectionOf(xsd:string DataOneOf("s4"^^rdfs:Literal)  ) ) :b)

ObjectPropertyAssertion( :rnonsim :a :c)

EquivalentDataProperties(Annotation(Annotation( :anr :annotation4) Annotation( :anr :annotation2)  :anp :annotation2) Annotation( :anq :annotation1)  :dq :dp :dr )

DataPropertyAssertion(Annotation( :anr :annotation2)  :ds :d "s3")

EquivalentClasses( DataHasValue(:dq "s2") ObjectOneOf(:a) ObjectIntersectionOf(:D ObjectHasSelf(:ssim) ObjectSomeValuesFrom(:psim :A) ObjectHasValue(:rsim :b) :C :A :B ObjectHasValue(:qnonsim :a) ObjectSomeValuesFrom(:pnonsim ObjectHasValue(:qsim :b)) ObjectHasValue(:snonsim :c) ObjectHasValue(:pnonsim :d) DataSomeValuesFrom(:dq DataIntersectionOf(DataIntersectionOf(rdf:PlainLiteral xsd:string )  DataIntersectionOf(rdf:PlainLiteral xsd:string )  ) ) DataSomeValuesFrom(:dq rdf:PlainLiteral) DataSomeValuesFrom(:dq DataIntersectionOf(xsd:string xsd:string ) ) DataHasValue(:dp "s1") :A ) ) 
)
