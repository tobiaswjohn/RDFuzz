Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (


Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


NegativeObjectPropertyAssertion(Annotation(Annotation( :anp :annotation2)  :anq :annotation4) Annotation( :anr :annotation1) Annotation( :anq :annotation2) Annotation( :ans :annotation3) Annotation( :anp :annotation2)  :rsim :b :c)

DifferentIndividuals( :a :d )

ObjectPropertyAssertion( :qnonsim :a :a)

EquivalentClasses( DataSomeValuesFrom(:dq xsd:string) ObjectIntersectionOf(:A ObjectHasSelf(:qsim) ObjectHasValue(:rnonsim :b) ObjectSomeValuesFrom(:snonsim :B) ObjectOneOf(:a) DataHasValue(:ds "s2") :D :C DataSomeValuesFrom(:dp DataIntersectionOf(rdfs:Literal DataOneOf("s4"^^rdf:PlainLiteral)  ) ) DataHasValue(:dr "s3"^^xsd:string) ObjectHasValue(:ssim :c) ObjectHasValue(:pnonsim :c) ObjectSomeValuesFrom(:rsim ObjectSomeValuesFrom(:psim :B)) ObjectSomeValuesFrom(:psim ObjectSomeValuesFrom(:psim ObjectHasValue(:rnonsim :c))) :C :D :D ) )

HasKey(Annotation( :anp :annotation2) Annotation( :anp :annotation3)  DataHasValue(:ds "s1") ( :qnonsim  ) ( :dp :ds  ) ) 
)
