Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (


Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


ObjectPropertyAssertion(Annotation( :anr :annotation3) Annotation( :anp :annotation4) Annotation( :anq :annotation1) Annotation( :ans :annotation2)  :snonsim :d :c)

DisjointClasses(Annotation( :anr :annotation4)  ObjectIntersectionOf(ObjectOneOf(:a) :B ObjectHasValue(:ssim :b) DataHasValue(:dp "s1") ObjectSomeValuesFrom(:qnonsim DataSomeValuesFrom(:dr DataIntersectionOf(DataOneOf("s2"^^rdf:PlainLiteral)  xsd:string ) )) :A :C :D :A DataSomeValuesFrom(:ds rdfs:Literal) DataHasValue(:dq "s3") ObjectSomeValuesFrom(:pnonsim ObjectHasValue(:rsim :d)) ObjectSomeValuesFrom(:rnonsim ObjectSomeValuesFrom(:snonsim ObjectHasValue(:rnonsim :a))) ObjectHasValue(:psim :c) ObjectHasValue(:rsim :d) ObjectHasValue(:rsim :d) DataHasValue(:ds "s4") DataSomeValuesFrom(:dr DataIntersectionOf(DataIntersectionOf(rdf:PlainLiteral xsd:string )  xsd:string rdfs:Literal ) ) DataSomeValuesFrom(:dp xsd:string) :A :C ) ObjectHasSelf(:qsim) )

DifferentIndividuals( :c :d )

FunctionalDataProperty( :ds)

SubObjectPropertyOf( :qsim :snonsim)

HasKey( :B ( ) ( :dr  ) )

NegativeDataPropertyAssertion( :dp :d "s3")

SubClassOf( :A :D) 
)
