Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (


Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


ObjectPropertyAssertion(Annotation( :anq :annotation3) Annotation( :ans :annotation4) Annotation( :anp :annotation2) Annotation( :anr :annotation1)  :rsim :c :b)

FunctionalDataProperty(Annotation(Annotation(Annotation(Annotation(Annotation( :anp :annotation3)  :anr :annotation4)  :anp :annotation2)  :anp :annotation3) Annotation( :anq :annotation1) Annotation( :ans :annotation1)  :anq :annotation3)  :dq)

SubClassOf(Annotation( :anq :annotation2) Annotation( :ans :annotation1)  :D ObjectIntersectionOf(ObjectOneOf(:d) DataHasValue(:ds "s4") ))

DisjointClasses( ObjectSomeValuesFrom(:pnonsim DataSomeValuesFrom(:dp DataOneOf("s1"^^xsd:string) )) ObjectHasSelf(:psim) ObjectHasValue(:snonsim :a) :B :C :A :B DataSomeValuesFrom(:dr DataIntersectionOf(rdfs:Literal rdfs:Literal DataOneOf("s2")  ) ) DataSomeValuesFrom(:dr rdf:PlainLiteral) ObjectSomeValuesFrom(:qsim ObjectSomeValuesFrom(:ssim ObjectHasValue(:snonsim :c))) ObjectHasValue(:qnonsim :c) ObjectSomeValuesFrom(:rnonsim ObjectHasValue(:rnonsim :c)) ObjectSomeValuesFrom(:qnonsim DataHasValue(:ds "s3")) ObjectHasValue(:psim :c) DataHasValue(:dr "s2") DataHasValue(:ds "s4") ObjectIntersectionOf(DataSomeValuesFrom(:dr rdfs:Literal) ObjectSomeValuesFrom(:qsim ObjectHasValue(:rnonsim :d)) ) )

EquivalentDataProperties(Annotation( :ans :annotation2)  :dp :dr :dq ) 
)
