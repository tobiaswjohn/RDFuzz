Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (

Annotation(Annotation( :anp :annotation4) Annotation( :anr :annotation2) Annotation( :anq :annotation2) Annotation( :anr :annotation1)  :ans :annotation3) 
Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


DataPropertyAssertion( :ds :d "s4"^^rdf:PlainLiteral)

DataPropertyDomain(Annotation( :ans :annotation2) Annotation( :anp :annotation2)  :dr DataSomeValuesFrom(:dq DataIntersectionOf(DataOneOf("s2")  xsd:string ) ))

EquivalentClasses( ObjectHasValue(:qnonsim :b) ObjectIntersectionOf(ObjectHasSelf(:psim) :A ) ObjectOneOf(:a) DataHasValue(:dp "s3") ObjectSomeValuesFrom(:rsim ObjectHasValue(:rnonsim :c)) :C :D :B ObjectOneOf(:a) ObjectOneOf(:c) ObjectSomeValuesFrom(:pnonsim ObjectSomeValuesFrom(:ssim ObjectHasValue(:qsim :a))) ObjectHasValue(:qsim :a) ObjectSomeValuesFrom(:snonsim ObjectHasValue(:rnonsim :a)) DataSomeValuesFrom(:dq rdfs:Literal) DataSomeValuesFrom(:dp DataIntersectionOf(DataOneOf("s2")  DataOneOf("s1")  DataOneOf("s2"^^rdf:PlainLiteral)  rdf:PlainLiteral ) ) DataSomeValuesFrom(:dr DataOneOf("s4") ) DataHasValue(:ds "s1") DataHasValue(:dq "s3") :D )

ObjectPropertyAssertion( :pnonsim :a :c)

DataPropertyAssertion( :dp :b "s4"^^rdf:PlainLiteral) 
)
