Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (


Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


TransitiveObjectProperty(Annotation(Annotation( :ans :annotation4)  :anp :annotation1) Annotation( :anr :annotation2) Annotation( :anq :annotation3)  :pnonsim)

DisjointClasses(Annotation( :anr :annotation3)  DataSomeValuesFrom(:dr xsd:string) DataHasValue(:dq "s3"^^rdfs:Literal) ObjectIntersectionOf(:A :C ) )

ReflexiveObjectProperty( :ssim)

HasKey( ObjectHasSelf(:psim) ( ) ( :dp :ds  ) )

ObjectPropertyRange( :qnonsim ObjectOneOf(:a))

ObjectPropertyAssertion( :snonsim :c :d)

EquivalentClasses( ObjectSomeValuesFrom(:rsim :B) ObjectHasValue(:qsim :b) :D :D DataSomeValuesFrom(:ds DataIntersectionOf(rdf:PlainLiteral DataOneOf("s1")  ) ) DataSomeValuesFrom(:ds DataOneOf("s2") ) DataHasValue(:ds "s4") ObjectSomeValuesFrom(:rnonsim ObjectSomeValuesFrom(:pnonsim DataSomeValuesFrom(:dr DataIntersectionOf(DataIntersectionOf(DataIntersectionOf(xsd:string xsd:string )  rdfs:Literal )  rdf:PlainLiteral ) ))) ObjectHasValue(:qnonsim :b) DataSomeValuesFrom(:dq DataIntersectionOf(rdfs:Literal rdfs:Literal ) ) :A )

DataPropertyRange( :dq DataIntersectionOf(xsd:string DataIntersectionOf(DataIntersectionOf(rdf:PlainLiteral xsd:string )  rdfs:Literal )  DataIntersectionOf(rdfs:Literal rdfs:Literal )  ) ) 
)
