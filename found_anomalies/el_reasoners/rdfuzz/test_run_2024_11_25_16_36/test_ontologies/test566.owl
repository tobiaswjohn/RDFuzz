Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (

Annotation(Annotation( :ans :annotation1) Annotation( :anr :annotation3) Annotation( :anp :annotation4)  :anq :annotation2) 
Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


FunctionalDataProperty(Annotation( :ans :annotation2) Annotation( :ans :annotation2)  :dq)

ObjectPropertyAssertion( :snonsim :d :c)

TransitiveObjectProperty(Annotation(Annotation( :anp :annotation2) Annotation( :anq :annotation2) Annotation( :anr :annotation2)  :ans :annotation3)  :rnonsim)

EquivalentClasses(Annotation( :ans :annotation2)  ObjectOneOf(:b) ObjectIntersectionOf(ObjectHasValue(:psim :a) ObjectHasSelf(:ssim) DataSomeValuesFrom(:dr DataOneOf("s1"^^xsd:string) ) :D ObjectSomeValuesFrom(:qsim :B) :C DataHasValue(:dp "s2") :A DataSomeValuesFrom(:ds DataIntersectionOf(rdfs:Literal rdfs:Literal rdf:PlainLiteral ) ) DataSomeValuesFrom(:ds xsd:string) DataSomeValuesFrom(:dq DataOneOf("s3") ) ObjectHasValue(:pnonsim :b) ObjectHasValue(:qnonsim :c) ObjectHasValue(:rsim :a) DataHasValue(:dq "s4") DataHasValue(:dr "s3") ObjectOneOf(:a) ObjectOneOf(:a) ObjectSomeValuesFrom(:qsim DataHasValue(:dq "s2")) :B ) )

DisjointClasses( ObjectHasSelf(:rsim) DataHasValue(:dq "s2") ) 
)
