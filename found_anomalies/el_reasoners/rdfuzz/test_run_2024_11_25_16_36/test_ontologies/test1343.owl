Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (


Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


DataPropertyRange(Annotation(Annotation( :anr :annotation1)  :anq :annotation2) Annotation(Annotation( :ans :annotation2)  :anr :annotation4) Annotation( :anp :annotation3)  :dp DataIntersectionOf(DataOneOf("s2")  rdfs:Literal xsd:string ) )

HasKey(Annotation( :anp :annotation1) Annotation(Annotation(Annotation( :anr :annotation3) Annotation(Annotation(Annotation( :anr :annotation4) Annotation( :anq :annotation2) Annotation( :anq :annotation1)  :anq :annotation1) Annotation(Annotation( :anr :annotation2)  :ans :annotation1)  :anq :annotation4)  :anq :annotation2)  :anq :annotation2)  ObjectOneOf(:c) ( ) ( :ds :dq  ) )

DisjointClasses( DataHasValue(:dp "s1"^^rdf:PlainLiteral) ObjectIntersectionOf(DataSomeValuesFrom(:dr xsd:string) ObjectHasValue(:qsim :d) ObjectSomeValuesFrom(:qnonsim :A) :D :C :B :D ObjectHasValue(:rnonsim :b) ObjectHasValue(:snonsim :a) ObjectOneOf(:b) ObjectHasValue(:psim :b) ObjectHasValue(:ssim :d) ObjectHasValue(:pnonsim :d) ObjectHasValue(:psim :b) ObjectHasValue(:ssim :b) DataHasValue(:dq "s2") DataHasValue(:dp "s3") DataHasValue(:dr "s4") DataHasValue(:dr "s4") DataHasValue(:ds "s1") ObjectHasSelf(:psim) ) ObjectHasSelf(:rsim) )

HasKey( :B ( :qnonsim  ) ( :dr  ) )

SubClassOf( ObjectSomeValuesFrom(:snonsim ObjectIntersectionOf(ObjectSomeValuesFrom(:pnonsim DataHasValue(:dp "s4")) :B )) ObjectHasSelf(:qsim))

NegativeDataPropertyAssertion( :ds :b "s3")

EquivalentClasses( ObjectHasValue(:rsim :c) ObjectSomeValuesFrom(:qsim ObjectHasValue(:ssim :a)) ObjectSomeValuesFrom(:psim DataHasValue(:ds "s3"^^xsd:string)) )

HasKey(Annotation( :ans :annotation4)  ObjectOneOf(:a) ( :qnonsim :qsim  ) ( ) )

ReflexiveObjectProperty( :qsim)

ClassAssertion( :D :a)

HasKey(Annotation( :ans :annotation1) Annotation( :ans :annotation1) Annotation( :ans :annotation2)  ObjectSomeValuesFrom(:qnonsim DataHasValue(:ds "s4")) ( :ssim  ) ( :dq  ) )

ObjectPropertyDomain( :qnonsim DataHasValue(:dp "s4"^^xsd:string))

ObjectPropertyRange( :snonsim ObjectIntersectionOf(ObjectSomeValuesFrom(:qnonsim DataSomeValuesFrom(:dp DataIntersectionOf(DataIntersectionOf(rdfs:Literal rdf:PlainLiteral )  xsd:string rdfs:Literal ) )) DataHasValue(:dp "s3"^^rdf:PlainLiteral) ObjectHasSelf(:qsim) ObjectIntersectionOf(ObjectSomeValuesFrom(:psim :A) DataHasValue(:dr "s4") ) ))

ObjectPropertyAssertion( :snonsim :b :a) 
)
