Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (

Annotation(Annotation(Annotation( :ans :annotation3)  :anr :annotation2) Annotation( :anp :annotation1) Annotation(Annotation( :anr :annotation4)  :anq :annotation1) Annotation( :anp :annotation1)  :anp :annotation4) 
Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


SubClassOf( ObjectIntersectionOf(DataHasValue(:dq "s4"^^rdfs:Literal) ObjectHasValue(:qnonsim :a) ObjectSomeValuesFrom(:psim :C) ) ObjectOneOf(:d))

SameIndividual(Annotation(Annotation( :anq :annotation2) Annotation( :ans :annotation3)  :anr :annotation2)  :b :d :c )

DataPropertyDomain(Annotation( :anq :annotation3) Annotation( :anq :annotation2) Annotation( :anq :annotation3) Annotation( :ans :annotation2)  :dr DataSomeValuesFrom(:ds DataIntersectionOf(xsd:string rdf:PlainLiteral ) ))

SameIndividual( :c :b )

ObjectPropertyAssertion(Annotation( :ans :annotation2)  :snonsim :d :d)

TransitiveObjectProperty( :pnonsim)

HasKey( ObjectHasSelf(:qsim) ( :ssim  ) ( :dp :dr  ) )

EquivalentClasses( :B :D :A :A DataSomeValuesFrom(:dp DataOneOf("s3") ) DataSomeValuesFrom(:dp DataOneOf("s1") ) DataHasValue(:dq "s2") ObjectHasValue(:rsim :d) ObjectHasValue(:rnonsim :a) DataSomeValuesFrom(:dp DataIntersectionOf(DataIntersectionOf(DataIntersectionOf(rdf:PlainLiteral rdfs:Literal )  DataOneOf("s4")  )  rdfs:Literal rdfs:Literal DataOneOf("s4")  ) ) DataSomeValuesFrom(:dq rdfs:Literal) :D ObjectIntersectionOf(ObjectIntersectionOf(:A :B ) ObjectOneOf(:b) ) ObjectSomeValuesFrom(:qsim :A) ) 
)
