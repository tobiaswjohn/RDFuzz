Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (

Annotation(Annotation(Annotation( :anp :annotation4) Annotation( :anq :annotation1)  :ans :annotation3) Annotation( :anr :annotation4) Annotation( :anp :annotation1) Annotation( :anr :annotation1)  :anp :annotation2) 
Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


ObjectPropertyDomain( :snonsim ObjectHasValue(:psim :b))

EquivalentObjectProperties( :qnonsim :ssim )

ObjectPropertyAssertion(Annotation( :anr :annotation3) Annotation( :anp :annotation2) Annotation( :anr :annotation3)  :rnonsim :c :a)

ObjectPropertyRange(Annotation( :anr :annotation1)  :rsim DataHasValue(:ds "s2"^^rdf:PlainLiteral))

EquivalentClasses( ObjectHasSelf(:qsim) :C ObjectIntersectionOf(ObjectOneOf(:d) DataSomeValuesFrom(:dr DataOneOf("s4") ) ObjectSomeValuesFrom(:pnonsim :B) :D :A DataSomeValuesFrom(:dq DataIntersectionOf(rdfs:Literal xsd:string DataOneOf("s3")  ) ) DataSomeValuesFrom(:dp xsd:string) DataSomeValuesFrom(:dq DataOneOf("s1") ) DataSomeValuesFrom(:dp DataOneOf("s1"^^xsd:string) ) DataHasValue(:dr "s3"^^rdfs:Literal) ObjectSomeValuesFrom(:psim :A) DataHasValue(:dr "s1") DataHasValue(:dq "s2") ) ) 
)
