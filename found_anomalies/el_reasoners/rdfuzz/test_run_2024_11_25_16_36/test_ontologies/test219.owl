Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (

Annotation(Annotation(Annotation( :anr :annotation3)  :anq :annotation3) Annotation( :anr :annotation4) Annotation( :ans :annotation1) Annotation( :anp :annotation4)  :anp :annotation2) 
Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


EquivalentClasses(Annotation( :ans :annotation1) Annotation(Annotation(Annotation(Annotation( :anr :annotation2)  :anq :annotation1)  :anr :annotation1)  :anq :annotation4)  DataHasValue(:ds "s3") ObjectHasSelf(:psim) ObjectHasValue(:rsim :b) )

HasKey( ObjectIntersectionOf(:C DataSomeValuesFrom(:dp DataOneOf("s1"^^xsd:string) ) ObjectOneOf(:a) ObjectSomeValuesFrom(:ssim :A) :D DataSomeValuesFrom(:dq DataIntersectionOf(DataIntersectionOf(DataIntersectionOf(xsd:string rdfs:Literal xsd:string )  DataIntersectionOf(rdfs:Literal rdfs:Literal )  )  rdf:PlainLiteral ) ) :B DataSomeValuesFrom(:dr rdfs:Literal) :B ObjectHasValue(:pnonsim :d) ObjectHasValue(:rnonsim :d) ObjectOneOf(:c) ) ( :qnonsim :snonsim  ) ( ) )

HasKey( ObjectSomeValuesFrom(:qsim DataHasValue(:dr "s4")) ( ) ( :dr :dr  ) )

SubClassOf(Annotation(Annotation( :anr :annotation4)  :anr :annotation3) Annotation(Annotation(Annotation( :ans :annotation2)  :anp :annotation2) Annotation( :anr :annotation2)  :anp :annotation4)  DataHasValue(:dr "s2") DataHasValue(:dp "s2"))

FunctionalDataProperty(Annotation(Annotation( :anr :annotation1)  :anp :annotation3)  :dr)

DifferentIndividuals(Annotation( :anp :annotation2)  :c :c )

HasKey(Annotation( :anq :annotation1) Annotation(Annotation( :anp :annotation3) Annotation( :ans :annotation4)  :anp :annotation2) Annotation(Annotation( :ans :annotation1) Annotation( :anp :annotation4)  :anr :annotation3)  ObjectSomeValuesFrom(:pnonsim ObjectOneOf(:b)) ( :snonsim :rsim  ) ( :dp :dq  ) )

DisjointClasses( ObjectIntersectionOf(ObjectHasSelf(:ssim) DataHasValue(:dr "s1") ) ObjectHasSelf(:qsim) )

EquivalentDataProperties(Annotation(Annotation( :ans :annotation2) Annotation(Annotation( :anp :annotation3) Annotation( :ans :annotation3)  :anr :annotation3)  :anp :annotation2) Annotation(Annotation(Annotation( :ans :annotation3) Annotation( :ans :annotation2) Annotation( :anr :annotation4)  :anq :annotation4)  :anq :annotation2)  :dp :dp )

DisjointClasses( DataSomeValuesFrom(:dp DataIntersectionOf(DataOneOf("s1")  rdf:PlainLiteral rdf:PlainLiteral ) ) ObjectIntersectionOf(DataHasValue(:dp "s3"^^xsd:string) :D ) )

ReflexiveObjectProperty(Annotation(Annotation( :ans :annotation1)  :anr :annotation3) Annotation(Annotation( :anp :annotation2) Annotation( :anr :annotation4) Annotation(Annotation(Annotation(Annotation( :ans :annotation2)  :anp :annotation3)  :anq :annotation1)  :anr :annotation3)  :anp :annotation1)  :ssim)

DisjointClasses( ObjectOneOf(:d) ObjectOneOf(:d) ObjectHasSelf(:psim) ObjectSomeValuesFrom(:rnonsim ObjectHasSelf(:qsim)) ObjectIntersectionOf(:C DataHasValue(:dr "s3") ) )

ObjectPropertyAssertion(Annotation( :anq :annotation1)  :qnonsim :a :a)

HasKey( DataSomeValuesFrom(:ds DataIntersectionOf(DataIntersectionOf(DataOneOf("s1"^^rdf:PlainLiteral)  DataOneOf("s4"^^rdf:PlainLiteral)  )  DataOneOf("s3"^^xsd:string)  ) ) ( :pnonsim :rsim :ssim :pnonsim :ssim :ssim :rnonsim  ) ( :dp :ds  ) ) 
)
