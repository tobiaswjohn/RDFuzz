Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (


Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


EquivalentClasses(Annotation(Annotation( :anq :annotation4)  :ans :annotation3) Annotation( :anr :annotation2) Annotation( :anp :annotation1) Annotation( :ans :annotation1)  DataSomeValuesFrom(:dp DataOneOf("s4"^^rdfs:Literal) ) DataHasValue(:ds "s2") ObjectHasValue(:rsim :a) )

ObjectPropertyAssertion(Annotation( :anp :annotation2) Annotation(Annotation( :ans :annotation3)  :anr :annotation2) Annotation( :anq :annotation4)  :pnonsim :d :b)

HasKey(Annotation( :ans :annotation3) Annotation(Annotation(Annotation( :anp :annotation2)  :anq :annotation3)  :anr :annotation4) Annotation( :ans :annotation4)  ObjectSomeValuesFrom(:psim ObjectHasSelf(:qsim)) ( ) ( :dr :dq  ) )

HasKey( :C ( :rnonsim :snonsim  ) ( :dp :dr :ds :dp :ds :dr :dq  ) )

HasKey(Annotation(Annotation( :ans :annotation3)  :anp :annotation3)  ObjectIntersectionOf(ObjectOneOf(:c) :B :D :A :A DataSomeValuesFrom(:dp rdf:PlainLiteral) DataSomeValuesFrom(:ds DataIntersectionOf(xsd:string rdfs:Literal DataIntersectionOf(DataOneOf("s1")  xsd:string rdfs:Literal )  ) ) DataHasValue(:ds "s3") DataSomeValuesFrom(:dr rdf:PlainLiteral) DataSomeValuesFrom(:dq rdfs:Literal) :B ) ( :qnonsim :ssim  ) ( ) ) 
)
