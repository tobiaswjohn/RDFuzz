Found anomalies while testing file ../found_anomalies/el_reasoners/rdfuzz/test_run_2024_11_25_16_36/test_ontologies/test61.owl

Anomaly 1: Anomaly: not in EL
 Not enough individuals; at least two needed [SameIndividual(<http://www.example.org/reasonerTester#d>) in OntologyID(Anonymous-3)]
 Not enough individuals; at least two needed [DifferentIndividuals(<http://www.example.org/reasonerTester#a>) in OntologyID(Anonymous-3)]
 Not enough property expressions; at least two needed [EquivalentDataProperties(<http://www.example.org/reasonerTester#dr>) in OntologyID(Anonymous-3)]



––––––––––––––––––––––––––––––––––––––––––––
–––––––––––    Ontology File    ––––––––––––
––––––––––––––––––––––––––––––––––––––––––––

Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (


Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


ClassAssertion(Annotation(Annotation( :anp :annotation2) Annotation( :anr :annotation4) Annotation( :anq :annotation3)  :anq :annotation1) Annotation( :anr :annotation3) Annotation( :ans :annotation2) Annotation( :anq :annotation1)  :C :d)

SubClassOf(Annotation( :anp :annotation4)  ObjectIntersectionOf(DataHasValue(:ds "s3"^^rdf:PlainLiteral) ObjectHasSelf(:ssim) ObjectOneOf(:c) ) ObjectHasValue(:qsim :b))

ObjectPropertyAssertion(Annotation(Annotation(Annotation( :anr :annotation1)  :ans :annotation3) Annotation(Annotation( :anp :annotation4) Annotation(Annotation( :anr :annotation4) Annotation( :anq :annotation2)  :ans :annotation1)  :anr :annotation2) Annotation( :anr :annotation4)  :anq :annotation1)  :qnonsim :a :d)

DataPropertyAssertion(Annotation(Annotation( :ans :annotation2) Annotation(Annotation(Annotation( :anp :annotation1) Annotation( :anr :annotation4) Annotation( :ans :annotation4)  :anq :annotation4)  :anq :annotation4)  :anp :annotation4)  :dr :a "s1")

HasKey(Annotation(Annotation( :anp :annotation4) Annotation( :anr :annotation2) Annotation( :ans :annotation1)  :anr :annotation4)  ObjectSomeValuesFrom(:rsim DataSomeValuesFrom(:dq DataOneOf("s2"^^xsd:string) )) ( :pnonsim  ) ( :dp  ) )

TransitiveObjectProperty( :snonsim)

DisjointClasses( :B :A :D :D DataSomeValuesFrom(:dr DataIntersectionOf(DataOneOf("s4")  rdfs:Literal rdf:PlainLiteral ) ) DataSomeValuesFrom(:ds rdfs:Literal) ObjectHasValue(:psim :d) ObjectSomeValuesFrom(:rnonsim ObjectHasValue(:ssim :b)) ObjectSomeValuesFrom(:ssim ObjectSomeValuesFrom(:snonsim :C)) ObjectIntersectionOf(:D :A ) ObjectHasValue(:psim :d) ObjectHasSelf(:psim) )

HasKey(Annotation(Annotation( :ans :annotation4) Annotation( :ans :annotation3)  :anr :annotation1) Annotation( :anr :annotation3) Annotation( :anq :annotation1)  DataHasValue(:dq "s2"^^rdf:PlainLiteral) ( :snonsim :pnonsim  ) ( ) )

SubObjectPropertyOf(Annotation(Annotation(Annotation(Annotation(Annotation( :anr :annotation2) Annotation( :anq :annotation4)  :anq :annotation1)  :anp :annotation4) Annotation( :ans :annotation1)  :ans :annotation2)  :anp :annotation3) Annotation( :ans :annotation3)  :snonsim :qnonsim)

ClassAssertion( :C :c)

DifferentIndividuals( :a :a )

SameIndividual( :d :d )

EquivalentDataProperties( :dr :dr )

SameIndividual( :b :c ) 
)
