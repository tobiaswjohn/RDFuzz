Found anomalies while testing file ../found_anomalies/el_reasoners/rdfuzz/test_run_2024_11_25_16_36/test_ontologies/test1074.owl

Anomaly 1: Inference differentiation between HERMIT and OPENLLET:
	additional axioms HERMIT: [SubObjectPropertyOf(<http://www.example.org/reasonerTester#qsim> <http://www.example.org/reasonerTester#rsim>), SymmetricObjectProperty(<http://www.example.org/reasonerTester#qsim>), EquivalentObjectProperties(<http://www.example.org/reasonerTester#qsim> owl:bottomObjectProperty), SubObjectPropertyOf(<http://www.example.org/reasonerTester#qsim> <http://www.example.org/reasonerTester#snonsim>), AsymmetricObjectProperty(<http://www.example.org/reasonerTester#qsim>), SubObjectPropertyOf(<http://www.example.org/reasonerTester#qsim> <http://www.example.org/reasonerTester#ssim>), SubObjectPropertyOf(<http://www.example.org/reasonerTester#qsim> <http://www.example.org/reasonerTester#rnonsim>), InverseFunctionalObjectProperty(<http://www.example.org/reasonerTester#qsim>), SubObjectPropertyOf(<http://www.example.org/reasonerTester#qsim> <http://www.example.org/reasonerTester#pnonsim>), IrreflexiveObjectProperty(<http://www.example.org/reasonerTester#qsim>), FunctionalObjectProperty(<http://www.example.org/reasonerTester#qsim>), SubObjectPropertyOf(<http://www.example.org/reasonerTester#qsim> <http://www.example.org/reasonerTester#psim>), SubObjectPropertyOf(<http://www.example.org/reasonerTester#qsim> <http://www.example.org/reasonerTester#qnonsim>), ReflexiveObjectProperty(<http://www.example.org/reasonerTester#ssim>)]
	additional axioms OPENLLET: [FunctionalDataProperty(<http://www.example.org/reasonerTester#dp>), FunctionalDataProperty(<http://www.example.org/reasonerTester#ds>), SubObjectPropertyOf(<http://www.example.org/reasonerTester#qsim> owl:topObjectProperty)]

Anomaly 2: Inference differentiation between HERMIT and ELK:
	additional axioms HERMIT: [DisjointClasses(<http://www.example.org/reasonerTester#C> owl:Nothing), SubDataPropertyOf(<http://www.example.org/reasonerTester#dr> owl:topDataProperty), ObjectPropertyAssertion(<http://www.example.org/reasonerTester#ssim> <http://www.example.org/reasonerTester#a> <http://www.example.org/reasonerTester#a>), DisjointClasses(<http://www.example.org/reasonerTester#A> owl:Nothing), SubObjectPropertyOf(<http://www.example.org/reasonerTester#qsim> <http://www.example.org/reasonerTester#rsim>), SymmetricObjectProperty(<http://www.example.org/reasonerTester#qsim>), EquivalentObjectProperties(<http://www.example.org/reasonerTester#qsim> owl:bottomObjectProperty), DisjointClasses(<http://www.example.org/reasonerTester#B> owl:Nothing), ObjectPropertyAssertion(<http://www.example.org/reasonerTester#rnonsim> <http://www.example.org/reasonerTester#b> <http://www.example.org/reasonerTester#d>), SubObjectPropertyOf(<http://www.example.org/reasonerTester#qsim> <http://www.example.org/reasonerTester#snonsim>), AsymmetricObjectProperty(<http://www.example.org/reasonerTester#qsim>), SubObjectPropertyOf(<http://www.example.org/reasonerTester#qsim> <http://www.example.org/reasonerTester#ssim>), SubObjectPropertyOf(<http://www.example.org/reasonerTester#qsim> <http://www.example.org/reasonerTester#rnonsim>), ObjectPropertyAssertion(<http://www.example.org/reasonerTester#ssim> <http://www.example.org/reasonerTester#b> <http://www.example.org/reasonerTester#b>), DisjointClasses(<http://www.example.org/reasonerTester#D> owl:Nothing), SubDataPropertyOf(<http://www.example.org/reasonerTester#dq> owl:topDataProperty), ObjectPropertyAssertion(<http://www.example.org/reasonerTester#ssim> <http://www.example.org/reasonerTester#c> <http://www.example.org/reasonerTester#c>), ObjectPropertyAssertion(<http://www.example.org/reasonerTester#ssim> <http://www.example.org/reasonerTester#d> <http://www.example.org/reasonerTester#d>), ObjectPropertyAssertion(<http://www.example.org/reasonerTester#ssim> <http://www.example.org/reasonerTester#d> <http://www.example.org/reasonerTester#c>), InverseFunctionalObjectProperty(<http://www.example.org/reasonerTester#qsim>), DisjointClasses(<http://www.example.org/reasonerTester#A> <http://www.example.org/reasonerTester#D>), SubObjectPropertyOf(<http://www.example.org/reasonerTester#qsim> <http://www.example.org/reasonerTester#pnonsim>), IrreflexiveObjectProperty(<http://www.example.org/reasonerTester#qsim>), FunctionalObjectProperty(<http://www.example.org/reasonerTester#qsim>), SubDataPropertyOf(<http://www.example.org/reasonerTester#dp> <http://www.example.org/reasonerTester#ds>), SubDataPropertyOf(<http://www.example.org/reasonerTester#ds> owl:topDataProperty), ObjectPropertyAssertion(<http://www.example.org/reasonerTester#rnonsim> <http://www.example.org/reasonerTester#b> <http://www.example.org/reasonerTester#c>), SubObjectPropertyOf(<http://www.example.org/reasonerTester#qsim> <http://www.example.org/reasonerTester#psim>), SubObjectPropertyOf(<http://www.example.org/reasonerTester#qsim> <http://www.example.org/reasonerTester#qnonsim>), ReflexiveObjectProperty(<http://www.example.org/reasonerTester#ssim>), ObjectPropertyAssertion(<http://www.example.org/reasonerTester#ssim> <http://www.example.org/reasonerTester#c> <http://www.example.org/reasonerTester#d>)]
	additional axioms ELK: [SubObjectPropertyOf(<http://www.example.org/reasonerTester#qsim> owl:topObjectProperty)]

Anomaly 3: Anomaly with following exception:
openllet.core.exceptions.InternalReasonerException: Adding type to a pruned node "anon(1)" FunValue(literal(s4,(),http://www.w3.org/2001/XMLSchema#string))	DS{branch:1, depends:[0]}


––––––––––––––––––––––––––––––––––––––––––––
–––––––––––    Ontology File    ––––––––––––
––––––––––––––––––––––––––––––––––––––––––––

Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (


Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


DisjointClasses(Annotation( :anp :annotation1) Annotation( :anq :annotation2) Annotation( :ans :annotation4)  DataHasValue(:dr "s4") ObjectHasValue(:qnonsim :c) )

SubDataPropertyOf(Annotation(Annotation( :anq :annotation2)  :anr :annotation3) Annotation( :ans :annotation3) Annotation( :ans :annotation1) Annotation( :ans :annotation2)  :dp :ds)

SubClassOf( ObjectSomeValuesFrom(:qsim :D) ObjectIntersectionOf(ObjectOneOf(:a) DataSomeValuesFrom(:dq DataIntersectionOf(rdfs:Literal DataOneOf("s1"^^rdf:PlainLiteral)  ) ) ObjectHasSelf(:psim) :B :C :C :A ObjectHasValue(:snonsim :b) ObjectOneOf(:d) ObjectHasValue(:rsim :d) ObjectOneOf(:a) ObjectSomeValuesFrom(:rnonsim ObjectHasValue(:ssim :a)) ObjectHasValue(:pnonsim :d) ObjectSomeValuesFrom(:snonsim DataSomeValuesFrom(:dr xsd:string)) ObjectHasValue(:rsim :c) DataSomeValuesFrom(:dp DataIntersectionOf(rdf:PlainLiteral DataOneOf("s2")  xsd:string ) ) DataHasValue(:dq "s4") DataHasValue(:ds "s3") :B ))

HasKey( ObjectHasSelf(:psim) ( ) ( :dp :dq  ) )

TransitiveObjectProperty( :snonsim)

ObjectPropertyRange(Annotation(Annotation( :anq :annotation4) Annotation( :anp :annotation4) Annotation( :anr :annotation4)  :anp :annotation2) Annotation(Annotation( :anq :annotation1)  :anp :annotation1) Annotation( :ans :annotation2)  :snonsim ObjectHasValue(:rnonsim :d))

ObjectPropertyAssertion(Annotation(Annotation( :ans :annotation3)  :ans :annotation4) Annotation( :anp :annotation3)  :rnonsim :b :c)

EquivalentClasses( ObjectIntersectionOf(:A ObjectSomeValuesFrom(:rnonsim ObjectOneOf(:b)) ) DataSomeValuesFrom(:dq rdf:PlainLiteral) DataHasValue(:dq "s1"^^rdfs:Literal) )

DifferentIndividuals(Annotation( :anr :annotation2) Annotation( :anr :annotation1) Annotation( :anp :annotation2) Annotation(Annotation(Annotation( :anq :annotation4) Annotation( :ans :annotation3) Annotation(Annotation(Annotation( :anp :annotation1) Annotation(Annotation( :anp :annotation2)  :anp :annotation1) Annotation(Annotation( :anp :annotation3) Annotation( :anq :annotation2)  :anq :annotation1)  :anq :annotation2)  :ans :annotation2) Annotation( :anq :annotation3)  :ans :annotation1) Annotation( :anp :annotation2)  :ans :annotation3)  :d :b )

SameIndividual(Annotation(Annotation( :ans :annotation3) Annotation( :anp :annotation3) Annotation(Annotation( :ans :annotation4) Annotation( :ans :annotation4)  :anq :annotation3) Annotation( :ans :annotation4)  :anq :annotation3)  :d :c :d :c )

ClassAssertion( DataSomeValuesFrom(:ds DataIntersectionOf(xsd:string DataOneOf("s4")  ) ) :a)

ReflexiveObjectProperty( :ssim)

SubClassOf(Annotation( :anr :annotation4) Annotation( :anp :annotation4)  ObjectIntersectionOf(:D :A :A ) DataHasValue(:ds "s1"))

HasKey( :B ( :rsim  ) ( :dq :dr  ) )

NegativeDataPropertyAssertion( :dq :a "s2")

DataPropertyRange( :ds DataOneOf("s4") )

ObjectPropertyDomain( :qsim ObjectIntersectionOf(ObjectIntersectionOf(ObjectSomeValuesFrom(:rsim ObjectSomeValuesFrom(:rsim ObjectOneOf(:c))) ObjectIntersectionOf(DataHasValue(:dq "s4") :C ) ObjectIntersectionOf(DataHasValue(:dr "s4") ObjectIntersectionOf(:D :C ) ) ) DataHasValue(:dr "s2"^^rdfs:Literal) )) 
)
