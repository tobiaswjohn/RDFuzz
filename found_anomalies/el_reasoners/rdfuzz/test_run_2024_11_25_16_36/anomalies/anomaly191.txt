Found anomalies while testing file ../found_anomalies/el_reasoners/rdfuzz/test_run_2024_11_25_16_36/test_ontologies/test444.owl

Anomaly 1: Anomaly: not in EL
 Not enough operands; at least two needed: DataIntersectionOf(xsd:string) [EquivalentClasses(Annotation(<http://www.example.org/reasonerTester#anq> <http://www.example.org/reasonerTester#annotation1>) ObjectIntersectionOf(<http://www.example.org/reasonerTester#A> <http://www.example.org/reasonerTester#B> <http://www.example.org/reasonerTester#C> <http://www.example.org/reasonerTester#D> ObjectOneOf(<http://www.example.org/reasonerTester#d>) ObjectSomeValuesFrom(<http://www.example.org/reasonerTester#psim> ObjectHasValue(<http://www.example.org/reasonerTester#qsim> <http://www.example.org/reasonerTester#d>)) ObjectHasSelf(<http://www.example.org/reasonerTester#ssim>) DataSomeValuesFrom(<http://www.example.org/reasonerTester#dp> DataOneOf("s2"^^xsd:string)) DataSomeValuesFrom(<http://www.example.org/reasonerTester#dr> DataIntersectionOf(xsd:string)) DataSomeValuesFrom(<http://www.example.org/reasonerTester#ds> rdf:PlainLiteral) DataSomeValuesFrom(<http://www.example.org/reasonerTester#ds> xsd:string) DataHasValue(<http://www.example.org/reasonerTester#dr> "s3"^^xsd:string)) DataSomeValuesFrom(<http://www.example.org/reasonerTester#dq> rdfs:Literal)) in OntologyID(Anonymous-3)]



––––––––––––––––––––––––––––––––––––––––––––
–––––––––––    Ontology File    ––––––––––––
––––––––––––––––––––––––––––––––––––––––––––

Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (


Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


EquivalentObjectProperties(Annotation(Annotation( :anr :annotation3) Annotation( :anq :annotation4)  :anp :annotation1) Annotation( :ans :annotation2) Annotation( :anq :annotation4)  :snonsim :rsim :pnonsim )

DifferentIndividuals(Annotation(Annotation(Annotation(Annotation(Annotation( :anr :annotation2) Annotation( :ans :annotation4)  :anq :annotation1)  :anq :annotation4)  :anq :annotation4) Annotation(Annotation(Annotation( :anr :annotation1) Annotation( :anp :annotation4)  :ans :annotation2)  :ans :annotation1)  :anr :annotation4)  :a :b :c )

EquivalentClasses(Annotation( :anq :annotation1)  DataSomeValuesFrom(:dq rdfs:Literal) ObjectIntersectionOf(ObjectOneOf(:d) DataHasValue(:dr "s3"^^rdf:PlainLiteral) ObjectSomeValuesFrom(:psim ObjectHasValue(:qsim :d)) ObjectHasSelf(:ssim) :B :C :A :D DataSomeValuesFrom(:dp DataOneOf("s2") ) DataSomeValuesFrom(:dr DataIntersectionOf(xsd:string xsd:string xsd:string ) ) DataSomeValuesFrom(:ds xsd:string) DataSomeValuesFrom(:ds rdf:PlainLiteral) :B ) )

HasKey(Annotation( :anp :annotation4) Annotation( :ans :annotation4)  ObjectSomeValuesFrom(:qnonsim DataHasValue(:dq "s4")) ( :rnonsim :rnonsim :psim  ) ( ) )

ObjectPropertyAssertion(Annotation( :anq :annotation1)  :qnonsim :a :c)

EquivalentDataProperties( :ds :dr )

DataPropertyDomain( :dq DataHasValue(:dp "s1"))

DisjointClasses(Annotation( :anr :annotation3)  ObjectHasSelf(:ssim) DataHasValue(:dr "s1"^^rdfs:Literal) :C :D )

SubClassOf( ObjectSomeValuesFrom(:pnonsim DataHasValue(:dp "s3"^^rdf:PlainLiteral)) ObjectIntersectionOf(ObjectHasValue(:rsim :a) ObjectHasSelf(:rsim) ))

HasKey( ObjectOneOf(:a) ( :ssim :snonsim :qnonsim :pnonsim  ) ( :ds :dp  ) )

EquivalentClasses(Annotation( :ans :annotation2)  ObjectIntersectionOf(:B :A ) ObjectHasSelf(:ssim) ObjectHasSelf(:psim) )

SameIndividual(Annotation( :anr :annotation4) Annotation( :anq :annotation3)  :c :a :b )

FunctionalDataProperty( :dp)

ObjectPropertyRange( :qsim ObjectHasValue(:rsim :b)) 
)
