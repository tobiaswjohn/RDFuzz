Found anomalies while testing file ../found_anomalies/el_reasoners/rdfuzz/test_run_2024_11_25_16_36/test_ontologies/test123.owl

Anomaly 1: Anomaly: not in EL
 Not enough operands; at least two needed: DataIntersectionOf(rdf:PlainLiteral) [EquivalentClasses(<http://www.example.org/reasonerTester#A> <http://www.example.org/reasonerTester#B> <http://www.example.org/reasonerTester#C> ObjectIntersectionOf(<http://www.example.org/reasonerTester#A> <http://www.example.org/reasonerTester#B> <http://www.example.org/reasonerTester#D> ObjectOneOf(<http://www.example.org/reasonerTester#d>) DataSomeValuesFrom(<http://www.example.org/reasonerTester#dp> xsd:string) DataSomeValuesFrom(<http://www.example.org/reasonerTester#ds> DataIntersectionOf(rdf:PlainLiteral))) ObjectOneOf(<http://www.example.org/reasonerTester#b>) ObjectHasValue(<http://www.example.org/reasonerTester#rnonsim> <http://www.example.org/reasonerTester#c>)) in OntologyID(Anonymous-3)]
 Not enough operands; at least two needed: DataIntersectionOf(rdf:PlainLiteral) [EquivalentClasses(<http://www.example.org/reasonerTester#B> ObjectSomeValuesFrom(<http://www.example.org/reasonerTester#ssim> ObjectHasValue(<http://www.example.org/reasonerTester#ssim> <http://www.example.org/reasonerTester#d>)) DataSomeValuesFrom(<http://www.example.org/reasonerTester#dp> DataIntersectionOf(rdf:PlainLiteral)) DataSomeValuesFrom(<http://www.example.org/reasonerTester#dq> DataIntersectionOf(rdfs:Literal xsd:string)) DataSomeValuesFrom(<http://www.example.org/reasonerTester#ds> DataOneOf("s2"^^xsd:string))) in OntologyID(Anonymous-3)]



––––––––––––––––––––––––––––––––––––––––––––
–––––––––––    Ontology File    ––––––––––––
––––––––––––––––––––––––––––––––––––––––––––

Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (


Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


DisjointClasses(Annotation(Annotation( :anr :annotation2)  :ans :annotation1) Annotation( :anq :annotation3) Annotation( :anp :annotation4)  ObjectOneOf(:a) ObjectSomeValuesFrom(:rsim DataSomeValuesFrom(:dq rdfs:Literal)) )

SubClassOf(Annotation( :ans :annotation4) Annotation(Annotation( :ans :annotation4)  :anq :annotation2) Annotation( :anq :annotation3) Annotation(Annotation( :anp :annotation1)  :anq :annotation1) Annotation( :anp :annotation1)  :B ObjectHasSelf(:qsim))

ObjectPropertyDomain( :qnonsim DataHasValue(:dr "s1"))

EquivalentClasses( ObjectHasValue(:rnonsim :c) ObjectIntersectionOf(:A :D DataSomeValuesFrom(:ds DataIntersectionOf(rdf:PlainLiteral rdf:PlainLiteral ) ) ObjectOneOf(:d) DataSomeValuesFrom(:dp xsd:string) :B ) :C :A ObjectOneOf(:b) :B :A )

HasKey(Annotation( :anp :annotation3)  DataHasValue(:ds "s4"^^rdf:PlainLiteral) ( :psim  ) ( :dp  ) )

SubObjectPropertyOf(Annotation( :anp :annotation3)  :pnonsim :snonsim)

EquivalentClasses( DataSomeValuesFrom(:ds DataOneOf("s2") ) DataSomeValuesFrom(:dq DataIntersectionOf(xsd:string rdfs:Literal ) ) ObjectSomeValuesFrom(:ssim ObjectHasValue(:ssim :d)) DataSomeValuesFrom(:dp DataIntersectionOf(rdf:PlainLiteral rdf:PlainLiteral ) ) :B )

FunctionalDataProperty( :ds)

TransitiveObjectProperty( :qnonsim)

ObjectPropertyAssertion( :qsim :c :b)

EquivalentClasses( DataHasValue(:ds "s3") DataSomeValuesFrom(:dr DataIntersectionOf(rdf:PlainLiteral xsd:string ) ) DataSomeValuesFrom(:dq rdfs:Literal) :D ) 
)
