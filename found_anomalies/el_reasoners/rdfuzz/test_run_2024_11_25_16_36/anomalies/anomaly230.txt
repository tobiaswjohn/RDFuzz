Found anomalies while testing file ../found_anomalies/el_reasoners/rdfuzz/test_run_2024_11_25_16_36/test_ontologies/test526.owl

Anomaly 1: Anomaly: not in EL
 Not enough operands; at least two needed: DataIntersectionOf(rdfs:Literal) [EquivalentClasses(Annotation(<http://www.example.org/reasonerTester#anr> <http://www.example.org/reasonerTester#annotation4>) ObjectIntersectionOf(<http://www.example.org/reasonerTester#A> <http://www.example.org/reasonerTester#B> <http://www.example.org/reasonerTester#C> <http://www.example.org/reasonerTester#D> ObjectOneOf(<http://www.example.org/reasonerTester#a>) ObjectSomeValuesFrom(<http://www.example.org/reasonerTester#qnonsim> <http://www.example.org/reasonerTester#B>) ObjectSomeValuesFrom(<http://www.example.org/reasonerTester#snonsim> DataSomeValuesFrom(<http://www.example.org/reasonerTester#ds> rdf:PlainLiteral)) ObjectSomeValuesFrom(<http://www.example.org/reasonerTester#ssim> ObjectHasSelf(<http://www.example.org/reasonerTester#rsim>)) ObjectHasValue(<http://www.example.org/reasonerTester#pnonsim> <http://www.example.org/reasonerTester#d>) ObjectHasValue(<http://www.example.org/reasonerTester#psim> <http://www.example.org/reasonerTester#a>) DataSomeValuesFrom(<http://www.example.org/reasonerTester#dq> DataIntersectionOf(rdfs:Literal DataOneOf("s4"^^xsd:string))) DataSomeValuesFrom(<http://www.example.org/reasonerTester#dq> DataIntersectionOf(xsd:string DataOneOf("s1"^^xsd:string) DataOneOf("s3"^^xsd:string) DataIntersectionOf(rdfs:Literal))) DataSomeValuesFrom(<http://www.example.org/reasonerTester#dr> rdf:PlainLiteral)) DataHasValue(<http://www.example.org/reasonerTester#dp> "s2"^^xsd:string)) in OntologyID(Anonymous-3)]



––––––––––––––––––––––––––––––––––––––––––––
–––––––––––    Ontology File    ––––––––––––
––––––––––––––––––––––––––––––––––––––––––––

Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (


Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


ObjectPropertyAssertion(Annotation(Annotation( :ans :annotation4)  :anp :annotation1) Annotation( :anq :annotation2) Annotation( :anr :annotation3) Annotation( :anq :annotation4)  :qsim :d :a)

NegativeObjectPropertyAssertion( :rnonsim :b :c)

EquivalentClasses(Annotation( :anr :annotation4)  DataHasValue(:dp "s2") ObjectIntersectionOf(ObjectOneOf(:a) :A DataSomeValuesFrom(:dq DataIntersectionOf(DataOneOf("s4"^^xsd:string)  rdfs:Literal ) ) ObjectHasValue(:psim :a) ObjectSomeValuesFrom(:ssim ObjectHasSelf(:rsim)) :B :C :D :D :B ObjectHasValue(:pnonsim :d) ObjectSomeValuesFrom(:snonsim DataSomeValuesFrom(:ds rdf:PlainLiteral)) DataSomeValuesFrom(:dr rdf:PlainLiteral) DataSomeValuesFrom(:dq DataIntersectionOf(DataOneOf("s1")  DataIntersectionOf(rdfs:Literal rdfs:Literal )  DataOneOf("s3")  xsd:string ) ) ObjectSomeValuesFrom(:qnonsim :B) ObjectSomeValuesFrom(:qnonsim :B) :D ) )

DisjointClasses( :A :C )

SameIndividual( :a :c )

DataPropertyRange( :dq rdfs:Literal)

TransitiveObjectProperty( :qnonsim)

ReflexiveObjectProperty( :pnonsim)

ReflexiveObjectProperty( :rnonsim)

HasKey( :C ( :rsim  ) ( ) )

ClassAssertion( :D :a) 
)
