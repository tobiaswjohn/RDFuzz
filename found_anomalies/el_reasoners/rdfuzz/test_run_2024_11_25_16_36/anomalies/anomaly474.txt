Found anomalies while testing file ../found_anomalies/el_reasoners/rdfuzz/test_run_2024_11_25_16_36/test_ontologies/test1089.owl

Anomaly 1: Inference differentiation between HERMIT and OPENLLET:
	additional axioms HERMIT: [SubObjectPropertyOf(<http://www.example.org/reasonerTester#psim> <http://www.example.org/reasonerTester#pnonsim>), SubObjectPropertyOf(<http://www.example.org/reasonerTester#psim> <http://www.example.org/reasonerTester#qnonsim>), SubObjectPropertyOf(<http://www.example.org/reasonerTester#psim> <http://www.example.org/reasonerTester#rnonsim>), SubObjectPropertyOf(<http://www.example.org/reasonerTester#psim> <http://www.example.org/reasonerTester#rsim>), SubObjectPropertyOf(<http://www.example.org/reasonerTester#psim> <http://www.example.org/reasonerTester#ssim>), SubObjectPropertyOf(<http://www.example.org/reasonerTester#psim> <http://www.example.org/reasonerTester#snonsim>), EquivalentObjectProperties(<http://www.example.org/reasonerTester#psim> owl:bottomObjectProperty)]
	additional axioms OPENLLET: []


––––––––––––––––––––––––––––––––––––––––––––
–––––––––––    Ontology File    ––––––––––––
––––––––––––––––––––––––––––––––––––––––––––

Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (

Annotation(Annotation(Annotation( :anr :annotation4) Annotation( :anr :annotation1)  :anp :annotation2) Annotation( :ans :annotation3) Annotation( :anr :annotation1)  :anq :annotation3) 
Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


EquivalentClasses( :B ObjectHasValue(:rnonsim :d) )

DataPropertyAssertion( :dp :b "s1")

SubObjectPropertyOf(Annotation(Annotation( :anp :annotation1) Annotation( :anp :annotation1)  :anq :annotation3) Annotation( :anp :annotation2) Annotation( :anq :annotation1)  :psim :qsim)

HasKey(Annotation( :ans :annotation1)  ObjectSomeValuesFrom(:pnonsim DataHasValue(:ds "s3"^^rdf:PlainLiteral)) ( :qnonsim :rsim  ) ( ) )

SameIndividual(Annotation( :ans :annotation4) Annotation( :ans :annotation1) Annotation( :ans :annotation4)  :c :a :d )

SubClassOf( ObjectHasSelf(:ssim) DataSomeValuesFrom(:dq DataIntersectionOf(DataOneOf("s4")  xsd:string rdfs:Literal ) ))

HasKey( ObjectOneOf(:b) ( :snonsim :snonsim  ) ( :dr :dp  ) )

DisjointClasses(Annotation(Annotation( :anq :annotation3)  :ans :annotation4)  :A :C ObjectIntersectionOf(DataHasValue(:ds "s2") DataHasValue(:dr "s2") ) :D DataHasValue(:dr "s2") :B )

EquivalentClasses( ObjectIntersectionOf(ObjectIntersectionOf(ObjectSomeValuesFrom(:psim DataHasValue(:dp "s3")) :C ) ObjectHasSelf(:psim) ObjectOneOf(:c) ) ObjectHasValue(:pnonsim :c) )

ObjectPropertyAssertion(Annotation( :anq :annotation4) Annotation(Annotation(Annotation( :ans :annotation3)  :anq :annotation4) Annotation( :anp :annotation4) Annotation( :anp :annotation4) Annotation( :anp :annotation2)  :ans :annotation1) Annotation( :anq :annotation3)  :qnonsim :d :a)

ObjectPropertyDomain(Annotation( :anp :annotation4) Annotation( :anq :annotation4)  :psim ObjectSomeValuesFrom(:snonsim ObjectIntersectionOf(DataSomeValuesFrom(:dp rdfs:Literal) :D :B )))

HasKey( DataSomeValuesFrom(:dr DataIntersectionOf(DataOneOf("s3")  rdf:PlainLiteral ) ) ( ) ( :ds :dq  ) )

EquivalentDataProperties( :dq :ds )

DisjointClasses( ObjectOneOf(:d) ObjectSomeValuesFrom(:snonsim ObjectSomeValuesFrom(:rsim DataHasValue(:dq "s1"))) ) 
)
