Found anomalies while testing file ../found_anomalies/el_reasoners/rdfuzz/test_run_2024_11_25_16_36/test_ontologies/test662.owl

Anomaly 1: Inference differentiation between HERMIT and OPENLLET:
	additional axioms HERMIT: []
	additional axioms OPENLLET: [DataPropertyAssertion(<http://www.example.org/reasonerTester#dp> <http://www.example.org/reasonerTester#b> "s3"^^xsd:string), DataPropertyAssertion(<http://www.example.org/reasonerTester#dp> <http://www.example.org/reasonerTester#a> "s3"^^xsd:string), AsymmetricObjectProperty(<http://www.example.org/reasonerTester#ssim>)]


––––––––––––––––––––––––––––––––––––––––––––
–––––––––––    Ontology File    ––––––––––––
––––––––––––––––––––––––––––––––––––––––––––

Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (

Annotation(Annotation(Annotation( :anr :annotation1) Annotation( :ans :annotation2) Annotation( :anr :annotation4)  :anq :annotation3) Annotation( :anp :annotation4) Annotation( :ans :annotation2) Annotation( :anp :annotation4)  :ans :annotation2) 
Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


HasKey( ObjectSomeValuesFrom(:snonsim ObjectHasSelf(:psim)) ( :rsim  ) ( :dp :dr  ) )

DataPropertyRange(Annotation(Annotation(Annotation(Annotation( :anp :annotation2) Annotation( :ans :annotation3)  :anq :annotation3)  :ans :annotation4) Annotation( :anq :annotation1) Annotation( :ans :annotation4) Annotation( :anq :annotation1)  :anp :annotation4)  :ds rdfs:Literal)

EquivalentClasses( DataHasValue(:dq "s2"^^xsd:string) :D ObjectHasValue(:pnonsim :c) )

DataPropertyAssertion( :dp :a "s4")

EquivalentDataProperties(Annotation(Annotation(Annotation(Annotation(Annotation(Annotation( :ans :annotation3)  :anp :annotation2)  :anq :annotation3) Annotation( :anr :annotation1) Annotation(Annotation( :anr :annotation1) Annotation( :anp :annotation4)  :anr :annotation4) Annotation( :ans :annotation1) Annotation( :anp :annotation1) Annotation( :anp :annotation2)  :anr :annotation1) Annotation( :anr :annotation3)  :anq :annotation2)  :anp :annotation1)  :dq :dr :dr :dq :ds :dr :dq )

DataPropertyDomain(Annotation(Annotation( :anp :annotation4) Annotation(Annotation( :anp :annotation3)  :anr :annotation4)  :ans :annotation3)  :dp ObjectIntersectionOf(DataSomeValuesFrom(:dp DataOneOf("s3") ) ObjectOneOf(:b) :C :A :B ))

ObjectPropertyDomain( :ssim ObjectOneOf(:d))

SubDataPropertyOf(Annotation(Annotation(Annotation( :ans :annotation3)  :anr :annotation4) Annotation( :anq :annotation2) Annotation( :anr :annotation2)  :anq :annotation3)  :dq :dr)

ObjectPropertyAssertion(Annotation( :anq :annotation3) Annotation( :anr :annotation4)  :rnonsim :a :d)

HasKey( DataSomeValuesFrom(:ds DataIntersectionOf(rdf:PlainLiteral DataIntersectionOf(DataOneOf("s3")  DataOneOf("s1")  DataOneOf("s4")  rdf:PlainLiteral )  DataIntersectionOf(DataOneOf("s2")  DataOneOf("s2")  rdfs:Literal DataOneOf("s3")  )  ) ) ( ) ( :dp :dp  ) )

DisjointClasses(Annotation( :anr :annotation2)  ObjectHasValue(:qsim :b) ObjectHasValue(:rsim :a) ObjectSomeValuesFrom(:qnonsim ObjectSomeValuesFrom(:qnonsim :C)) ) 
)
