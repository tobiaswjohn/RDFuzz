Found anomalies while testing file ../found_anomalies/el_reasoners/rdfuzz/test_run_2024_11_25_16_36/test_ontologies/test395.owl

Anomaly 1: Anomaly: not in EL
 Not enough operands; at least two needed: ObjectIntersectionOf(<http://www.example.org/reasonerTester#B>) [HasKey(Annotation(<http://www.example.org/reasonerTester#anr> <http://www.example.org/reasonerTester#annotation2>) ObjectIntersectionOf(<http://www.example.org/reasonerTester#A> ObjectIntersectionOf(<http://www.example.org/reasonerTester#C> ObjectIntersectionOf(<http://www.example.org/reasonerTester#B>) DataSomeValuesFrom(<http://www.example.org/reasonerTester#dr> DataOneOf("s4"^^xsd:string))) ObjectOneOf(<http://www.example.org/reasonerTester#c>) ObjectSomeValuesFrom(<http://www.example.org/reasonerTester#qsim> <http://www.example.org/reasonerTester#C>) ObjectHasSelf(<http://www.example.org/reasonerTester#ssim>)) (<http://www.example.org/reasonerTester#pnonsim>) (<http://www.example.org/reasonerTester#ds>)) in OntologyID(Anonymous-3)]



––––––––––––––––––––––––––––––––––––––––––––
–––––––––––    Ontology File    ––––––––––––
––––––––––––––––––––––––––––––––––––––––––––

Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (


Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


HasKey(Annotation( :anp :annotation1) Annotation( :ans :annotation2) Annotation( :anq :annotation4)  ObjectIntersectionOf(:D :A ) ( :rnonsim :ssim  ) ( ) )

ObjectPropertyAssertion(Annotation(Annotation( :ans :annotation3)  :anr :annotation3) Annotation( :anr :annotation1) Annotation( :anq :annotation2) Annotation( :anr :annotation2)  :qnonsim :c :d)

EquivalentClasses( DataHasValue(:dq "s2"^^rdf:PlainLiteral) ObjectSomeValuesFrom(:psim ObjectHasValue(:rsim :a)) ObjectOneOf(:b) :C ObjectHasSelf(:qsim) DataSomeValuesFrom(:ds DataIntersectionOf(xsd:string DataOneOf("s1")  rdfs:Literal ) ) :B DataSomeValuesFrom(:dr DataOneOf("s4") ) DataHasValue(:dp "s3") DataHasValue(:dr "s2"^^rdf:PlainLiteral) ObjectSomeValuesFrom(:pnonsim ObjectHasValue(:snonsim :d)) ObjectSomeValuesFrom(:pnonsim ObjectHasSelf(:ssim)) ObjectHasValue(:rsim :c) )

FunctionalDataProperty( :dq)

SameIndividual( :a :d )

DisjointClasses( ObjectOneOf(:d) DataSomeValuesFrom(:dr DataOneOf("s2") ) :B :C :C )

HasKey(Annotation( :anr :annotation2)  ObjectIntersectionOf(ObjectIntersectionOf(ObjectIntersectionOf(:B :B ) DataSomeValuesFrom(:dr DataOneOf("s4") ) :C ) ObjectOneOf(:c) ObjectHasSelf(:ssim) ObjectSomeValuesFrom(:qsim :C) :A ) ( :pnonsim  ) ( :ds :ds  ) )

DataPropertyAssertion(Annotation( :ans :annotation4) Annotation(Annotation(Annotation(Annotation(Annotation( :anr :annotation1) Annotation( :anp :annotation1)  :anq :annotation3) Annotation(Annotation( :anp :annotation1)  :ans :annotation2) Annotation( :anq :annotation1)  :anp :annotation4)  :ans :annotation2)  :ans :annotation3) Annotation(Annotation( :anq :annotation4)  :anp :annotation4)  :ds :d "s1")

SubClassOf( :D ObjectIntersectionOf(:D ObjectHasSelf(:ssim) DataHasValue(:dr "s4") ))

NegativeObjectPropertyAssertion( :qnonsim :d :b)

ObjectPropertyDomain( :psim :A)

ReflexiveObjectProperty( :rsim)

TransitiveObjectProperty( :pnonsim)

DataPropertyDomain( :dp :D) 
)
