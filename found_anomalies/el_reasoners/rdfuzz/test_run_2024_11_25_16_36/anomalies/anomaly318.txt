Found anomalies while testing file ../found_anomalies/el_reasoners/rdfuzz/test_run_2024_11_25_16_36/test_ontologies/test726.owl

Anomaly 1: Anomaly: not in EL
 Not enough operands; at least two needed: DataIntersectionOf(xsd:string) [EquivalentClasses(Annotation(<http://www.example.org/reasonerTester#anq> <http://www.example.org/reasonerTester#annotation2>) Annotation(<http://www.example.org/reasonerTester#anr> <http://www.example.org/reasonerTester#annotation2>) <http://www.example.org/reasonerTester#A> <http://www.example.org/reasonerTester#D> DataSomeValuesFrom(<http://www.example.org/reasonerTester#dp> DataIntersectionOf(xsd:string)) DataSomeValuesFrom(<http://www.example.org/reasonerTester#dq> rdfs:Literal)) in OntologyID(Anonymous-3)]



––––––––––––––––––––––––––––––––––––––––––––
–––––––––––    Ontology File    ––––––––––––
––––––––––––––––––––––––––––––––––––––––––––

Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (


Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


DisjointClasses(Annotation( :ans :annotation4) Annotation( :anr :annotation1) Annotation( :anq :annotation3) Annotation( :anp :annotation2)  ObjectHasSelf(:psim) ObjectSomeValuesFrom(:ssim ObjectOneOf(:a)) )

HasKey(Annotation( :ans :annotation4) Annotation( :anp :annotation3) Annotation( :ans :annotation4)  ObjectIntersectionOf(:C DataHasValue(:dq "s1") ) ( :qnonsim  ) ( :dp  ) )

NegativeDataPropertyAssertion( :ds :b "s4"^^xsd:string)

ClassAssertion( DataSomeValuesFrom(:dr rdf:PlainLiteral) :c)

HasKey(Annotation( :anr :annotation1) Annotation( :anr :annotation2)  ObjectHasValue(:pnonsim :d) ( ) ( :dq :dr  ) )

HasKey(Annotation( :anp :annotation3) Annotation( :ans :annotation1)  :B ( :snonsim :rsim :qsim  ) ( ) )

EquivalentClasses(Annotation( :anr :annotation2) Annotation( :anq :annotation2)  :A :D DataSomeValuesFrom(:dq rdfs:Literal) DataSomeValuesFrom(:dp DataIntersectionOf(xsd:string xsd:string ) ) :D :D )

TransitiveObjectProperty(Annotation(Annotation( :anp :annotation2)  :anr :annotation1) Annotation( :anp :annotation4) Annotation(Annotation( :anp :annotation3)  :anp :annotation1) Annotation(Annotation( :anq :annotation4)  :anp :annotation4) Annotation( :ans :annotation1) Annotation( :anr :annotation3)  :rnonsim)

ObjectPropertyAssertion( :qsim :a :d)

FunctionalDataProperty( :dq)

SubObjectPropertyOf( :qsim :rsim)

ReflexiveObjectProperty( :rsim)

SubClassOf(Annotation( :ans :annotation3) Annotation( :ans :annotation1) Annotation( :anr :annotation3)  DataSomeValuesFrom(:dp DataOneOf("s2") ) DataSomeValuesFrom(:dq DataOneOf("s3") ))

HasKey(Annotation(Annotation( :anp :annotation4) Annotation( :anr :annotation1)  :ans :annotation1)  DataSomeValuesFrom(:dr DataIntersectionOf(DataIntersectionOf(rdf:PlainLiteral rdfs:Literal )  rdfs:Literal DataIntersectionOf(rdf:PlainLiteral rdfs:Literal )  ) ) ( :rsim  ) ( :ds :dq  ) )

DataPropertyDomain( :dp ObjectHasValue(:qnonsim :d))

ObjectPropertyRange( :pnonsim :C)

SameIndividual( :d :c )

DifferentIndividuals( :c :d )

FunctionalDataProperty( :dr)

FunctionalDataProperty( :dr)

FunctionalDataProperty( :dr)

FunctionalDataProperty( :dr)

FunctionalDataProperty( :dp) 
)
