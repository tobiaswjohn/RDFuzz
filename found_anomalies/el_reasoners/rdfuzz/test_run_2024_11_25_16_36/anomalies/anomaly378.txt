Found anomalies while testing file ../found_anomalies/el_reasoners/rdfuzz/test_run_2024_11_25_16_36/test_ontologies/test874.owl

Anomaly 1: Anomaly: not in EL
 Not enough operands; at least two needed: DataIntersectionOf(rdfs:Literal) [ObjectPropertyDomain(<http://www.example.org/reasonerTester#rnonsim> ObjectIntersectionOf(<http://www.example.org/reasonerTester#A> <http://www.example.org/reasonerTester#B> <http://www.example.org/reasonerTester#D> ObjectOneOf(<http://www.example.org/reasonerTester#b>) ObjectSomeValuesFrom(<http://www.example.org/reasonerTester#qnonsim> ObjectSomeValuesFrom(<http://www.example.org/reasonerTester#ssim> DataSomeValuesFrom(<http://www.example.org/reasonerTester#dr> DataIntersectionOf(rdfs:Literal)))) ObjectSomeValuesFrom(<http://www.example.org/reasonerTester#qnonsim> DataSomeValuesFrom(<http://www.example.org/reasonerTester#dp> rdfs:Literal)) ObjectSomeValuesFrom(<http://www.example.org/reasonerTester#snonsim> <http://www.example.org/reasonerTester#C>) ObjectHasValue(<http://www.example.org/reasonerTester#psim> <http://www.example.org/reasonerTester#a>) ObjectHasValue(<http://www.example.org/reasonerTester#psim> <http://www.example.org/reasonerTester#d>) ObjectHasValue(<http://www.example.org/reasonerTester#qsim> <http://www.example.org/reasonerTester#c>) DataSomeValuesFrom(<http://www.example.org/reasonerTester#dp> rdf:PlainLiteral) DataHasValue(<http://www.example.org/reasonerTester#dp> "s3"^^xsd:string) DataHasValue(<http://www.example.org/reasonerTester#dq> "s2"^^xsd:string) DataHasValue(<http://www.example.org/reasonerTester#ds> "s4"^^xsd:string))) in OntologyID(Anonymous-3)]



––––––––––––––––––––––––––––––––––––––––––––
–––––––––––    Ontology File    ––––––––––––
––––––––––––––––––––––––––––––––––––––––––––

Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (


Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


ObjectPropertyAssertion(Annotation(Annotation( :anq :annotation1)  :anp :annotation2) Annotation( :anr :annotation4) Annotation( :ans :annotation3) Annotation( :ans :annotation1) Annotation( :anr :annotation1)  :ssim :c :d)

FunctionalDataProperty(Annotation(Annotation( :anp :annotation2) Annotation( :anq :annotation1)  :anp :annotation2) Annotation( :anr :annotation1) Annotation( :anq :annotation1) Annotation( :ans :annotation3)  :ds)

DisjointClasses( DataHasValue(:dq "s4") ObjectHasSelf(:rsim) DataSomeValuesFrom(:dr DataIntersectionOf(DataOneOf("s1"^^rdfs:Literal)  xsd:string ) ) )

ReflexiveObjectProperty(Annotation( :ans :annotation1)  :pnonsim)

ObjectPropertyDomain( :rnonsim ObjectIntersectionOf(ObjectHasValue(:psim :a) ObjectSomeValuesFrom(:snonsim :C) ObjectOneOf(:b) :A :D :B ObjectHasValue(:qsim :c) DataSomeValuesFrom(:dp rdf:PlainLiteral) DataHasValue(:dp "s3") ObjectSomeValuesFrom(:qnonsim ObjectSomeValuesFrom(:ssim DataSomeValuesFrom(:dr DataIntersectionOf(rdfs:Literal rdfs:Literal ) ))) ObjectHasValue(:psim :d) ObjectSomeValuesFrom(:qnonsim DataSomeValuesFrom(:dp rdfs:Literal)) DataHasValue(:dq "s2") DataHasValue(:ds "s4") )) 
)
