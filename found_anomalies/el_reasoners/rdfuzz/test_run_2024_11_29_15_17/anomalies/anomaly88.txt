Found anomalies while testing file ../found_anomalies/el_reasoners/rdfuzz/test_run_2024_11_29_15_17/test_ontologies/test273.owl

Anomaly 1: Inference differentiation between HERMIT and OPENLLET:
	additional axioms HERMIT: []
	additional axioms OPENLLET: [IrreflexiveObjectProperty(<http://www.example.org/reasonerTester#pnonsim>), AsymmetricObjectProperty(<http://www.example.org/reasonerTester#snonsim>)]


––––––––––––––––––––––––––––––––––––––––––––
–––––––––––    Ontology File    ––––––––––––
––––––––––––––––––––––––––––––––––––––––––––

Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (

Annotation(Annotation(Annotation( :anq :annotation3)  :anp :annotation2) Annotation( :anr :annotation4) Annotation( :anq :annotation2) Annotation( :anr :annotation2)  :ans :annotation1) 
Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


DisjointClasses(Annotation( :ans :annotation3)  ObjectOneOf(:a) DataSomeValuesFrom(:dp DataIntersectionOf(rdfs:Literal DataOneOf("s1"@no)  ) ) ObjectHasSelf(:qsim) )

DataPropertyDomain( :dr DataHasValue(:dq "s3"^^rdf:PlainLiteral))

ObjectPropertyRange( :snonsim ObjectIntersectionOf(ObjectHasValue(:qnonsim :b) ObjectSomeValuesFrom(:ssim :C) :B :A :D :D ObjectOneOf(:d) ObjectHasValue(:pnonsim :c) DataHasValue(:ds "s2") DataHasValue(:dp "s4"@fr) DataHasValue(:dq "s3"@de) ObjectSomeValuesFrom(:psim ObjectSomeValuesFrom(:rsim ObjectHasValue(:pnonsim :c))) ObjectHasValue(:rnonsim :d) ObjectSomeValuesFrom(:rnonsim :D) ObjectHasValue(:pnonsim :d) ))

DatatypeDefinition(Annotation(Annotation(Annotation( :anp :annotation2)  :anp :annotation2) Annotation( :ans :annotation3)  :anr :annotation4) Annotation( :anp :annotation3) Annotation(Annotation( :anr :annotation2)  :anq :annotation4) Annotation( :ans :annotation3)  :dtb xsd:string)

ObjectPropertyDomain(Annotation( :ans :annotation3) Annotation( :anp :annotation1)  :pnonsim DataSomeValuesFrom(:ds DataIntersectionOf(DataIntersectionOf(rdfs:Literal rdf:PlainLiteral )  DataIntersectionOf(xsd:string xsd:string )  ) ))

HasKey(Annotation( :anq :annotation1) Annotation( :anr :annotation2) Annotation( :anq :annotation1)  DataSomeValuesFrom(:dq DataIntersectionOf(xsd:string rdfs:Literal ) ) ( :qnonsim :psim  ) ( :dp :ds  ) )

TransitiveObjectProperty(Annotation( :anp :annotation1)  :qnonsim)

ObjectPropertyAssertion(Annotation(Annotation( :anr :annotation1)  :anq :annotation1)  :psim :a :a)

SubObjectPropertyOf(Annotation( :anq :annotation1) Annotation( :ans :annotation1) Annotation(Annotation(Annotation( :anp :annotation3) Annotation( :anr :annotation4)  :ans :annotation4)  :anq :annotation1) Annotation(Annotation(Annotation( :ans :annotation3)  :anq :annotation1) Annotation( :anq :annotation2)  :anp :annotation2)  :pnonsim :qsim)

EquivalentClasses(Annotation( :anr :annotation3)  DataHasValue(:dp "s3"@en) DataHasValue(:ds "s2"@no) DataHasValue(:dp "s1") )

DatatypeDefinition( :dtc DataIntersectionOf(DataOneOf("s4"^^rdfs:Literal)  DataIntersectionOf(rdf:PlainLiteral xsd:string rdfs:Literal )  xsd:string xsd:string rdf:PlainLiteral ) ) 
)
