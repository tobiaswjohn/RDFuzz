Found anomalies while testing file ../found_anomalies/el_reasoners/rdfuzz/test_run_2024_11_29_15_17/test_ontologies/test1183.owl

Anomaly 1: Inference differentiation between HERMIT and ELK:
	additional axioms HERMIT: [SubClassOf(owl:Thing owl:Nothing)]
	additional axioms ELK: [SubObjectPropertyOf(<http://www.example.org/reasonerTester#psim> owl:topObjectProperty), SubObjectPropertyOf(<http://www.example.org/reasonerTester#qnonsim> owl:topObjectProperty), SubClassOf(<http://www.example.org/reasonerTester#D> owl:Thing), ClassAssertion(owl:Thing <http://www.example.org/reasonerTester#a>), SubObjectPropertyOf(<http://www.example.org/reasonerTester#pnonsim> owl:topObjectProperty), SubObjectPropertyOf(<http://www.example.org/reasonerTester#rnonsim> owl:topObjectProperty), SubClassOf(<http://www.example.org/reasonerTester#C> owl:Thing), ClassAssertion(owl:Thing <http://www.example.org/reasonerTester#b>), SubObjectPropertyOf(<http://www.example.org/reasonerTester#qsim> owl:topObjectProperty), EquivalentObjectProperties(<http://www.example.org/reasonerTester#psim> <http://www.example.org/reasonerTester#rsim> <http://www.example.org/reasonerTester#ssim>), SubObjectPropertyOf(<http://www.example.org/reasonerTester#rsim> owl:topObjectProperty), SubClassOf(<http://www.example.org/reasonerTester#B> owl:Thing), ClassAssertion(owl:Thing <http://www.example.org/reasonerTester#c>), SubObjectPropertyOf(<http://www.example.org/reasonerTester#snonsim> owl:topObjectProperty), SubObjectPropertyOf(<http://www.example.org/reasonerTester#ssim> owl:topObjectProperty), SubClassOf(<http://www.example.org/reasonerTester#A> owl:Thing), ClassAssertion(owl:Thing <http://www.example.org/reasonerTester#d>)]

Anomaly 2: Inference differentiation between ELK and OPENLLET:
	additional axioms ELK: [SubObjectPropertyOf(<http://www.example.org/reasonerTester#psim> owl:topObjectProperty), SubObjectPropertyOf(<http://www.example.org/reasonerTester#qnonsim> owl:topObjectProperty), SubClassOf(<http://www.example.org/reasonerTester#D> owl:Thing), ClassAssertion(owl:Thing <http://www.example.org/reasonerTester#a>), SubObjectPropertyOf(<http://www.example.org/reasonerTester#pnonsim> owl:topObjectProperty), SubObjectPropertyOf(<http://www.example.org/reasonerTester#rnonsim> owl:topObjectProperty), SubClassOf(<http://www.example.org/reasonerTester#C> owl:Thing), ClassAssertion(owl:Thing <http://www.example.org/reasonerTester#b>), SubObjectPropertyOf(<http://www.example.org/reasonerTester#qsim> owl:topObjectProperty), EquivalentObjectProperties(<http://www.example.org/reasonerTester#psim> <http://www.example.org/reasonerTester#rsim> <http://www.example.org/reasonerTester#ssim>), SubObjectPropertyOf(<http://www.example.org/reasonerTester#rsim> owl:topObjectProperty), SubClassOf(<http://www.example.org/reasonerTester#B> owl:Thing), ClassAssertion(owl:Thing <http://www.example.org/reasonerTester#c>), SubObjectPropertyOf(<http://www.example.org/reasonerTester#snonsim> owl:topObjectProperty), SubObjectPropertyOf(<http://www.example.org/reasonerTester#ssim> owl:topObjectProperty), SubClassOf(<http://www.example.org/reasonerTester#A> owl:Thing), ClassAssertion(owl:Thing <http://www.example.org/reasonerTester#d>)]
	additional axioms OPENLLET: [SubClassOf(owl:Thing owl:Nothing)]

Anomaly 3: Consistency differentiation:
	OPENLLET: not consistent, ELK: consistent

Anomaly 4: Consistency differentiation:
	HERMIT: not consistent, ELK: consistent


––––––––––––––––––––––––––––––––––––––––––––
–––––––––––    Ontology File    ––––––––––––
––––––––––––––––––––––––––––––––––––––––––––

Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (


Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


HasKey(Annotation( :ans :annotation4) Annotation( :anp :annotation2) Annotation( :anr :annotation1)  DataSomeValuesFrom(:dq rdf:PlainLiteral) ( :pnonsim :psim  ) ( ) )

SameIndividual(Annotation( :anq :annotation3) Annotation( :ans :annotation2) Annotation( :anp :annotation3)  :b :c :d )

EquivalentClasses( ObjectSomeValuesFrom(:qnonsim ObjectOneOf(:a)) DataHasValue(:ds "s4"@en) ObjectIntersectionOf(:B ObjectHasSelf(:ssim) ObjectHasValue(:qsim :a) :C :D :A :A DataSomeValuesFrom(:dr DataIntersectionOf(xsd:string DataOneOf("s2"^^rdfs:Literal)  ) ) DataHasValue(:dp "s1") DataHasValue(:dr "s3") DataHasValue(:ds "s3") :D ) )

HasKey( ObjectHasValue(:rnonsim :a) ( ) ( :dr :ds  ) )

EquivalentObjectProperties( :psim :rsim :ssim )

NegativeDataPropertyAssertion(Annotation(Annotation( :anr :annotation1) Annotation( :anr :annotation4)  :ans :annotation4) Annotation( :anq :annotation4)  :dr :a "s3"@fr)

HasKey( ObjectHasValue(:snonsim :c) ( :snonsim :snonsim :pnonsim :rsim :qsim :rsim  ) ( :dp :ds  ) )

ObjectPropertyAssertion(Annotation(Annotation(Annotation( :anr :annotation2) Annotation( :anq :annotation1)  :anp :annotation3) Annotation( :anr :annotation3)  :anr :annotation3) Annotation(Annotation( :anq :annotation4)  :anr :annotation3)  :qnonsim :a :a)

ObjectPropertyRange(Annotation( :anq :annotation3) Annotation(Annotation(Annotation( :anr :annotation2)  :ans :annotation2)  :ans :annotation2) Annotation(Annotation(Annotation( :anr :annotation4)  :ans :annotation3)  :ans :annotation4)  :pnonsim DataHasValue(:dp "s2"@de))

HasKey(Annotation( :anq :annotation4)  DataHasValue(:ds "s2"@no) ( :ssim :qnonsim :pnonsim  ) ( :dp  ) )

DataPropertyDomain(Annotation( :anp :annotation3)  :dq DataSomeValuesFrom(:dq DataIntersectionOf(DataIntersectionOf(xsd:string DataOneOf("s2"@en)  xsd:string )  DataIntersectionOf(xsd:string DataIntersectionOf(DataIntersectionOf(DataOneOf("s2"^^rdfs:Literal)  rdfs:Literal )  DataIntersectionOf(DataOneOf("s4")  DataIntersectionOf(rdf:PlainLiteral rdfs:Literal )  )  DataOneOf("s2")  DataOneOf("s3"@en)  )  )  DataOneOf("s3"^^rdfs:Literal)  ) ))

HasKey(Annotation(Annotation( :ans :annotation4)  :anr :annotation3)  ObjectHasValue(:ssim :d) ( ) ( :dr :dp  ) )

DataPropertyAssertion(Annotation(Annotation(Annotation(Annotation( :anq :annotation2) Annotation(Annotation( :anp :annotation1)  :anq :annotation3)  :anq :annotation4)  :anq :annotation2) Annotation( :anr :annotation2)  :ans :annotation4)  :dp :d "s2")

DisjointClasses(Annotation(Annotation( :anr :annotation1)  :anr :annotation2)  ObjectHasSelf(:qsim) DataSomeValuesFrom(:dr DataIntersectionOf(DataOneOf("s2")  rdfs:Literal DataOneOf("s2"^^rdf:PlainLiteral)  ) ) ObjectSomeValuesFrom(:rsim ObjectHasValue(:ssim :a)) ) 
)
