Found anomalies while testing file ../found_anomalies/el_reasoners/rdfuzz/test_run_2024_11_29_15_17/test_ontologies/test618.owl

Anomaly 1: Inference differentiation between HERMIT and ELK:
	additional axioms HERMIT: [SubClassOf(owl:Thing owl:Nothing)]
	additional axioms ELK: [SubObjectPropertyOf(<http://www.example.org/reasonerTester#psim> owl:topObjectProperty), SubObjectPropertyOf(<http://www.example.org/reasonerTester#qnonsim> owl:topObjectProperty), SubClassOf(<http://www.example.org/reasonerTester#D> owl:Thing), ClassAssertion(owl:Thing <http://www.example.org/reasonerTester#a>), SubObjectPropertyOf(<http://www.example.org/reasonerTester#pnonsim> owl:topObjectProperty), EquivalentClasses(<http://www.example.org/reasonerTester#A> <http://www.example.org/reasonerTester#C> <http://www.example.org/reasonerTester#D>), SubObjectPropertyOf(<http://www.example.org/reasonerTester#rnonsim> owl:topObjectProperty), SubClassOf(<http://www.example.org/reasonerTester#C> owl:Thing), ClassAssertion(owl:Thing <http://www.example.org/reasonerTester#b>), SubObjectPropertyOf(<http://www.example.org/reasonerTester#qsim> owl:topObjectProperty), SubObjectPropertyOf(<http://www.example.org/reasonerTester#rsim> owl:topObjectProperty), SubClassOf(<http://www.example.org/reasonerTester#B> owl:Thing), ClassAssertion(owl:Thing <http://www.example.org/reasonerTester#c>), SubObjectPropertyOf(<http://www.example.org/reasonerTester#snonsim> owl:topObjectProperty), SubObjectPropertyOf(<http://www.example.org/reasonerTester#ssim> owl:topObjectProperty), SubClassOf(<http://www.example.org/reasonerTester#A> owl:Thing), ClassAssertion(owl:Thing <http://www.example.org/reasonerTester#d>)]

Anomaly 2: Inference differentiation between ELK and OPENLLET:
	additional axioms ELK: [SubObjectPropertyOf(<http://www.example.org/reasonerTester#psim> owl:topObjectProperty), SubObjectPropertyOf(<http://www.example.org/reasonerTester#qnonsim> owl:topObjectProperty), SubClassOf(<http://www.example.org/reasonerTester#D> owl:Thing), ClassAssertion(owl:Thing <http://www.example.org/reasonerTester#a>), SubObjectPropertyOf(<http://www.example.org/reasonerTester#pnonsim> owl:topObjectProperty), EquivalentClasses(<http://www.example.org/reasonerTester#A> <http://www.example.org/reasonerTester#C> <http://www.example.org/reasonerTester#D>), SubObjectPropertyOf(<http://www.example.org/reasonerTester#rnonsim> owl:topObjectProperty), SubClassOf(<http://www.example.org/reasonerTester#C> owl:Thing), ClassAssertion(owl:Thing <http://www.example.org/reasonerTester#b>), SubObjectPropertyOf(<http://www.example.org/reasonerTester#qsim> owl:topObjectProperty), SubObjectPropertyOf(<http://www.example.org/reasonerTester#rsim> owl:topObjectProperty), SubClassOf(<http://www.example.org/reasonerTester#B> owl:Thing), ClassAssertion(owl:Thing <http://www.example.org/reasonerTester#c>), SubObjectPropertyOf(<http://www.example.org/reasonerTester#snonsim> owl:topObjectProperty), SubObjectPropertyOf(<http://www.example.org/reasonerTester#ssim> owl:topObjectProperty), SubClassOf(<http://www.example.org/reasonerTester#A> owl:Thing), ClassAssertion(owl:Thing <http://www.example.org/reasonerTester#d>)]
	additional axioms OPENLLET: [SubClassOf(owl:Thing owl:Nothing)]

Anomaly 3: Consistency differentiation:
	OPENLLET: not consistent, ELK: consistent

Anomaly 4: Consistency differentiation:
	HERMIT: not consistent, ELK: consistent


––––––––––––––––––––––––––––––––––––––––––––
–––––––––––    Ontology File    ––––––––––––
––––––––––––––––––––––––––––––––––––––––––––

Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (


Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


DatatypeDefinition(Annotation(Annotation( :anq :annotation4) Annotation( :anq :annotation1)  :ans :annotation3) Annotation(Annotation( :ans :annotation1) Annotation( :anr :annotation3)  :anr :annotation2) Annotation( :anp :annotation3)  :dta DataIntersectionOf(DataOneOf("s2")  rdfs:Literal ) )

DataPropertyDomain(Annotation(Annotation(Annotation(Annotation( :anq :annotation2)  :ans :annotation4)  :anq :annotation1)  :ans :annotation2)  :dp :B)

SubClassOf(Annotation(Annotation( :anq :annotation3) Annotation( :anp :annotation2)  :anp :annotation1)  DataSomeValuesFrom(:dq xsd:string) ObjectOneOf(:a))

ObjectPropertyDomain( :qsim ObjectHasValue(:qnonsim :c))

EquivalentClasses( ObjectIntersectionOf(ObjectHasSelf(:ssim) ObjectSomeValuesFrom(:psim :C) ) DataHasValue(:dr "s1"^^rdf:PlainLiteral) :A :D ObjectOneOf(:b) DataHasValue(:ds "s3"@fr) DataHasValue(:dp "s4"@de) ObjectHasValue(:rnonsim :d) ObjectSomeValuesFrom(:snonsim ObjectSomeValuesFrom(:rsim ObjectSomeValuesFrom(:qnonsim :A))) ObjectSomeValuesFrom(:pnonsim ObjectHasValue(:pnonsim :a)) ObjectSomeValuesFrom(:rsim :D) ObjectSomeValuesFrom(:ssim :B) :D :C )

SubDataPropertyOf( :dp :dr)

FunctionalDataProperty( :dr)

ObjectPropertyAssertion(Annotation(Annotation( :anq :annotation2) Annotation( :anq :annotation4)  :anr :annotation4) Annotation( :anq :annotation1) Annotation( :ans :annotation4)  :ssim :c :d)

ObjectPropertyRange( :snonsim DataHasValue(:ds "s2"@en))

DisjointClasses( DataHasValue(:dr "s2"@no) DataSomeValuesFrom(:dr DataIntersectionOf(xsd:string xsd:string ) ) DataSomeValuesFrom(:dq rdfs:Literal) :A )

EquivalentClasses(Annotation( :ans :annotation4) Annotation( :anq :annotation2)  DataSomeValuesFrom(:dq rdfs:Literal) DataSomeValuesFrom(:dq rdfs:Literal) DataSomeValuesFrom(:dq xsd:string) DataSomeValuesFrom(:dr xsd:string) ) 
)
