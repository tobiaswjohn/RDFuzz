Found anomalies while testing file ../found_anomalies/el_reasoners/rdfuzz/test_run_2024_11_29_15_17/test_ontologies/test793.owl

Anomaly 1: Inference differentiation between HERMIT and OPENLLET:
	additional axioms HERMIT: []
	additional axioms OPENLLET: [DataPropertyAssertion(<http://www.example.org/reasonerTester#ds> <http://www.example.org/reasonerTester#a> "s2"^^rdfs:Literal), DataPropertyAssertion(<http://www.example.org/reasonerTester#dp> <http://www.example.org/reasonerTester#a> "s2"^^rdfs:Literal)]


––––––––––––––––––––––––––––––––––––––––––––
–––––––––––    Ontology File    ––––––––––––
––––––––––––––––––––––––––––––––––––––––––––

Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (

Annotation(Annotation(Annotation( :anr :annotation1)  :ans :annotation2) Annotation( :anq :annotation4) Annotation( :anq :annotation3)  :anp :annotation3) 
Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


DatatypeDefinition(Annotation(Annotation( :ans :annotation3) Annotation(Annotation( :anq :annotation2)  :anp :annotation1)  :anr :annotation2) Annotation(Annotation( :anq :annotation2)  :anq :annotation1) Annotation(Annotation( :ans :annotation3)  :anp :annotation1)  :dta DataIntersectionOf(rdf:PlainLiteral DataOneOf("s1")  ) )

SubClassOf( ObjectOneOf(:a) DataHasValue(:dp "s2"^^rdfs:Literal))

DatatypeDefinition(Annotation( :ans :annotation2)  :dtb xsd:string)

HasKey(Annotation(Annotation( :ans :annotation2)  :ans :annotation4) Annotation(Annotation( :anp :annotation3)  :ans :annotation4) Annotation( :ans :annotation4)  ObjectSomeValuesFrom(:qnonsim ObjectHasSelf(:psim)) ( ) ( :dq  ) )

ObjectPropertyDomain( :rsim ObjectHasValue(:pnonsim :c))

NegativeDataPropertyAssertion( :ds :b "s4"@no)

SameIndividual(Annotation(Annotation( :anr :annotation1)  :anp :annotation4) Annotation(Annotation( :anp :annotation1) Annotation( :anq :annotation2)  :anr :annotation2) Annotation( :anp :annotation2) Annotation( :ans :annotation3)  :b :d )

DisjointClasses( DataSomeValuesFrom(:dr DataIntersectionOf(DataOneOf("s3"@de)  DataOneOf("s3"@en)  DataOneOf("s1"@fr)  DataOneOf("s2"@fr)  DataOneOf("s2"@fr)  DataOneOf("s4"@en)  DataOneOf("s2"^^xsd:string)  ) ) :C )

SubDataPropertyOf(Annotation( :ans :annotation2) Annotation( :anr :annotation1)  :dp :ds)

DatatypeDefinition(Annotation( :anr :annotation3) Annotation(Annotation( :anp :annotation3) Annotation(Annotation( :anr :annotation1)  :ans :annotation2)  :ans :annotation3) Annotation( :anr :annotation1)  :dtc xsd:string)

DifferentIndividuals( :b :b :a :c :c )

DatatypeDefinition(Annotation(Annotation( :anq :annotation2)  :anr :annotation3)  :dtb DataOneOf("s3") )

FunctionalDataProperty(Annotation( :anp :annotation2) Annotation(Annotation( :anr :annotation2)  :anq :annotation1) Annotation( :anq :annotation4)  :dp)

DatatypeDefinition( :dtb DataIntersectionOf(DataOneOf("s2"^^rdf:PlainLiteral)  DataOneOf("s2"^^rdfs:Literal)  DataIntersectionOf(DataIntersectionOf(xsd:string DataOneOf("s1"@en)  )  DataOneOf("s1"@no)  DataOneOf("s2")  xsd:string )  ) )

HasKey(Annotation( :ans :annotation3)  ObjectIntersectionOf(:D :A ) ( :ssim :rnonsim  ) ( :dp :dq  ) )

TransitiveObjectProperty( :snonsim)

ObjectPropertyAssertion( :qsim :a :b) 
)
