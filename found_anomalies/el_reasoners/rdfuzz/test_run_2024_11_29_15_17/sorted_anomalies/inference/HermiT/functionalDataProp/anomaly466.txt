Found anomalies while testing file ../found_anomalies/el_reasoners/rdfuzz/test_run_2024_11_29_15_17/test_ontologies/test1398.owl

Anomaly 1: Inference differentiation between HERMIT and OPENLLET:
	additional axioms HERMIT: []
	additional axioms OPENLLET: [FunctionalDataProperty(<http://www.example.org/reasonerTester#ds>), DataPropertyAssertion(<http://www.example.org/reasonerTester#dp> <http://www.example.org/reasonerTester#b> "s2"^^rdfs:Literal), DataPropertyAssertion(<http://www.example.org/reasonerTester#dp> <http://www.example.org/reasonerTester#b> "s3"^^xsd:string), DataPropertyAssertion(<http://www.example.org/reasonerTester#dp> <http://www.example.org/reasonerTester#d> "s2"^^rdfs:Literal), DataPropertyAssertion(<http://www.example.org/reasonerTester#dp> <http://www.example.org/reasonerTester#b> "s1"@de), DataPropertyAssertion(<http://www.example.org/reasonerTester#dp> <http://www.example.org/reasonerTester#d> "s3"^^xsd:string), DataPropertyAssertion(<http://www.example.org/reasonerTester#dp> <http://www.example.org/reasonerTester#d> "s1"@de)]


––––––––––––––––––––––––––––––––––––––––––––
–––––––––––    Ontology File    ––––––––––––
––––––––––––––––––––––––––––––––––––––––––––

Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (


Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


SubClassOf(Annotation(Annotation( :anr :annotation1)  :ans :annotation4) Annotation( :anp :annotation2) Annotation( :anq :annotation3)  DataHasValue(:ds "s1"@no) ObjectHasValue(:ssim :a))

HasKey(Annotation(Annotation( :anr :annotation3) Annotation( :anr :annotation4)  :anp :annotation3) Annotation( :ans :annotation4)  ObjectSomeValuesFrom(:qnonsim :C) ( :pnonsim  ) ( :dr :dq  ) )

EquivalentClasses( ObjectIntersectionOf(DataSomeValuesFrom(:dp DataOneOf("s3") ) :A ObjectHasSelf(:qsim) :B :D ObjectOneOf(:d) DataSomeValuesFrom(:dq DataIntersectionOf(xsd:string rdfs:Literal ) ) DataSomeValuesFrom(:dr rdf:PlainLiteral) ObjectHasValue(:rsim :c) DataSomeValuesFrom(:dr DataIntersectionOf(DataIntersectionOf(xsd:string xsd:string )  DataIntersectionOf(xsd:string rdfs:Literal )  ) ) DataHasValue(:dp "s2"^^rdfs:Literal) :B ) ObjectOneOf(:b) )

DisjointClasses( ObjectHasValue(:rnonsim :d) ObjectHasValue(:snonsim :d) ObjectHasValue(:psim :d) :D :D )

ClassAssertion( DataHasValue(:dr "s4"@fr) :a)

DataPropertyDomain(Annotation( :ans :annotation2) Annotation(Annotation( :anp :annotation1) Annotation( :anr :annotation1)  :anq :annotation1) Annotation(Annotation( :ans :annotation3)  :anp :annotation1)  :dq DataHasValue(:dp "s1"@de))

DataPropertyRange(Annotation( :anp :annotation1)  :ds DataIntersectionOf(rdf:PlainLiteral DataIntersectionOf(DataOneOf("s3")  DataOneOf("s3")  )  rdfs:Literal rdf:PlainLiteral ) )

DatatypeDefinition( :dtc DataOneOf("s3"@en) )

NegativeObjectPropertyAssertion(Annotation(Annotation( :anr :annotation3) Annotation( :anp :annotation1)  :anr :annotation2) Annotation(Annotation( :anq :annotation3) Annotation( :anp :annotation4) Annotation( :anq :annotation1)  :anr :annotation4)  :qnonsim :a :a)

NegativeDataPropertyAssertion(Annotation(Annotation( :ans :annotation1)  :anr :annotation4) Annotation( :ans :annotation3) Annotation( :anp :annotation2) Annotation( :ans :annotation2)  :ds :b "s1"^^rdf:PlainLiteral)

ObjectPropertyAssertion(Annotation( :anq :annotation3)  :ssim :c :b)

HasKey(Annotation( :anr :annotation3)  ObjectHasSelf(:ssim) ( ) ( :dp  ) )

SubObjectPropertyOf( :rsim :rsim)

DisjointClasses(Annotation(Annotation(Annotation(Annotation(Annotation( :ans :annotation2)  :anp :annotation4)  :anq :annotation1)  :anq :annotation3) Annotation( :ans :annotation3)  :ans :annotation1)  DataHasValue(:dp "s3"^^xsd:string) ObjectOneOf(:a) ObjectSomeValuesFrom(:rsim DataSomeValuesFrom(:ds rdfs:Literal)) ) 
)
