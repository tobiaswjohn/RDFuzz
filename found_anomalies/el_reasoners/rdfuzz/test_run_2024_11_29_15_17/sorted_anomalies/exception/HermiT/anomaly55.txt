Found anomalies while testing file ../found_anomalies/el_reasoners/rdfuzz/test_run_2024_11_29_15_17/test_ontologies/test166.owl

Anomaly 1: helper anomaly; reasoner for HERMIT could not be created

Anomaly 2: helper anomaly; reasoner for HERMIT could not be created

Anomaly 3: Anomaly with following exception thrown by HERMIT:
java.lang.NullPointerException: operands cannot be null or empty


––––––––––––––––––––––––––––––––––––––––––––
–––––––––––    Ontology File    ––––––––––––
––––––––––––––––––––––––––––––––––––––––––––

Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (


Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


SubObjectPropertyOf(Annotation(Annotation( :anq :annotation1) Annotation( :anr :annotation4)  :anp :annotation3) Annotation( :anr :annotation4) Annotation( :ans :annotation2) Annotation( :anq :annotation3)  ObjectPropertyChain(:ssim :qnonsim :psim ) :snonsim)

DataPropertyDomain( :ds ObjectHasValue(:pnonsim :a))

EquivalentClasses(Annotation(Annotation(Annotation(Annotation( :anp :annotation3) Annotation( :ans :annotation3)  :ans :annotation4) Annotation(Annotation( :anp :annotation4) Annotation( :anr :annotation4)  :anp :annotation2)  :anr :annotation3) Annotation( :anq :annotation4)  :anp :annotation3)  ObjectOneOf(:c) DataSomeValuesFrom(:dq rdfs:Literal) :C )

NegativeDataPropertyAssertion(Annotation( :anq :annotation1) Annotation( :anr :annotation1)  :dr :b "s3"^^xsd:string)

DifferentIndividuals(Annotation( :anp :annotation1)  :d :c :a )

SubClassOf(Annotation(Annotation( :anq :annotation2) Annotation( :anr :annotation2) Annotation( :anr :annotation2) Annotation( :anq :annotation4)  :anr :annotation1)  ObjectSomeValuesFrom(:rnonsim ObjectIntersectionOf(:B DataHasValue(:dp "s4") :D :A )) ObjectHasSelf(:qsim))

EquivalentObjectProperties(Annotation( :anr :annotation4) Annotation(Annotation( :anq :annotation1) Annotation( :anp :annotation4)  :anp :annotation1)  :rsim :ssim )

TransitiveObjectProperty( :pnonsim)

ObjectPropertyAssertion( :rnonsim :c :a)

ReflexiveObjectProperty(Annotation(Annotation( :anr :annotation4) Annotation( :anq :annotation3)  :anr :annotation4)  :snonsim)

DisjointClasses( DataSomeValuesFrom(:dq DataIntersectionOf(rdf:PlainLiteral xsd:string ) ) DataSomeValuesFrom(:dp DataOneOf("s1"@en) ) DataSomeValuesFrom(:dq rdfs:Literal) DataSomeValuesFrom(:dp xsd:string) )

HasKey(Annotation(Annotation(Annotation(Annotation( :ans :annotation2)  :ans :annotation2) Annotation( :ans :annotation2) Annotation( :anp :annotation3)  :anq :annotation1)  :anq :annotation2)  DataHasValue(:dq "s2"@de) ( :snonsim  ) ( ) )

DatatypeDefinition( :dtb DataIntersectionOf(DataOneOf("s3"@fr)  DataOneOf("s1"@no)  DataOneOf("s1")  DataOneOf("s1"^^rdf:PlainLiteral)  DataOneOf("s1"^^rdfs:Literal)  DataIntersectionOf(DataIntersectionOf(rdfs:Literal rdfs:Literal )  DataOneOf("s1")  )  DataIntersectionOf(DataOneOf("s4")  rdfs:Literal xsd:string rdf:PlainLiteral )  ) )

ObjectPropertyRange( :rnonsim :C) 
)
