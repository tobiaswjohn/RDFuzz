Found anomalies while testing file ../found_anomalies/el_reasoners/rdfuzz/test_run_2024_11_29_15_17/test_ontologies/test982.owl

Anomaly 1: helper anomaly; reasoner for HERMIT could not be created

Anomaly 2: helper anomaly; reasoner for HERMIT could not be created

Anomaly 3: Anomaly with following exception thrown by HERMIT:
java.lang.NullPointerException: operands cannot be null or empty


––––––––––––––––––––––––––––––––––––––––––––
–––––––––––    Ontology File    ––––––––––––
––––––––––––––––––––––––––––––––––––––––––––

Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (

Annotation(Annotation(Annotation( :anp :annotation3) Annotation( :ans :annotation2) Annotation( :anp :annotation2)  :anr :annotation3) Annotation( :anp :annotation1) Annotation( :ans :annotation4)  :anq :annotation4) 
Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


ObjectPropertyAssertion(Annotation(Annotation(Annotation( :anr :annotation3) Annotation( :anp :annotation3)  :anq :annotation1)  :ans :annotation1) Annotation(Annotation( :anr :annotation2) Annotation( :anq :annotation4)  :anq :annotation4)  :psim :d :c)

DisjointClasses(Annotation( :ans :annotation1) Annotation( :anp :annotation4) Annotation( :anr :annotation1)  ObjectHasSelf(:qsim) ObjectIntersectionOf(:A ObjectOneOf(:a) :B :D ) )

HasKey( ObjectHasValue(:snonsim :b) ( ) ( :dq  ) )

EquivalentClasses( DataHasValue(:dp "s2"@de) DataSomeValuesFrom(:dr DataIntersectionOf(xsd:string DataOneOf("s3")  ) ) :C ObjectSomeValuesFrom(:pnonsim ObjectHasValue(:ssim :a)) DataHasValue(:ds "s4"^^rdfs:Literal) DataHasValue(:dq "s1"@fr) ObjectHasValue(:qnonsim :b) ObjectHasValue(:rsim :a) ObjectSomeValuesFrom(:rnonsim ObjectHasValue(:qnonsim :d)) DataSomeValuesFrom(:dq rdf:PlainLiteral) DataSomeValuesFrom(:dr DataIntersectionOf(rdf:PlainLiteral xsd:string ) ) DataSomeValuesFrom(:dp DataIntersectionOf(DataIntersectionOf(xsd:string rdfs:Literal )  DataIntersectionOf(rdfs:Literal rdfs:Literal )  ) ) :C )

NegativeObjectPropertyAssertion( :pnonsim :b :c)

DatatypeDefinition( :dtc DataIntersectionOf(DataIntersectionOf(DataOneOf("s2")  rdfs:Literal )  DataIntersectionOf(xsd:string DataOneOf("s1")  )  rdf:PlainLiteral xsd:string rdf:PlainLiteral ) )

HasKey( DataHasValue(:dp "s1"@en) ( :qnonsim  ) ( ) )

SubClassOf( DataHasValue(:dq "s3"@no) DataHasValue(:dp "s2"))

DatatypeDefinition(Annotation( :anr :annotation2) Annotation(Annotation(Annotation( :anp :annotation2) Annotation( :ans :annotation2)  :ans :annotation3)  :anr :annotation4) Annotation(Annotation( :anp :annotation1) Annotation( :anq :annotation1) Annotation( :ans :annotation4)  :anr :annotation2)  :dta rdf:PlainLiteral)

ClassAssertion( ObjectHasValue(:ssim :c) :c)

TransitiveObjectProperty( :snonsim)

FunctionalDataProperty( :dq)

ObjectPropertyAssertion( :rnonsim :b :c)

FunctionalDataProperty( :dr) 
)
