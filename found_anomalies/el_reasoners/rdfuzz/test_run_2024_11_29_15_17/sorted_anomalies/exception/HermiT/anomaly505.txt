Found anomalies while testing file ../found_anomalies/el_reasoners/rdfuzz/test_run_2024_11_29_15_17/test_ontologies/test1519.owl

Anomaly 1: helper anomaly; reasoner for HERMIT could not be created

Anomaly 2: helper anomaly; reasoner for HERMIT could not be created

Anomaly 3: Anomaly with following exception thrown by HERMIT:
java.lang.NullPointerException: operands cannot be null or empty


––––––––––––––––––––––––––––––––––––––––––––
–––––––––––    Ontology File    ––––––––––––
––––––––––––––––––––––––––––––––––––––––––––

Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (


Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


DisjointClasses(Annotation( :anq :annotation4) Annotation( :ans :annotation3)  ObjectHasSelf(:rsim) ObjectIntersectionOf(:D :A ) :C )

DifferentIndividuals(Annotation(Annotation( :anr :annotation1)  :anr :annotation2) Annotation(Annotation( :ans :annotation1) Annotation( :anq :annotation2)  :anp :annotation1) Annotation( :anr :annotation4)  :b :c )

ObjectPropertyAssertion(Annotation(Annotation(Annotation( :anr :annotation3)  :anp :annotation2)  :ans :annotation2) Annotation(Annotation( :anq :annotation4) Annotation( :ans :annotation4) Annotation( :anp :annotation2)  :anq :annotation3)  :qnonsim :d :a)

EquivalentClasses( DataHasValue(:dq "s2") DataSomeValuesFrom(:dp rdf:PlainLiteral) ObjectOneOf(:a) ObjectSomeValuesFrom(:pnonsim ObjectHasValue(:rnonsim :b)) ObjectHasValue(:qsim :a) :B DataSomeValuesFrom(:dr DataIntersectionOf(DataOneOf("s4"@fr)  rdfs:Literal ) ) DataHasValue(:ds "s3"^^xsd:string) DataHasValue(:dp "s1"^^rdfs:Literal) DataHasValue(:dp "s3"@de) ObjectSomeValuesFrom(:psim ObjectSomeValuesFrom(:snonsim ObjectHasValue(:ssim :c))) ObjectHasValue(:rsim :d) ObjectHasValue(:snonsim :c) ObjectHasValue(:rsim :c) DataHasValue(:dp "s3"@no) DataHasValue(:dq "s3"@en) DataHasValue(:dr "s2"^^rdfs:Literal) DataHasValue(:dp "s2"^^xsd:string) DataSomeValuesFrom(:dq DataIntersectionOf(DataIntersectionOf(xsd:string rdfs:Literal )  DataIntersectionOf(rdf:PlainLiteral xsd:string )  ) ) DataSomeValuesFrom(:dp DataIntersectionOf(xsd:string xsd:string ) ) DataSomeValuesFrom(:dr xsd:string) :B )

SubClassOf(Annotation( :ans :annotation2)  DataSomeValuesFrom(:dq DataIntersectionOf(DataIntersectionOf(rdfs:Literal rdfs:Literal )  DataIntersectionOf(rdf:PlainLiteral xsd:string )  ) ) DataSomeValuesFrom(:dr DataIntersectionOf(DataIntersectionOf(rdf:PlainLiteral xsd:string )  rdfs:Literal ) )) 
)
