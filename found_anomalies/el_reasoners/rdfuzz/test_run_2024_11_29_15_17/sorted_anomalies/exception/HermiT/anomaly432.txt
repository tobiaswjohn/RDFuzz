Found anomalies while testing file ../found_anomalies/el_reasoners/rdfuzz/test_run_2024_11_29_15_17/test_ontologies/test1288.owl

Anomaly 1: helper anomaly; reasoner for HERMIT could not be created

Anomaly 2: helper anomaly; reasoner for HERMIT could not be created

Anomaly 3: Anomaly with following exception thrown by HERMIT:
java.lang.NullPointerException: operands cannot be null or empty


––––––––––––––––––––––––––––––––––––––––––––
–––––––––––    Ontology File    ––––––––––––
––––––––––––––––––––––––––––––––––––––––––––

Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (

Annotation(Annotation(Annotation( :anr :annotation1) Annotation( :anp :annotation2)  :ans :annotation3) Annotation( :anq :annotation2) Annotation( :anp :annotation3)  :anq :annotation4) 
Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


EquivalentClasses( ObjectHasSelf(:psim) ObjectIntersectionOf(ObjectOneOf(:d) ObjectHasValue(:pnonsim :b) ) ObjectSomeValuesFrom(:ssim DataHasValue(:ds "s2"^^xsd:string)) DataSomeValuesFrom(:dp DataOneOf("s1") ) :A :B :C :D :A ObjectOneOf(:a) DataSomeValuesFrom(:dq rdfs:Literal) ObjectHasValue(:rnonsim :c) DataHasValue(:dr "s3"@en) DataSomeValuesFrom(:dq DataIntersectionOf(DataIntersectionOf(rdf:PlainLiteral DataIntersectionOf(rdfs:Literal rdfs:Literal )  )  rdf:PlainLiteral ) ) DataSomeValuesFrom(:dq rdf:PlainLiteral) DataSomeValuesFrom(:dq rdf:PlainLiteral) ObjectSomeValuesFrom(:snonsim :A) :B )

ObjectPropertyAssertion(Annotation( :anq :annotation1) Annotation( :anq :annotation1) Annotation(Annotation(Annotation( :anr :annotation2) Annotation(Annotation( :ans :annotation2)  :anp :annotation2)  :anp :annotation4) Annotation(Annotation( :anp :annotation2)  :anq :annotation4)  :anq :annotation4)  :rsim :a :a)

ObjectPropertyAssertion(Annotation( :anp :annotation4) Annotation(Annotation( :anq :annotation2) Annotation(Annotation(Annotation(Annotation( :anp :annotation1) Annotation( :anq :annotation3)  :ans :annotation3)  :anq :annotation1) Annotation(Annotation( :anp :annotation3) Annotation( :anp :annotation2) Annotation( :anr :annotation1)  :anp :annotation4)  :anr :annotation3)  :ans :annotation4)  :qsim :b :d)

HasKey( :C ( :rnonsim  ) ( :dr  ) )

ClassAssertion( :C :d)

EquivalentDataProperties( :dr :dq )

TransitiveObjectProperty( :qnonsim)

DatatypeDefinition( :dtb rdfs:Literal) 
)
