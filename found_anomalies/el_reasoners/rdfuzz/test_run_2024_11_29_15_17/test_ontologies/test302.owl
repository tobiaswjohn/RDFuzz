Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (


Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


ObjectPropertyRange(Annotation(Annotation( :anq :annotation1) Annotation( :anr :annotation2)  :anp :annotation3) Annotation( :ans :annotation4) Annotation( :anq :annotation1) Annotation( :anp :annotation4)  :ssim :A)

SubClassOf( ObjectSomeValuesFrom(:qnonsim ObjectOneOf(:d)) ObjectHasSelf(:rsim))

ObjectPropertyAssertion( :rnonsim :c :b)

TransitiveObjectProperty( :snonsim)

SubObjectPropertyOf( ObjectPropertyChain(:psim :qsim ) :pnonsim)

ReflexiveObjectProperty(Annotation(Annotation( :anq :annotation2)  :anq :annotation2)  :qnonsim)

DataPropertyAssertion( :dq :a "s3"^^xsd:string)

HasKey(Annotation(Annotation( :ans :annotation2) Annotation( :ans :annotation1)  :ans :annotation2) Annotation(Annotation( :ans :annotation1)  :anq :annotation2)  ObjectHasValue(:ssim :a) ( ) ( :ds  ) )

ObjectPropertyDomain( :qnonsim DataSomeValuesFrom(:dr DataIntersectionOf(DataOneOf("s2"@fr)  rdfs:Literal rdf:PlainLiteral ) ))

EquivalentDataProperties( :dp :dp )

DatatypeDefinition( :dta DataOneOf("s1") )

EquivalentClasses( :D :B )

FunctionalDataProperty( :ds)

FunctionalDataProperty( :dp)

DifferentIndividuals( :a :d )

FunctionalDataProperty( :dr)

ClassAssertion( :C :b) 
)
