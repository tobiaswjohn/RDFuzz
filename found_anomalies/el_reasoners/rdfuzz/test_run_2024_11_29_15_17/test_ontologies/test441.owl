Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (


Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


ObjectPropertyRange(Annotation(Annotation( :ans :annotation3) Annotation( :ans :annotation4)  :anp :annotation2) Annotation( :anq :annotation1) Annotation( :anr :annotation4)  :rsim ObjectIntersectionOf(ObjectSomeValuesFrom(:rnonsim DataHasValue(:dr "s4")) ObjectHasSelf(:psim) DataSomeValuesFrom(:ds rdfs:Literal) ))

ObjectPropertyAssertion( :pnonsim :a :d)

EquivalentObjectProperties( :qsim :ssim )

ObjectPropertyDomain(Annotation(Annotation( :anp :annotation1) Annotation( :anp :annotation3)  :ans :annotation2) Annotation(Annotation(Annotation( :ans :annotation1)  :ans :annotation4)  :anq :annotation1)  :qnonsim :B)

EquivalentClasses( ObjectOneOf(:b) ObjectHasValue(:snonsim :c) :D :A :C DataSomeValuesFrom(:dp DataIntersectionOf(DataOneOf("s3"^^rdf:PlainLiteral)  xsd:string DataOneOf("s1"@de)  ) ) :B DataHasValue(:dq "s2"@en) DataHasValue(:dr "s3"@fr) DataHasValue(:dq "s4"@no) DataHasValue(:dr "s3"@de) ) 
)
