Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (

Annotation(Annotation(Annotation(Annotation( :ans :annotation4)  :anr :annotation1)  :anp :annotation2) Annotation( :ans :annotation4) Annotation( :anp :annotation2) Annotation( :anr :annotation1)  :anq :annotation3) 
Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


DisjointClasses( ObjectIntersectionOf(:B DataSomeValuesFrom(:ds DataIntersectionOf(xsd:string DataOneOf("s3"@no)  ) ) DataHasValue(:dp "s4") ObjectOneOf(:c) :D :A :C ObjectHasValue(:rnonsim :b) ObjectOneOf(:d) DataHasValue(:dr "s1"@en) DataHasValue(:dq "s2"^^rdfs:Literal) ObjectSomeValuesFrom(:qnonsim ObjectHasValue(:psim :d)) ObjectHasValue(:qsim :d) ObjectHasValue(:pnonsim :a) ObjectHasValue(:qnonsim :a) DataSomeValuesFrom(:dr rdf:PlainLiteral) DataSomeValuesFrom(:dq DataIntersectionOf(DataIntersectionOf(rdf:PlainLiteral rdf:PlainLiteral )  DataOneOf("s3")  rdfs:Literal ) ) ObjectSomeValuesFrom(:qsim DataHasValue(:dr "s1")) DataHasValue(:dr "s1") ) ObjectSomeValuesFrom(:snonsim ObjectHasSelf(:ssim)) ObjectHasValue(:rsim :a) )

ObjectPropertyAssertion( :snonsim :b :d)

NegativeDataPropertyAssertion( :dp :a "s3"@fr)

EquivalentClasses( :B :C )

DatatypeDefinition( :dta xsd:string)

HasKey( :A ( :snonsim  ) ( :ds  ) )

DifferentIndividuals( :c :a )

FunctionalDataProperty( :dr) 
)
