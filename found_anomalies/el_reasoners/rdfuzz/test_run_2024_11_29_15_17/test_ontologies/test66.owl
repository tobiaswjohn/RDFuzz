Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (


Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


DisjointClasses(Annotation(Annotation( :anp :annotation4)  :anr :annotation3) Annotation( :anq :annotation1) Annotation( :ans :annotation2)  ObjectOneOf(:b) DataHasValue(:dr "s3") )

EquivalentDataProperties( :dq :ds )

SameIndividual( :d :c :a )

TransitiveObjectProperty(Annotation(Annotation( :anq :annotation2)  :anr :annotation4)  :rnonsim)

FunctionalDataProperty(Annotation( :anq :annotation2)  :dp)

ObjectPropertyDomain(Annotation(Annotation( :anq :annotation2)  :anr :annotation3) Annotation(Annotation( :anp :annotation1) Annotation( :ans :annotation1)  :anq :annotation1) Annotation( :anr :annotation1)  :qsim DataSomeValuesFrom(:dr DataOneOf("s1"@en) ))

EquivalentClasses( :C ObjectIntersectionOf(ObjectHasValue(:snonsim :b) :B :D ) ObjectSomeValuesFrom(:ssim :A) ObjectHasSelf(:psim) :A )

ObjectPropertyAssertion( :pnonsim :d :a)

DifferentIndividuals(Annotation( :anr :annotation4) Annotation( :anp :annotation3) Annotation(Annotation(Annotation( :anq :annotation3)  :anq :annotation4)  :ans :annotation4)  :a :c :b )

SubClassOf( DataSomeValuesFrom(:ds rdfs:Literal) DataSomeValuesFrom(:dp DataIntersectionOf(xsd:string rdf:PlainLiteral DataOneOf("s2"^^xsd:string)  ) ))

DisjointClasses( ObjectHasValue(:rsim :a) ObjectSomeValuesFrom(:ssim ObjectSomeValuesFrom(:psim ObjectHasValue(:qnonsim :d))) ObjectSomeValuesFrom(:pnonsim ObjectHasValue(:ssim :b)) ObjectSomeValuesFrom(:snonsim DataHasValue(:ds "s4"@no)) DataHasValue(:dp "s3"@de) ObjectHasValue(:qnonsim :a) DataHasValue(:ds "s2"@fr) :C DataSomeValuesFrom(:dp rdf:PlainLiteral) ObjectHasValue(:rsim :a) )

DataPropertyRange(Annotation( :anq :annotation4) Annotation( :anp :annotation4) Annotation(Annotation( :ans :annotation2)  :anp :annotation4) Annotation( :anr :annotation3) Annotation(Annotation(Annotation( :anq :annotation2)  :ans :annotation2) Annotation( :anr :annotation2) Annotation(Annotation( :anp :annotation2)  :anr :annotation4)  :anq :annotation4)  :dq xsd:string)

HasKey( ObjectSomeValuesFrom(:snonsim ObjectIntersectionOf(ObjectSomeValuesFrom(:qsim DataSomeValuesFrom(:dq rdfs:Literal)) ObjectHasValue(:rnonsim :a) )) ( ) ( :dr :dq  ) )

DatatypeDefinition( :dtb DataIntersectionOf(DataOneOf("s1"@no)  DataIntersectionOf(DataIntersectionOf(DataOneOf("s4")  DataOneOf("s4"@en)  )  rdf:PlainLiteral )  DataIntersectionOf(DataOneOf("s1"^^rdf:PlainLiteral)  DataOneOf("s2"^^rdf:PlainLiteral)  )  ) )

SubClassOf(Annotation(Annotation(Annotation(Annotation( :anq :annotation4) Annotation( :anp :annotation1)  :ans :annotation4)  :ans :annotation3) Annotation( :anp :annotation3) Annotation(Annotation( :anp :annotation1)  :anq :annotation1)  :anp :annotation4)  ObjectSomeValuesFrom(:ssim ObjectSomeValuesFrom(:rnonsim DataHasValue(:dr "s4"@fr))) ObjectHasValue(:qnonsim :a))

EquivalentObjectProperties( :qsim :ssim )

DifferentIndividuals( :c :c )

DataPropertyDomain( :dq :A)

ReflexiveObjectProperty( :qnonsim)

ReflexiveObjectProperty( :psim)

ReflexiveObjectProperty( :rnonsim)

ReflexiveObjectProperty( :qnonsim)

TransitiveObjectProperty( :snonsim) 
)
