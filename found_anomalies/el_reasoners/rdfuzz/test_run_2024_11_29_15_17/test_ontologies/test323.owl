Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (


Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


ObjectPropertyAssertion(Annotation(Annotation( :anr :annotation2) Annotation( :ans :annotation1)  :ans :annotation4) Annotation( :anq :annotation2) Annotation( :anp :annotation3)  :pnonsim :c :d)

TransitiveObjectProperty(Annotation( :anq :annotation3) Annotation(Annotation( :anr :annotation1) Annotation( :anr :annotation3) Annotation( :ans :annotation2) Annotation( :anp :annotation2)  :anr :annotation2)  :snonsim)

NegativeObjectPropertyAssertion(Annotation( :ans :annotation1)  :psim :a :b)

DataPropertyRange(Annotation(Annotation( :anq :annotation2)  :anq :annotation3) Annotation( :anp :annotation3)  :dp rdfs:Literal)

DisjointClasses( ObjectSomeValuesFrom(:qsim DataHasValue(:dr "s3"@no)) ObjectHasSelf(:rsim) ObjectIntersectionOf(ObjectOneOf(:b) ObjectHasValue(:ssim :a) DataSomeValuesFrom(:dq DataOneOf("s1") ) :C :D :A :C :B :D DataHasValue(:ds "s2"^^xsd:string) DataSomeValuesFrom(:ds DataIntersectionOf(rdfs:Literal xsd:string xsd:string ) ) DataSomeValuesFrom(:dq rdf:PlainLiteral) ObjectHasValue(:qnonsim :a) ObjectSomeValuesFrom(:rnonsim DataHasValue(:ds "s3"@de)) ObjectHasValue(:psim :b) DataHasValue(:ds "s4"@en) DataHasValue(:dq "s4") DataHasValue(:dp "s3") DataHasValue(:dr "s3") ) ) 
)
