Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (

Annotation(Annotation( :anp :annotation2) Annotation( :ans :annotation1) Annotation( :anq :annotation3)  :anr :annotation4) 
Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


ObjectPropertyAssertion( :qsim :b :d)

HasKey(Annotation( :anr :annotation2)  ObjectIntersectionOf(:B :A ) ( :snonsim :rnonsim  ) ( :dr  ) )

DataPropertyAssertion(Annotation( :anq :annotation4)  :dq :a "s3")

DatatypeDefinition( :dtc xsd:string)

DisjointClasses(Annotation( :anr :annotation3)  ObjectHasValue(:rsim :c) ObjectHasSelf(:psim) ObjectOneOf(:c) DataSomeValuesFrom(:ds DataOneOf("s4"@no) ) DataHasValue(:dp "s2"^^rdfs:Literal) ObjectSomeValuesFrom(:pnonsim :C) :D DataSomeValuesFrom(:dq DataIntersectionOf(DataOneOf("s1"@fr)  rdf:PlainLiteral DataOneOf("s3"@de)  ) ) ObjectSomeValuesFrom(:ssim ObjectHasValue(:qnonsim :d)) ObjectHasValue(:psim :c) ObjectHasValue(:qsim :d) DataHasValue(:dr "s4"@en) DataHasValue(:dp "s1"@de) DataHasValue(:dr "s3"@en) DataHasValue(:dq "s2") ObjectIntersectionOf(DataHasValue(:dp "s3") ObjectOneOf(:a) ) ObjectSomeValuesFrom(:snonsim ObjectHasValue(:qsim :c)) ) 
)
