Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (

Annotation(Annotation(Annotation( :ans :annotation3)  :anq :annotation4) Annotation( :anp :annotation2) Annotation( :ans :annotation4) Annotation( :anr :annotation3)  :ans :annotation1) 
Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


DisjointClasses(Annotation(Annotation( :anr :annotation2)  :anr :annotation1)  ObjectOneOf(:b) ObjectHasSelf(:ssim) )

DatatypeDefinition(Annotation(Annotation( :ans :annotation1) Annotation( :anr :annotation2) Annotation( :anp :annotation3)  :ans :annotation3)  :dtc DataIntersectionOf(rdfs:Literal xsd:string DataOneOf("s2"@no)  ) )

HasKey(Annotation(Annotation( :anp :annotation1)  :anr :annotation2)  DataSomeValuesFrom(:dq rdf:PlainLiteral) ( ) ( :dp :ds  ) )

ObjectPropertyAssertion( :rsim :c :d)

SubClassOf( ObjectSomeValuesFrom(:qnonsim :B) ObjectIntersectionOf(DataHasValue(:dr "s3") ObjectHasValue(:snonsim :a) :C :D :A :C DataHasValue(:ds "s1"^^xsd:string) ObjectHasValue(:pnonsim :b) ObjectHasValue(:psim :b) ObjectHasValue(:rnonsim :d) ObjectSomeValuesFrom(:qsim ObjectHasValue(:rnonsim :c)) DataHasValue(:ds "s4"@fr) DataHasValue(:dp "s1"@en) DataHasValue(:ds "s4"@de) DataHasValue(:ds "s4") DataHasValue(:ds "s2") )) 
)
