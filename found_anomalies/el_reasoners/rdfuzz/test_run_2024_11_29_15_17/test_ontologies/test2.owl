Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (

Annotation(Annotation(Annotation( :ans :annotation2)  :anq :annotation1) Annotation( :anp :annotation1) Annotation( :ans :annotation3) Annotation( :anq :annotation1)  :anr :annotation4) 
Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


ObjectPropertyAssertion( :pnonsim :a :d)

DisjointClasses( ObjectHasValue(:ssim :c) ObjectIntersectionOf(ObjectOneOf(:b) DataHasValue(:dq "s1"^^rdfs:Literal) :D ObjectSomeValuesFrom(:rnonsim :A) DataSomeValuesFrom(:ds DataIntersectionOf(DataOneOf("s2")  rdf:PlainLiteral xsd:string ) ) :B :D :C DataHasValue(:dp "s3"@en) DataHasValue(:dr "s4"@fr) DataHasValue(:ds "s1"@de) ObjectSomeValuesFrom(:snonsim ObjectHasValue(:rsim :c)) ObjectSomeValuesFrom(:qsim ObjectHasValue(:qnonsim :a)) ObjectSomeValuesFrom(:rsim DataHasValue(:ds "s2"@no)) DataHasValue(:ds "s3"@en) DataHasValue(:dp "s1"@en) ObjectHasValue(:ssim :a) ObjectHasSelf(:qsim) ) ObjectHasSelf(:psim) )

NegativeDataPropertyAssertion( :dr :a "s3"@de)

EquivalentClasses(Annotation(Annotation( :anp :annotation1)  :ans :annotation3)  ObjectHasValue(:qnonsim :d) DataSomeValuesFrom(:dq DataOneOf("s1"@de) ) )

DatatypeDefinition( :dtc DataIntersectionOf(DataIntersectionOf(DataOneOf("s1"^^rdf:PlainLiteral)  DataIntersectionOf(DataOneOf("s1"^^rdf:PlainLiteral)  DataOneOf("s2"^^rdfs:Literal)  )  )  xsd:string ) ) 
)
