Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (

Annotation( :ans :annotation1) Annotation( :anp :annotation2) Annotation( :anq :annotation4) Annotation( :anr :annotation3) 
Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


HasKey( ObjectHasSelf(:psim) ( :snonsim :rsim  ) ( ) )

SubClassOf(Annotation(Annotation(Annotation( :anp :annotation1)  :ans :annotation3)  :anp :annotation4)  ObjectIntersectionOf(ObjectHasValue(:pnonsim :c) DataSomeValuesFrom(:dq DataIntersectionOf(DataOneOf("s1"@fr)  xsd:string rdfs:Literal ) ) ) DataHasValue(:ds "s2"))

HasKey(Annotation( :ans :annotation1)  :A ( ) ( :dp :dr  ) )

SameIndividual(Annotation( :ans :annotation1)  :b :d :a )

DisjointClasses(Annotation( :anr :annotation1)  ObjectOneOf(:c) :B ObjectSomeValuesFrom(:ssim :C) :D DataHasValue(:dp "s4"^^rdf:PlainLiteral) ObjectSomeValuesFrom(:qnonsim ObjectHasValue(:rnonsim :a)) ObjectSomeValuesFrom(:pnonsim ObjectSomeValuesFrom(:qsim DataHasValue(:dq "s3"@de))) ObjectHasValue(:ssim :d) ObjectHasValue(:snonsim :c) DataHasValue(:dp "s2"@en) DataHasValue(:dq "s3"@en) DataHasValue(:dq "s2"@no) ObjectHasSelf(:psim) ObjectSomeValuesFrom(:rnonsim DataHasValue(:ds "s1")) ObjectHasSelf(:psim) )

FunctionalDataProperty( :dq)

ObjectPropertyRange(Annotation( :anq :annotation3)  :pnonsim :A)

DataPropertyRange( :dq xsd:string)

ObjectPropertyAssertion( :rsim :d :b)

EquivalentClasses( ObjectOneOf(:a) :D )

TransitiveObjectProperty(Annotation( :anq :annotation1) Annotation(Annotation( :ans :annotation1) Annotation( :anp :annotation2)  :anq :annotation2) Annotation( :anp :annotation4) Annotation( :ans :annotation4)  :pnonsim) 
)
