Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (

Annotation(Annotation(Annotation( :anq :annotation1) Annotation( :anr :annotation3)  :anr :annotation4) Annotation( :ans :annotation3) Annotation( :ans :annotation3) Annotation( :ans :annotation3)  :anp :annotation2) 
Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


ObjectPropertyAssertion(Annotation( :ans :annotation4)  :ssim :d :a)

EquivalentObjectProperties( :pnonsim :qnonsim )

ClassAssertion( ObjectIntersectionOf(ObjectHasSelf(:psim) DataSomeValuesFrom(:dr DataOneOf("s2"^^rdfs:Literal) ) ) :c)

ReflexiveObjectProperty(Annotation(Annotation( :anr :annotation3)  :anr :annotation1)  :snonsim)

DisjointClasses( ObjectOneOf(:b) DataHasValue(:dp "s1") :B ObjectSomeValuesFrom(:rsim :D) ObjectHasValue(:qsim :d) :A :C DataSomeValuesFrom(:dq DataIntersectionOf(xsd:string rdf:PlainLiteral rdf:PlainLiteral ) ) DataHasValue(:ds "s4"@en) DataHasValue(:dp "s3"@fr) ObjectSomeValuesFrom(:rnonsim DataHasValue(:ds "s3"@de)) ObjectHasValue(:pnonsim :c) ObjectHasValue(:qsim :d) DataHasValue(:dq "s2"@no) DataHasValue(:dr "s3") DataHasValue(:dq "s1"^^xsd:string) DataHasValue(:dp "s2"^^rdfs:Literal) DataHasValue(:dp "s3") ) 
)
