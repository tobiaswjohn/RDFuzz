Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (

Annotation(Annotation(Annotation( :anr :annotation2) Annotation( :anq :annotation3)  :anq :annotation3) Annotation(Annotation( :anr :annotation3)  :anp :annotation1) Annotation( :anq :annotation4) Annotation( :anq :annotation2)  :ans :annotation4) 
Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


DatatypeDefinition( :dta rdfs:Literal)

ObjectPropertyAssertion(Annotation(Annotation( :ans :annotation1)  :ans :annotation1) Annotation(Annotation(Annotation(Annotation( :anr :annotation4)  :anq :annotation4)  :anr :annotation1)  :ans :annotation3) Annotation( :anr :annotation2)  :rnonsim :a :d)

DisjointClasses( ObjectSomeValuesFrom(:rsim ObjectOneOf(:b)) DataHasValue(:dp "s4"@fr) )

EquivalentDataProperties( :dq :dr :ds )

EquivalentClasses(Annotation( :anq :annotation2)  ObjectHasSelf(:psim) DataSomeValuesFrom(:dr rdf:PlainLiteral) :B :C :D )

ObjectPropertyAssertion( :snonsim :c :c)

HasKey( ObjectIntersectionOf(ObjectHasValue(:qsim :d) :D ObjectHasValue(:ssim :d) :A DataHasValue(:dp "s1") DataHasValue(:dp "s3"^^xsd:string) DataSomeValuesFrom(:dr DataOneOf("s2"@no) ) DataSomeValuesFrom(:dp DataIntersectionOf(rdfs:Literal rdf:PlainLiteral ) ) DataSomeValuesFrom(:dp DataIntersectionOf(xsd:string xsd:string ) ) DataSomeValuesFrom(:dp rdf:PlainLiteral) DataSomeValuesFrom(:dp xsd:string) ) ( :pnonsim :qnonsim  ) ( :dp  ) )

SubClassOf(Annotation( :anp :annotation1)  DataHasValue(:ds "s2"@en) DataHasValue(:ds "s2"@de)) 
)
