Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (


Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


ObjectPropertyAssertion(Annotation(Annotation( :anp :annotation3) Annotation( :anq :annotation1)  :ans :annotation4) Annotation( :anr :annotation2) Annotation( :anr :annotation2) Annotation( :ans :annotation4) Annotation( :anr :annotation4)  :ssim :c :d)

ObjectPropertyAssertion( :rnonsim :b :a)

EquivalentClasses( ObjectSomeValuesFrom(:snonsim DataHasValue(:dq "s2"@no)) ObjectIntersectionOf(:D ObjectHasSelf(:psim) DataSomeValuesFrom(:dr DataIntersectionOf(DataOneOf("s3")  xsd:string ) ) ObjectOneOf(:b) :C :A :C :B DataHasValue(:dp "s4"^^rdf:PlainLiteral) DataSomeValuesFrom(:ds rdfs:Literal) ObjectHasValue(:qsim :c) ObjectSomeValuesFrom(:pnonsim ObjectHasValue(:psim :b)) ObjectHasValue(:rsim :a) DataHasValue(:dq "s1"@de) DataHasValue(:dq "s4"@en) DataHasValue(:dr "s1"@fr) DataSomeValuesFrom(:ds DataIntersectionOf(rdf:PlainLiteral rdf:PlainLiteral rdfs:Literal ) ) DataSomeValuesFrom(:dq xsd:string) :C :A :D ) ObjectHasValue(:qnonsim :c) )

DatatypeDefinition( :dta rdf:PlainLiteral)

HasKey( :C ( :qsim  ) ( ) )

DataPropertyAssertion( :dr :c "s2")

FunctionalDataProperty( :dq)

ReflexiveObjectProperty( :qnonsim)

TransitiveObjectProperty( :rnonsim)

FunctionalDataProperty( :dq)

TransitiveObjectProperty( :snonsim) 
)
