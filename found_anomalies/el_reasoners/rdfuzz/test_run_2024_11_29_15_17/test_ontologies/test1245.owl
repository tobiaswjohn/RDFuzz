Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (


Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


ObjectPropertyAssertion(Annotation(Annotation( :anr :annotation3) Annotation( :anr :annotation3)  :ans :annotation2) Annotation( :anp :annotation1) Annotation( :anq :annotation4) Annotation( :anq :annotation4)  :qsim :a :c)

ReflexiveObjectProperty( :qnonsim)

ObjectPropertyAssertion( :psim :d :b)

DataPropertyAssertion( :ds :a "s2"^^xsd:string)

NegativeObjectPropertyAssertion( :rnonsim :c :c)

TransitiveObjectProperty(Annotation(Annotation(Annotation( :anr :annotation3)  :anq :annotation1)  :anq :annotation1)  :snonsim)

DisjointClasses(Annotation( :anp :annotation1)  DataHasValue(:dp "s4") ObjectIntersectionOf(ObjectSomeValuesFrom(:ssim ObjectHasValue(:pnonsim :c)) :A DataSomeValuesFrom(:dr DataOneOf("s3"@fr) ) ObjectOneOf(:a) ObjectHasSelf(:rsim) :D :C :B DataSomeValuesFrom(:dq rdfs:Literal) DataSomeValuesFrom(:ds DataIntersectionOf(rdf:PlainLiteral xsd:string rdf:PlainLiteral ) ) DataSomeValuesFrom(:ds rdf:PlainLiteral) DataSomeValuesFrom(:ds rdfs:Literal) DataSomeValuesFrom(:dq rdf:PlainLiteral) ) )

ClassAssertion( DataHasValue(:dq "s1"@en) :a) 
)
