Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (


Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


NegativeObjectPropertyAssertion(Annotation(Annotation( :ans :annotation3) Annotation( :anq :annotation3)  :anr :annotation2) Annotation( :anq :annotation4) Annotation( :anp :annotation1) Annotation( :anq :annotation4)  :rsim :a :b)

ObjectPropertyAssertion( :snonsim :c :d)

DisjointClasses( ObjectSomeValuesFrom(:qnonsim ObjectIntersectionOf(:D ObjectOneOf(:c) ObjectHasSelf(:ssim) :A DataSomeValuesFrom(:dr rdf:PlainLiteral) :C :B DataHasValue(:ds "s4") DataHasValue(:dp "s3"^^xsd:string) DataSomeValuesFrom(:dq DataOneOf("s1"@de) ) DataSomeValuesFrom(:dr DataIntersectionOf(rdfs:Literal DataIntersectionOf(xsd:string xsd:string )  rdfs:Literal ) ) DataSomeValuesFrom(:dq DataIntersectionOf(xsd:string xsd:string ) ) ObjectHasValue(:rnonsim :a) ObjectHasValue(:psim :c) )) DataHasValue(:ds "s2"@no) ObjectHasValue(:qsim :a) )

SameIndividual( :d :b )

DatatypeDefinition( :dtb xsd:string)

EquivalentClasses( :D :C )

FunctionalDataProperty( :ds)

HasKey( :A ( :pnonsim  ) ( ) ) 
)
