Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (


Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


ObjectPropertyAssertion(Annotation(Annotation( :anp :annotation2) Annotation( :anq :annotation1)  :anr :annotation1) Annotation(Annotation( :anr :annotation4)  :ans :annotation3) Annotation( :anq :annotation2)  :ssim :a :d)

EquivalentClasses( DataSomeValuesFrom(:dr DataIntersectionOf(rdfs:Literal DataOneOf("s3"^^xsd:string)  ) ) ObjectHasSelf(:psim) )

DatatypeDefinition(Annotation( :anr :annotation2)  :dtb rdf:PlainLiteral)

HasKey( ObjectSomeValuesFrom(:pnonsim ObjectOneOf(:b)) ( ) ( :ds :dq  ) )

HasKey(Annotation( :anq :annotation1)  ObjectIntersectionOf(ObjectHasValue(:qnonsim :c) :A DataHasValue(:dp "s1"@en) :B :C :D DataHasValue(:dq "s2") ObjectHasValue(:qsim :d) ObjectHasValue(:rsim :b) ObjectSomeValuesFrom(:rnonsim ObjectHasValue(:pnonsim :d)) DataHasValue(:dr "s4"@no) DataHasValue(:ds "s4"@de) DataHasValue(:dp "s4"@fr) DataHasValue(:ds "s4") :D :C :D ) ( :snonsim  ) ( ) ) 
)
