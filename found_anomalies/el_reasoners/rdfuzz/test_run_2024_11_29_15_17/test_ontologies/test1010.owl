Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (


Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


HasKey(Annotation( :anp :annotation2) Annotation( :ans :annotation1) Annotation( :anr :annotation4)  :B ( ) ( :dq :ds  ) )

SameIndividual(Annotation( :anq :annotation3) Annotation(Annotation( :anr :annotation1)  :anp :annotation1) Annotation( :anq :annotation3) Annotation( :anq :annotation3)  :b :a :c )

HasKey( ObjectHasSelf(:rsim) ( :psim  ) ( ) )

ObjectPropertyAssertion(Annotation( :anp :annotation3) Annotation( :anr :annotation2) Annotation( :anq :annotation3) Annotation( :anq :annotation1)  :rnonsim :d :b)

DisjointClasses( ObjectHasValue(:pnonsim :a) ObjectSomeValuesFrom(:qnonsim DataHasValue(:dp "s2"@de)) ObjectIntersectionOf(ObjectOneOf(:c) DataSomeValuesFrom(:dr xsd:string) :A :D :C DataSomeValuesFrom(:dp DataIntersectionOf(DataOneOf("s1"@no)  DataOneOf("s4")  ) ) DataHasValue(:dr "s3"^^rdf:PlainLiteral) DataHasValue(:dp "s1") ObjectSomeValuesFrom(:qsim ObjectHasValue(:ssim :c)) DataHasValue(:dp "s3"@fr) ObjectSomeValuesFrom(:snonsim DataSomeValuesFrom(:dr rdfs:Literal)) :B :A :D ) ) 
)
