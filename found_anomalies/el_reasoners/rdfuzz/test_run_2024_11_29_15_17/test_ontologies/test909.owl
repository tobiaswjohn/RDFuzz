Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (

Annotation(Annotation(Annotation( :ans :annotation2)  :anq :annotation1) Annotation(Annotation( :anr :annotation3)  :anp :annotation3) Annotation( :anr :annotation1) Annotation( :anr :annotation2)  :anr :annotation4) 
Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


SubClassOf( ObjectIntersectionOf(ObjectOneOf(:d) DataHasValue(:dr "s2"^^xsd:string) ObjectHasSelf(:ssim) ) ObjectSomeValuesFrom(:qnonsim ObjectHasValue(:psim :c)))

DifferentIndividuals( :a :b :d )

DataPropertyDomain( :dq DataSomeValuesFrom(:ds DataIntersectionOf(DataOneOf("s1")  rdf:PlainLiteral rdfs:Literal ) ))

HasKey( :B ( :rnonsim  ) ( :dp  ) )

ObjectPropertyAssertion(Annotation(Annotation( :anr :annotation2) Annotation( :ans :annotation4)  :ans :annotation1)  :rsim :b :c)

EquivalentClasses(Annotation( :anp :annotation1)  :D :A :C DataHasValue(:dp "s3"@en) DataHasValue(:dp "s4"@de) ObjectHasValue(:snonsim :c) ObjectSomeValuesFrom(:qsim ObjectHasValue(:pnonsim :c)) ObjectHasValue(:qnonsim :a) ObjectSomeValuesFrom(:rnonsim DataHasValue(:dq "s2"@no)) DataHasValue(:dr "s2") DataHasValue(:ds "s1") DataHasValue(:dp "s2") :A )

ReflexiveObjectProperty( :rnonsim)

ObjectPropertyDomain( :pnonsim DataHasValue(:dp "s3"@fr)) 
)
