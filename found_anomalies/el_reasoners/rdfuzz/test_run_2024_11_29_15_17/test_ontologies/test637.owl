Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (

Annotation(Annotation( :ans :annotation1) Annotation( :anp :annotation3) Annotation( :anq :annotation4) Annotation( :ans :annotation2)  :anr :annotation4) 
Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


SubDataPropertyOf( :ds :dq)

SubClassOf(Annotation(Annotation( :anp :annotation4)  :anr :annotation1)  ObjectSomeValuesFrom(:qnonsim :C) DataSomeValuesFrom(:dp DataIntersectionOf(rdfs:Literal DataOneOf("s4"@no)  xsd:string ) ))

ObjectPropertyAssertion( :psim :b :a)

DataPropertyDomain( :dr DataHasValue(:dq "s3"))

DisjointClasses( ObjectHasValue(:snonsim :c) ObjectHasSelf(:qsim) ObjectIntersectionOf(:B ObjectOneOf(:d) :D :A DataHasValue(:ds "s1"^^rdf:PlainLiteral) DataHasValue(:dq "s2"@fr) DataHasValue(:dr "s4"@de) ObjectSomeValuesFrom(:rsim ObjectSomeValuesFrom(:rnonsim ObjectHasValue(:ssim :c))) ObjectHasValue(:pnonsim :c) ObjectSomeValuesFrom(:rsim ObjectHasValue(:pnonsim :a)) ObjectHasValue(:snonsim :b) DataHasValue(:ds "s4"@en) DataHasValue(:dp "s2") ObjectHasValue(:rnonsim :c) ) ) 
)
