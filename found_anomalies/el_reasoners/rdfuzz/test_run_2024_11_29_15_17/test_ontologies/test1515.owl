Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (


Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


ObjectPropertyAssertion(Annotation(Annotation( :ans :annotation2)  :anq :annotation4) Annotation( :anp :annotation1) Annotation( :anr :annotation4) Annotation( :anp :annotation3)  :qsim :b :d)

ObjectPropertyAssertion(Annotation(Annotation(Annotation(Annotation( :anr :annotation3) Annotation( :anr :annotation4)  :anq :annotation2) Annotation( :ans :annotation2) Annotation( :anr :annotation2)  :ans :annotation2)  :ans :annotation1)  :qnonsim :a :c)

ObjectPropertyAssertion(Annotation( :anq :annotation1)  :snonsim :b :b)

HasKey(Annotation( :anq :annotation2)  DataSomeValuesFrom(:dp DataIntersectionOf(DataOneOf("s4"@fr)  xsd:string rdfs:Literal ) ) ( :ssim :psim  ) ( :dr :dq  ) )

DisjointClasses( ObjectHasSelf(:rsim) ObjectIntersectionOf(:A ObjectSomeValuesFrom(:pnonsim :C) ObjectHasValue(:rnonsim :d) ObjectOneOf(:b) DataHasValue(:ds "s1"^^rdf:PlainLiteral) :B :D :B DataHasValue(:dp "s2") DataHasValue(:dr "s3"@no) DataHasValue(:dq "s1"@de) DataHasValue(:ds "s3"@en) DataHasValue(:dp "s3") DataHasValue(:dq "s4"^^xsd:string) ObjectSomeValuesFrom(:snonsim ObjectOneOf(:d)) ) ) 
)
