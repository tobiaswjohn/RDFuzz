Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (

Annotation(Annotation(Annotation( :anr :annotation1) Annotation( :anq :annotation4) Annotation( :ans :annotation4)  :ans :annotation1) Annotation( :anq :annotation2)  :anp :annotation3) 
Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


DisjointClasses( ObjectOneOf(:c) ObjectHasSelf(:rsim) :D )

ObjectPropertyAssertion( :snonsim :b :a)

EquivalentDataProperties(Annotation(Annotation( :anq :annotation2)  :anp :annotation3)  :ds :dp )

SubClassOf( ObjectIntersectionOf(DataHasValue(:dr "s2"@fr) ObjectHasValue(:qnonsim :d) :A :C :B DataHasValue(:dp "s1") DataHasValue(:dp "s4"@de) DataHasValue(:dq "s4"@no) ObjectHasValue(:qsim :d) ObjectSomeValuesFrom(:rnonsim ObjectSomeValuesFrom(:pnonsim ObjectHasValue(:qnonsim :d))) ObjectSomeValuesFrom(:ssim DataSomeValuesFrom(:dr xsd:string)) ObjectSomeValuesFrom(:qnonsim :D) ObjectSomeValuesFrom(:rsim :D) ObjectHasValue(:qsim :b) :C ) ObjectSomeValuesFrom(:psim DataSomeValuesFrom(:dq DataIntersectionOf(rdf:PlainLiteral DataOneOf("s3"^^rdfs:Literal)  ) )))

HasKey( DataSomeValuesFrom(:dp DataIntersectionOf(DataOneOf("s3"@en)  DataOneOf("s1"@en)  DataOneOf("s4"^^rdf:PlainLiteral)  DataOneOf("s2"@no)  DataOneOf("s2")  ) ) ( :ssim :qsim  ) ( ) ) 
)
