Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (


Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


DatatypeDefinition(Annotation(Annotation(Annotation( :anr :annotation4)  :anq :annotation4) Annotation( :anr :annotation2)  :anp :annotation1) Annotation( :ans :annotation2) Annotation( :anr :annotation3)  :dta DataIntersectionOf(DataOneOf("s3"@fr)  xsd:string rdf:PlainLiteral ) )

HasKey(Annotation(Annotation( :ans :annotation4)  :anr :annotation3) Annotation( :anq :annotation2)  ObjectOneOf(:a) ( :qsim  ) ( :dr :ds  ) )

HasKey(Annotation(Annotation( :ans :annotation2)  :anq :annotation1)  ObjectHasSelf(:psim) ( ) ( :dq :dp :dr :ds :dq  ) )

ObjectPropertyAssertion( :qnonsim :b :d)

EquivalentClasses( ObjectSomeValuesFrom(:pnonsim ObjectIntersectionOf(DataHasValue(:dq "s2"^^rdfs:Literal) :A DataSomeValuesFrom(:dq DataOneOf("s4") ) :C :D :B :D ObjectHasValue(:rnonsim :d) ObjectHasValue(:rsim :a) ObjectHasValue(:snonsim :a) ObjectSomeValuesFrom(:rnonsim DataHasValue(:dq "s1"@no)) ObjectHasValue(:pnonsim :a) DataHasValue(:dp "s1"@de) DataHasValue(:dp "s3"@en) DataHasValue(:ds "s3"@en) DataHasValue(:ds "s2") ObjectOneOf(:d) ObjectHasSelf(:psim) )) ObjectHasValue(:ssim :c) ) 
)
