Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (


Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


DatatypeDefinition(Annotation(Annotation( :ans :annotation1)  :anq :annotation4) Annotation( :anp :annotation2) Annotation( :anq :annotation1) Annotation( :anr :annotation3)  :dtc DataIntersectionOf(DataOneOf("s2")  xsd:string rdf:PlainLiteral ) )

ObjectPropertyAssertion(Annotation( :anr :annotation1) Annotation(Annotation(Annotation( :ans :annotation2)  :ans :annotation1)  :anq :annotation2)  :qsim :c :d)

SubDataPropertyOf( :dp :dq)

SameIndividual( :a :b :b )

EquivalentClasses( ObjectIntersectionOf(:B DataSomeValuesFrom(:dr rdfs:Literal) ) ObjectHasSelf(:ssim) ObjectSomeValuesFrom(:snonsim DataHasValue(:ds "s4"@de)) ObjectHasValue(:qnonsim :a) ObjectOneOf(:d) :A :C :A :D DataHasValue(:dq "s3"^^rdfs:Literal) DataHasValue(:ds "s1"@no) ObjectSomeValuesFrom(:pnonsim ObjectHasValue(:psim :a)) ObjectHasValue(:rsim :b) ObjectHasValue(:rnonsim :d) ObjectHasValue(:qsim :a) ObjectSomeValuesFrom(:pnonsim DataHasValue(:dq "s2"@fr)) DataHasValue(:dq "s3") DataHasValue(:ds "s4") DataHasValue(:dr "s4") ) 
)
