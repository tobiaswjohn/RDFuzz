Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (


Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


HasKey(Annotation(Annotation( :anr :annotation2) Annotation( :ans :annotation3)  :anq :annotation4) Annotation(Annotation( :anq :annotation1) Annotation( :anp :annotation2)  :anp :annotation1) Annotation( :ans :annotation3)  ObjectHasValue(:qnonsim :c) ( ) ( :dr :dq  ) )

HasKey(Annotation( :anr :annotation3) Annotation( :anr :annotation3)  :D ( :psim :rsim  ) ( ) )

EquivalentClasses( DataHasValue(:ds "s1"^^rdfs:Literal) ObjectSomeValuesFrom(:pnonsim ObjectIntersectionOf(ObjectHasSelf(:ssim) DataSomeValuesFrom(:dp DataIntersectionOf(xsd:string DataOneOf("s3"@de)  ) ) ObjectOneOf(:d) :A :B ObjectHasValue(:rnonsim :a) :C :A ObjectOneOf(:b) ObjectOneOf(:a) DataHasValue(:dp "s4") DataHasValue(:dp "s2"@no) ObjectSomeValuesFrom(:pnonsim DataSomeValuesFrom(:ds rdf:PlainLiteral)) ObjectSomeValuesFrom(:qsim ObjectSomeValuesFrom(:snonsim DataSomeValuesFrom(:dq DataIntersectionOf(DataOneOf("s4")  DataOneOf("s1")  rdf:PlainLiteral rdf:PlainLiteral ) ))) ObjectHasValue(:rnonsim :b) DataSomeValuesFrom(:dq rdf:PlainLiteral) DataHasValue(:dq "s1") )) )

ObjectPropertyAssertion( :ssim :a :b)

NegativeDataPropertyAssertion( :ds :b "s1"@en) 
)
