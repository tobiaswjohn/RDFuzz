Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (


Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


SubDataPropertyOf(Annotation(Annotation( :ans :annotation2)  :anp :annotation4) Annotation( :anq :annotation1) Annotation( :anr :annotation3) Annotation( :anq :annotation2)  :dp :dr)

ObjectPropertyAssertion( :snonsim :d :c)

SubClassOf(Annotation( :ans :annotation3) Annotation( :ans :annotation3)  ObjectIntersectionOf(:C :B :A ) ObjectHasSelf(:rsim))

DatatypeDefinition( :dta DataOneOf("s2"@no) )

DisjointClasses( DataSomeValuesFrom(:dq DataIntersectionOf(xsd:string rdf:PlainLiteral rdfs:Literal ) ) ObjectHasValue(:ssim :a) ObjectOneOf(:b) DataHasValue(:ds "s4") ObjectSomeValuesFrom(:qnonsim DataHasValue(:dr "s3"^^rdfs:Literal)) :D DataHasValue(:dp "s1"@en) ObjectSomeValuesFrom(:rnonsim ObjectHasValue(:qsim :b)) ObjectHasValue(:psim :c) ObjectHasValue(:pnonsim :d) ObjectSomeValuesFrom(:qnonsim DataHasValue(:dq "s4"@de)) ObjectSomeValuesFrom(:snonsim DataHasValue(:dr "s3"@fr)) DataHasValue(:ds "s4"@de) DataHasValue(:ds "s3") DataHasValue(:dr "s3") ) 
)
