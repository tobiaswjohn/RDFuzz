Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (


Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


ObjectPropertyAssertion(Annotation(Annotation( :anq :annotation4) Annotation( :anp :annotation3)  :anr :annotation3) Annotation(Annotation( :ans :annotation3) Annotation( :anp :annotation1)  :ans :annotation2) Annotation( :anp :annotation2)  :snonsim :a :b)

DifferentIndividuals( :d :c )

EquivalentClasses( DataSomeValuesFrom(:dq DataOneOf("s3") ) ObjectSomeValuesFrom(:ssim ObjectIntersectionOf(ObjectOneOf(:c) DataHasValue(:ds "s1"^^rdf:PlainLiteral) :B ObjectHasValue(:rnonsim :a) :D :A :C DataSomeValuesFrom(:dp DataIntersectionOf(rdfs:Literal xsd:string DataOneOf("s2"@de)  ) ) DataSomeValuesFrom(:dr xsd:string) ObjectHasValue(:rsim :a) DataHasValue(:ds "s4"@en) ObjectSomeValuesFrom(:pnonsim ObjectHasValue(:psim :c)) ObjectSomeValuesFrom(:qnonsim ObjectHasValue(:qsim :c)) ObjectSomeValuesFrom(:qnonsim ObjectHasValue(:ssim :a)) ObjectHasValue(:psim :a) ObjectSomeValuesFrom(:qnonsim DataHasValue(:ds "s2"@fr)) DataHasValue(:dp "s1"@no) :B DataSomeValuesFrom(:dq DataIntersectionOf(rdf:PlainLiteral rdf:PlainLiteral ) ) )) ObjectHasSelf(:qsim) )

DatatypeDefinition( :dtb xsd:string)

DataPropertyDomain( :ds :C)

TransitiveObjectProperty( :qnonsim)

ClassAssertion( :D :b)

TransitiveObjectProperty( :qnonsim)

DisjointClasses( :B :C )

ReflexiveObjectProperty( :rnonsim)

TransitiveObjectProperty( :snonsim) 
)
