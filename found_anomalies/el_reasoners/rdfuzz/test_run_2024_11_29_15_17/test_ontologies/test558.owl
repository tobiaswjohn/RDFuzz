Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (


Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


ObjectPropertyRange(Annotation( :anq :annotation2) Annotation( :anr :annotation1) Annotation( :ans :annotation3) Annotation( :anp :annotation4)  :ssim :A)

SameIndividual( :a :d :c )

TransitiveObjectProperty( :snonsim)

SubClassOf( ObjectHasSelf(:psim) DataHasValue(:ds "s4"^^rdf:PlainLiteral))

DisjointClasses( ObjectIntersectionOf(DataSomeValuesFrom(:dq rdfs:Literal) ObjectSomeValuesFrom(:qsim :B) :D DataSomeValuesFrom(:dp DataIntersectionOf(xsd:string DataOneOf("s3")  DataOneOf("s1"@de)  ) ) DataSomeValuesFrom(:dr DataOneOf("s2"@en) ) :C DataHasValue(:dr "s3"@fr) ObjectHasValue(:rnonsim :b) ObjectHasValue(:rsim :a) ObjectSomeValuesFrom(:pnonsim DataHasValue(:dp "s3"@no)) ObjectHasValue(:ssim :c) :B DataHasValue(:dp "s1"@de) DataHasValue(:ds "s2"@de) ObjectOneOf(:a) :C ) ObjectHasValue(:qnonsim :b) ObjectOneOf(:b) )

ObjectPropertyAssertion( :rsim :a :a)

DatatypeDefinition(Annotation(Annotation( :anr :annotation2) Annotation(Annotation( :anp :annotation4) Annotation( :anq :annotation2) Annotation( :anp :annotation1)  :anp :annotation1) Annotation( :anp :annotation4) Annotation( :anr :annotation3)  :anr :annotation4)  :dtc xsd:string)

HasKey( ObjectHasValue(:qnonsim :c) ( :rnonsim :rsim  ) ( ) ) 
)
