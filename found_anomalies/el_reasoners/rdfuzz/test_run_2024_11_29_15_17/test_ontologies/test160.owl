Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (

Annotation(Annotation(Annotation( :ans :annotation3)  :anp :annotation4) Annotation(Annotation( :anp :annotation1)  :ans :annotation2) Annotation( :anq :annotation1) Annotation( :ans :annotation3)  :anr :annotation3) 
Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


DatatypeDefinition( :dtb DataIntersectionOf(DataOneOf("s3"^^xsd:string)  rdfs:Literal rdf:PlainLiteral ) )

ReflexiveObjectProperty( :ssim)

DisjointClasses(Annotation(Annotation(Annotation( :anr :annotation3) Annotation( :anr :annotation2) Annotation( :ans :annotation4) Annotation( :anq :annotation4) Annotation( :ans :annotation1)  :anp :annotation3) Annotation(Annotation(Annotation( :anp :annotation3)  :ans :annotation1)  :anp :annotation4)  :anp :annotation1)  DataHasValue(:ds "s1"@fr) DataSomeValuesFrom(:dq DataOneOf("s4") ) )

FunctionalDataProperty( :dp)

ObjectPropertyAssertion( :pnonsim :d :c)

DatatypeDefinition( :dtc DataOneOf("s2"@de) )

HasKey( ObjectSomeValuesFrom(:rsim ObjectIntersectionOf(:D ObjectOneOf(:b) ObjectHasSelf(:psim) ObjectHasValue(:snonsim :a) :A :C :B ObjectSomeValuesFrom(:qnonsim ObjectSomeValuesFrom(:rnonsim ObjectSomeValuesFrom(:rsim ObjectHasValue(:qsim :d)))) ObjectSomeValuesFrom(:psim ObjectHasValue(:rnonsim :a)) ObjectHasValue(:rnonsim :c) DataHasValue(:dr "s2"@no) DataHasValue(:dr "s1"@en) DataHasValue(:dp "s4"^^xsd:string) DataHasValue(:dq "s2") DataHasValue(:dq "s3"@de) :C :B )) ( ) ( :dr  ) )

HasKey( :B ( :ssim :snonsim  ) ( ) ) 
)
