Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (

Annotation(Annotation(Annotation( :anq :annotation2) Annotation( :anp :annotation3)  :anp :annotation1) Annotation( :anq :annotation3) Annotation( :ans :annotation4) Annotation( :anr :annotation2)  :anr :annotation2) 
Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


DisjointClasses( ObjectHasValue(:snonsim :b) DataSomeValuesFrom(:dr DataOneOf("s4"^^rdf:PlainLiteral) ) ObjectSomeValuesFrom(:qsim :B) )

ObjectPropertyAssertion(Annotation( :ans :annotation2)  :pnonsim :c :d)

EquivalentClasses(Annotation( :ans :annotation1) Annotation( :ans :annotation3)  ObjectOneOf(:a) DataHasValue(:dp "s1") :A :D :C )

DatatypeDefinition(Annotation( :anp :annotation4)  :dtb DataIntersectionOf(xsd:string rdfs:Literal ) )

SubClassOf( ObjectHasSelf(:psim) ObjectIntersectionOf(DataHasValue(:ds "s3"@fr) ObjectHasSelf(:rsim) DataHasValue(:dq "s2"@en) DataHasValue(:dq "s1"@de) ObjectSomeValuesFrom(:qnonsim ObjectSomeValuesFrom(:ssim ObjectHasValue(:rnonsim :b))) ObjectSomeValuesFrom(:rnonsim ObjectHasValue(:ssim :b)) ObjectSomeValuesFrom(:ssim DataSomeValuesFrom(:dr DataIntersectionOf(DataOneOf("s2")  DataOneOf("s1")  DataOneOf("s3")  ) )) ObjectSomeValuesFrom(:qnonsim DataSomeValuesFrom(:dp rdf:PlainLiteral)) DataHasValue(:dp "s2") :B :A )) 
)
