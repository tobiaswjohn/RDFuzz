Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (

Annotation(Annotation(Annotation( :anq :annotation2)  :ans :annotation2) Annotation(Annotation( :anp :annotation3) Annotation( :anr :annotation3)  :anq :annotation4) Annotation( :anq :annotation1)  :anr :annotation3) 
Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


NegativeObjectPropertyAssertion( :snonsim :a :c)

FunctionalDataProperty( :dq)

DisjointClasses(Annotation( :ans :annotation2)  ObjectHasValue(:ssim :b) ObjectSomeValuesFrom(:qsim ObjectIntersectionOf(DataHasValue(:dp "s3"^^rdfs:Literal) ObjectHasSelf(:psim) DataSomeValuesFrom(:ds xsd:string) ObjectOneOf(:d) :B :C :A DataHasValue(:dr "s2"@de) DataSomeValuesFrom(:ds DataIntersectionOf(DataOneOf("s1"@no)  DataOneOf("s4")  DataOneOf("s3"@fr)  ) ) DataSomeValuesFrom(:ds rdf:PlainLiteral) DataHasValue(:ds "s1"@en) DataHasValue(:dp "s1") DataHasValue(:dr "s4") )) :D )

EquivalentClasses(Annotation( :anr :annotation2)  ObjectSomeValuesFrom(:pnonsim ObjectSomeValuesFrom(:qnonsim :A)) ObjectSomeValuesFrom(:rnonsim :B) ObjectSomeValuesFrom(:rsim :B) :A )

DatatypeDefinition(Annotation( :anr :annotation2)  :dtc DataOneOf("s3"^^xsd:string) )

DataPropertyDomain( :dp ObjectHasValue(:qnonsim :a))

DatatypeDefinition( :dtb rdfs:Literal)

ObjectPropertyAssertion( :snonsim :d :c) 
)
