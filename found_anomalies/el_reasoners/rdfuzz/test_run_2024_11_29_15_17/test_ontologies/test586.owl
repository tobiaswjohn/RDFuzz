Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (

Annotation(Annotation(Annotation( :anp :annotation2) Annotation( :anr :annotation1)  :anr :annotation4) Annotation( :ans :annotation1) Annotation( :anp :annotation3)  :anq :annotation2) 
Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


DisjointClasses( ObjectHasSelf(:rsim) ObjectSomeValuesFrom(:ssim ObjectIntersectionOf(DataSomeValuesFrom(:dp DataOneOf("s4"^^rdf:PlainLiteral) ) :D DataHasValue(:dr "s2"@en) ObjectOneOf(:d) ObjectHasValue(:pnonsim :a) :A :C :B :B :B ObjectHasValue(:rnonsim :c) ObjectHasValue(:qsim :b) DataSomeValuesFrom(:ds DataIntersectionOf(rdf:PlainLiteral xsd:string rdfs:Literal ) ) DataSomeValuesFrom(:dq xsd:string) DataSomeValuesFrom(:dr rdfs:Literal) :C )) )

ObjectPropertyAssertion( :qnonsim :a :a)

ReflexiveObjectProperty( :psim)

EquivalentObjectProperties( :rnonsim :snonsim :pnonsim )

DatatypeDefinition(Annotation( :ans :annotation3)  :dta DataOneOf("s1") ) 
)
