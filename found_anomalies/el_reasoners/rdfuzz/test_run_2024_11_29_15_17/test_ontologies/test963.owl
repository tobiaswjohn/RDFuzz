Prefix(:=<http://www.example.org/reasonerTester#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology (


Declaration(Class(:A))
Declaration(Class(:B))
Declaration(Class(:C))
Declaration(Class(:D))
Declaration(NamedIndividual(:a))
Declaration(NamedIndividual(:b))
Declaration(NamedIndividual(:c))
Declaration(NamedIndividual(:d))
Declaration(ObjectProperty(:psim))
Declaration(ObjectProperty(:qsim))
Declaration(ObjectProperty(:rsim))
Declaration(ObjectProperty(:ssim))
Declaration(ObjectProperty(:pnonsim))
Declaration(ObjectProperty(:qnonsim))
Declaration(ObjectProperty(:rnonsim))
Declaration(ObjectProperty(:snonsim))
Declaration(DataProperty(:dp))
Declaration(DataProperty(:dq))
Declaration(DataProperty(:dr))
Declaration(DataProperty(:ds))
Declaration(AnnotationProperty(:anp))
Declaration(AnnotationProperty(:anq))
Declaration(AnnotationProperty(:anr))
Declaration(AnnotationProperty(:ans))
Declaration(Datatype(:dta))
Declaration(Datatype(:dtb))
Declaration(Datatype(:dtc))


EquivalentClasses(Annotation( :ans :annotation2) Annotation( :anq :annotation3) Annotation( :anr :annotation1) Annotation( :anp :annotation4)  ObjectOneOf(:d) ObjectSomeValuesFrom(:qsim ObjectIntersectionOf(:A DataSomeValuesFrom(:dq rdfs:Literal) )) )

DisjointClasses( DataHasValue(:ds "s2"@fr) ObjectHasSelf(:psim) :C ObjectHasValue(:rnonsim :c) :D :B ObjectHasValue(:qnonsim :a) DataHasValue(:dp "s3"^^xsd:string) DataSomeValuesFrom(:dp DataOneOf("s4") ) DataSomeValuesFrom(:dr DataIntersectionOf(DataOneOf("s1"@de)  rdf:PlainLiteral ) ) DataSomeValuesFrom(:dp DataIntersectionOf(DataIntersectionOf(rdfs:Literal rdf:PlainLiteral )  DataIntersectionOf(xsd:string rdfs:Literal )  ) ) ObjectOneOf(:b) ObjectSomeValuesFrom(:rsim :D) ObjectSomeValuesFrom(:pnonsim :B) )

SubClassOf(Annotation( :anp :annotation3)  ObjectHasValue(:ssim :c) ObjectHasValue(:snonsim :a))

ObjectPropertyRange(Annotation( :ans :annotation4) Annotation( :ans :annotation2) Annotation( :anp :annotation1)  :rnonsim DataHasValue(:ds "s3"@no))

ObjectPropertyAssertion( :rsim :d :c) 
)
